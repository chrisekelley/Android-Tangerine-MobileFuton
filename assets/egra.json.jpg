{"version": "0.1", "file": "`couchapp push dev`\n\nwatch( '.html$') {|match_data|\n  `couchapp push dev` unless match_data[0] =~ /\\.sw.$/\n}\nwatch( '.*testData/.*$') {|match_data|\n  `couchapp push dev` unless match_data[0] =~ /\\.sw.$/\n}\nwatch( '.*\\.json$') {|match_data|\n  `couchapp push dev` unless match_data[0] =~ /\\.sw.$/\n}\nwatch( '(.*\\.coffee$)' ) {|match_data|\n  puts match_data[0]\n  result = `coffee --bare --compile #{match_data[0]} 2>&1`\n  error = false\n  result.each_line{|line|\n    if line.match(/In /)  then\n      error = true\n      puts line\n    end\n  }\n  if not error\n    puts \"Success!\"\n    `make combined`\n    `couchapp push dev`\n  end\n}", "_attachments": {"models/timer.js": {"data": "dmFyIFRpbWVyOwp2YXIgX19iaW5kID0gZnVuY3Rpb24oZm4sIG1lKXsgcmV0dXJuIGZ1bmN0aW9uKCl7IHJldHVybiBmbi5hcHBseShtZSwgYXJndW1lbnRzKTsgfTsgfTsKaWYgKCQuYXNzZXNzbWVudCA9PT0gdm9pZCAwKSB7CiAgdGhyb3cgIk5vIGFzc2Vzc21lbnQgbG9hZGVkIjsKfQokKCJkaXYudGltZXIgYnV0dG9uIikubGl2ZSgnbW91c2Vkb3duJywgZnVuY3Rpb24oZXZlbnREYXRhKSB7CiAgdmFyIGJ1dHRvblByZXNzZWQ7CiAgYnV0dG9uUHJlc3NlZCA9IGV2ZW50RGF0YS50YXJnZXQuaW5uZXJIVE1MOwogIHJldHVybiAkLmFzc2Vzc21lbnQuY3VycmVudFBhZ2UudGltZXJbYnV0dG9uUHJlc3NlZF0oKTsKfSk7ClRpbWVyID0gKGZ1bmN0aW9uKCkgewogIGZ1bmN0aW9uIFRpbWVyKG9wdGlvbnMpIHsKICAgIHRoaXMucGFnZSA9IG9wdGlvbnMucGFnZTsKICAgIHRoaXMuZWxlbWVudExvY2F0aW9uID0gbnVsbDsKICB9CiAgVGltZXIucHJvdG90eXBlLnN0YXJ0ID0gZnVuY3Rpb24oKSB7CiAgICB2YXIgZGVjcmVtZW50OwogICAgdGhpcy5zaG93R3JpZEl0ZW1zKCk7CiAgICBpZiAodGhpcy5ydW5uaW5nKSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRoaXMuc3RhcnRlZCA9IHRydWU7CiAgICB0aGlzLnJ1bm5pbmcgPSB0cnVlOwogICAgdGhpcy50aWNrX3ZhbHVlID0gMTsKICAgIGRlY3JlbWVudCA9IF9fYmluZChmdW5jdGlvbigpIHsKICAgICAgdGhpcy5zZWNvbmRzIC09IHRoaXMudGlja192YWx1ZTsKICAgICAgaWYgKHRoaXMuc2Vjb25kcyA9PT0gMCkgewogICAgICAgIHRoaXMuc3RvcCgpOwogICAgICAgICQuYXNzZXNzbWVudC5mbGFzaCgpOwogICAgICB9CiAgICAgIHJldHVybiB0aGlzLnJlbmRlclNlY29uZHMoKTsKICAgIH0sIHRoaXMpOwogICAgcmV0dXJuIHRoaXMuaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKGRlY3JlbWVudCwgdGhpcy50aWNrX3ZhbHVlICogMTAwMCk7CiAgfTsKICBUaW1lci5wcm90b3R5cGUuc3RvcCA9IGZ1bmN0aW9uKCkgewogICAgdGhpcy5ydW5uaW5nID0gZmFsc2U7CiAgICByZXR1cm4gY2xlYXJJbnRlcnZhbCh0aGlzLmludGVydmFsSWQpOwogIH07CiAgVGltZXIucHJvdG90eXBlLmhhc1N0YXJ0ZWRBbmRTdG9wcGVkID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gKHRoaXMuc2Vjb25kcyAhPT0gNjApICYmICh0aGlzLnJ1bm5pbmcgPT09IGZhbHNlKTsKICB9OwogIFRpbWVyLnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uKCkgewogICAgdGhpcy5zZWNvbmRzID0gNjA7CiAgICByZXR1cm4gdGhpcy5yZW5kZXJTZWNvbmRzKCk7CiAgfTsKICBUaW1lci5wcm90b3R5cGUucmVuZGVyU2Vjb25kcyA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuICQoImRpdiMiICsgdGhpcy5wYWdlLnBhZ2VJZCArICIgLnRpbWVyLXNlY29uZHMiKS5odG1sKHRoaXMuc2Vjb25kcyk7CiAgfTsKICBUaW1lci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24oKSB7CiAgICB0aGlzLmlkID0gInRpbWVyIjsKICAgIHRoaXMuc2Vjb25kcyA9IDYwOwogICAgcmV0dXJuIE11c3RhY2hlLnRvX2h0bWwodGhpcy5fdGVtcGxhdGUoKSwgdGhpcyk7CiAgfTsKICBUaW1lci5wcm90b3R5cGUuaGlkZUdyaWRJdGVtcyA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuICQoIiMiICsgdGhpcy5wYWdlLnBhZ2VJZCArICIgLmdyaWQiKS5yZW1vdmVDbGFzcygic2hvdyIpOwogIH07CiAgVGltZXIucHJvdG90eXBlLnNob3dHcmlkSXRlbXMgPSBmdW5jdGlvbigpIHsKICAgIHJldHVybiAkKCIjIiArIHRoaXMucGFnZS5wYWdlSWQgKyAiIC5ncmlkIikuYWRkQ2xhc3MoInNob3ciKTsKICB9OwogIFRpbWVyLnByb3RvdHlwZS5fdGVtcGxhdGUgPSBmdW5jdGlvbigpIHsKICAgIHJldHVybiAiICA8c3BhbiBjbGFzcz0ndGltZXItc2Vjb25kcyc+PC9zcGFuPiI7CiAgfTsKICByZXR1cm4gVGltZXI7Cn0pKCk7", "content_type": "application/javascript"}, "tests/testData/Assessment.TEST EGRA Prototype.School": {"data": "ewogICJwYWdlSWQiOiAiU2Nob29sIiwKICAicGFnZVR5cGUiOiAiU2Nob29sUGFnZSIsCiAgInNjaG9vbHMiIDogWwogICAgeyAibmFtZSIgOiAiTGlsb25nd2UiLCAicHJvdmluY2UiOiAiQ2VudHJhbCIsICJkaXN0cmljdCI6IkxpbG9uZ3dlIiwgInNjaG9vbElkIiA6ICIxMTQyIn0sCiAgICB7ICJuYW1lIiA6ICJCbGFudHlyZSIsICJwcm92aW5jZSI6ICJCbGFudHlyZSIsICJkaXN0cmljdCI6IkJsYW50eXJlIiwgInNjaG9vbElkIiA6ICIyMTQyIn0sCiAgICB7ICJuYW1lIiA6ICJEZWR6YSIsICJwcm92aW5jZSI6ICJDZW50cmFsIiwgImRpc3RyaWN0IjoiRGVkemEiLCAic2Nob29sSWQiIDogIjI3NDIifSwKICAgIHsgIm5hbWUiIDogIk16dXp1IiwgInByb3ZpbmNlIjogIk5vcnRoIiwgImRpc3RyaWN0IjoiTXp1enUiLCAic2Nob29sSWQiIDogIjk3NDIifSwKICAgIHsgIm5hbWUiIDogIkFuZGVyc29uIiwgInByb3ZpbmNlIjogIk5ldmFkYSIsICJkaXN0cmljdCI6Ildhc2hvZSIsICJzY2hvb2xJZCIgOiAiMjQ0MiJ9LAogICAgeyAibmFtZSIgOiAiSmVzc2llIEJlY2siLCAicHJvdmluY2UiOiAiTmV2YWRhIiwgImRpc3RyaWN0IjoiV2FzaG9lIiwgInNjaG9vbElkIiA6ICIyNDQzIn0sCiAgICB7ICJuYW1lIiA6ICJTd29wZSIsICJwcm92aW5jZSI6ICJOZXZhZGEiLCAiZGlzdHJpY3QiOiAiV2FzaG9lIiwgInNjaG9vbElkIiA6ICI0NDIifSwKICAgIHsgIm5hbWUiIDogIlBpbmUiLCAicHJvdmluY2UiOiAiTmV2YWRhIiwgImRpc3RyaWN0IjogIldhc2hvZSIsICJzY2hvb2xJZCIgOiAiNDQxMiJ9LAogICAgeyAibmFtZSIgOiAiTWFub2d1ZSIsICJwcm92aW5jZSI6ICJOZXZhZGEiLCAiZGlzdHJpY3QiOiJXYXNob2UiLCAic2Nob29sSWQiIDogIjQyIn0sCiAgICB7ICJuYW1lIiA6ICJSZW5vIiwgInByb3ZpbmNlIjogIk5ldmFkYSIsICJkaXN0cmljdCI6IkNhcnNvbiIsICJzY2hvb2xJZCIgOiAiMTQyIn0sCiAgICB7ICJuYW1lIiA6ICJDYXJzb24iLCAicHJvdmluY2UiOiAiTmV2YWRhIiwgImRpc3RyaWN0IjoiQ2Fyc29uIiwgInNjaG9vbElkIiA6ICIxNDQifSwKICAgIHsgIm5hbWUiIDogIlRydWNrZWUiLCAicHJvdmluY2UiOiAiQ2FsaWZvcm5pYSIsICJkaXN0cmljdCI6IlNpZXJyYXMiLCAic2Nob29sSWQiIDogIjI0MiJ9CiAgXSwKICAic2VsZWN0U2Nob29sVGV4dCIgOiAiU2VsZWN0IFNjaG9vbCIsCiAgIm5hbWVUZXh0IiA6ICJOYW1lIiwKICAicHJvdmluY2VUZXh0IiA6ICJQcm92aW5jZSIsCiAgImRpc3RyaWN0VGV4dCIgOiAiRGlzdHJpY3QiLAogICJzY2hvb2xJZFRleHQiIDogIklEIgp9Cg==", "content_type": ""}, "images/icon-search-black.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NzA4NTM4NTRCMDgwMTFERkE3MjhCQTNEQzI2NUU3RTYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NzA4NTM4NTVCMDgwMTFERkE3MjhCQTNEQzI2NUU3RTYiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo3MDg1Mzg1MkIwODAxMURGQTcyOEJBM0RDMjY1RTdFNiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo3MDg1Mzg1M0IwODAxMURGQTcyOEJBM0RDMjY1RTdFNiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PoXpIKcAAAFRSURBVHjalNTPK0RRGMbxY+YKi/ErFpKkLJAVipUs7spCREqKbLC0JGuGhaIwQ5TYWAxLxQZLpfgTRMMCodgo8j31zDSOMdO89eltmnOee2bue68XDoeNKg+9GEY7ynCLY+ziyqSpgHoIOzhEP6oQRCOmcIrJ/wIKsIYRvGAW9ahEB/ZRgohO9yegW1/cow/zuME7LjCEGa1fRIUbMKa+jHOTvhZwhmoMuAGt+MKByVwx9RY3IKSApywBj+rFbkAc+WjIEtCkHncDTjQD4xk2l+suGc3FrwA7JG9aMK37n1o1mpE6XOuCyQr6vv9Af0UPfHShELUYxDratN7OwzMuEwGeehQfmEOnpJYd42YUYSVlTzLA1h6O9DzYZ6EUd/rNdpRHsarJjSRCPOdK9njb4taW/p+oPtvB+wyY3GoDE3ajTrLkmdxrE9+w74HYjwADAKDLQn974v1dAAAAAElFTkSuQmCC", "content_type": "image/png"}, "js-libraries/handlebars.js": {"data": "", "content_type": "application/javascript"}, "images/form-radio-on.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAMAAAC6V+0/AAAAA3NCSVQICAjb4U/gAAAAYFBMVEX///////8AAAAICAjv7+/V1dXMzMysrKwQDxC0tLTn5+fGxsbh4eEpKSkZGRmmpqaNjY2ZmZlLS0uNjY1aWlpCQkIhISF0dHRjY2NCQkIICAg6OjoQDxApKSkICAgZGRkfMLr3AAAAIHRSTlMA/1VVESIiIlXdEREiVVUiIjMzVVVVVWZmZmZ3d4iZqlLfu1MAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBDUzVxteM2AAAAFXRFWHRDcmVhdGlvbiBUaW1lADgvMjAvMTBJWw4MAAAAyUlEQVQYlXXQ7XKEIAxA0bWF4CKwoAlKVXj/t2yCre1Mp/eHH2cAxzwe/6YAIgegfmyCOL9xc4TpNtOps5lue7/7UgXzyH1wcp/7uTqGEMajcsfIj1ELYs7hqM9heNYj5IyCL+99FhPN/PISJPK+Dr3qPZGgISpnu7CdhcgIIpW9XdvbXggFXUTkpfIhXogYnaDZsOxn48694GYElUurMMe0JteHYoF120rhy5rAXj9vdVrW3pK0/R6TdWAWzoC7TQ5WmlO/ZvynTykiD/muLUp/AAAAAElFTkSuQmCC", "content_type": "image/png"}, "google-spreadsheet-javascript/tests/tests.js": {"data": "JChkb2N1bWVudCkucmVhZHkoZnVuY3Rpb24oKSB7CiAgdmFyIHVybDsKICBtb2R1bGUoIkJhc2ljIFVuaXQgVGVzdCIpOwogIHRlc3QoIlNhbXBsZSB0ZXN0IiwgZnVuY3Rpb24oKSB7CiAgICBleHBlY3QoMSk7CiAgICByZXR1cm4gZXF1YWxzKDQgLyAyLCAyKTsKICB9KTsKICBtb2R1bGUoIkdvb2dsZSBTcHJlYWRzaGVldCIpOwogIHVybCA9ICJodHRwczovL3NwcmVhZHNoZWV0cy5nb29nbGUuY29tL3B1Yj9rZXk9MEFnbzMxSlFQWnhacmRIRjJiV05qY1RKRkxYSjZVVU01U2xkRWFrZEVhWGMmaGw9ZW4mb3V0cHV0PWh0bWwiOwogIFFVbml0LnRlc3RTdGFydCA9IGZ1bmN0aW9uKG5hbWUpIHsKICAgIHJldHVybiBjb25zb2xlLmxvZyhuYW1lKTsKICB9OwogIHRlc3QoIkxvYWQgZnJvbSBVUkwiLCBmdW5jdGlvbigpIHsKICAgIHZhciBleHBlY3RlZEpzb25VcmwsIGV4cGVjdGVkS2V5LCBnb29nbGVVcmw7CiAgICBleHBlY3QoMik7CiAgICBleHBlY3RlZEtleSA9ICIwQWdvMzFKUVBaeFpyZEhGMmJXTmpjVEpGTFhKNlVVTTVTbGRFYWtkRWFYYyI7CiAgICBleHBlY3RlZEpzb25VcmwgPSAiaHR0cDovL3NwcmVhZHNoZWV0cy5nb29nbGUuY29tL2ZlZWRzL2NlbGxzLyIgKyBleHBlY3RlZEtleSArICIvb2Q2L3B1YmxpYy9iYXNpYz9hbHQ9anNvbi1pbi1zY3JpcHQiOwogICAgZ29vZ2xlVXJsID0gbmV3IEdvb2dsZVVybCh1cmwpOwogICAgZXF1YWxzKGdvb2dsZVVybC5rZXksIGV4cGVjdGVkS2V5KTsKICAgIHJldHVybiBlcXVhbHMoZ29vZ2xlVXJsLmpzb25VcmwsIGV4cGVjdGVkSnNvblVybCk7CiAgfSk7CiAgdGVzdCgiU2F2ZSBhbmQgZmluZCIsIGZ1bmN0aW9uKCkgewogICAgdmFyIGdvb2dsZVNwcmVhZHNoZWV0LCByZXN1bHQ7CiAgICBnb29nbGVTcHJlYWRzaGVldCA9IG5ldyBHb29nbGVTcHJlYWRzaGVldCgpOwogICAgZ29vZ2xlU3ByZWFkc2hlZXQudXJsKHVybCk7CiAgICBnb29nbGVTcHJlYWRzaGVldC50eXBlID0gInRlc3QiOwogICAgZ29vZ2xlU3ByZWFkc2hlZXQuc2F2ZSgpOwogICAgcmVzdWx0ID0gR29vZ2xlU3ByZWFkc2hlZXQuZmluZCh7CiAgICAgIHVybDogdXJsCiAgICB9KTsKICAgIHJldHVybiBlcXVhbHMoSlNPTi5zdHJpbmdpZnkocmVzdWx0KSwgSlNPTi5zdHJpbmdpZnkoZ29vZ2xlU3ByZWFkc2hlZXQpKTsKICB9KTsKICB0ZXN0KCJMb2FkIGFuZCBwYXJzZSIsIGZ1bmN0aW9uKCkgewogICAgdmFyIGdvb2dsZVNwcmVhZHNoZWV0OwogICAgZXhwZWN0KDEpOwogICAgbG9jYWxTdG9yYWdlLmNsZWFyKCk7CiAgICBnb29nbGVTcHJlYWRzaGVldCA9IG5ldyBHb29nbGVTcHJlYWRzaGVldCgpOwogICAgZ29vZ2xlU3ByZWFkc2hlZXQudXJsKHVybCk7CiAgICBnb29nbGVTcHJlYWRzaGVldC50eXBlID0gInRlc3QiOwogICAgZ29vZ2xlU3ByZWFkc2hlZXQuc2F2ZSgpOwogICAgc3RvcCgpOwogICAgcmV0dXJuIGdvb2dsZVNwcmVhZHNoZWV0LmxvYWQoZnVuY3Rpb24ocmVzdWx0KSB7CiAgICAgIGVxdWFscyhyZXN1bHQuZGF0YS5sZW5ndGgsIDEwKTsKICAgICAgcmV0dXJuIHN0YXJ0KCk7CiAgICB9KTsKICB9KTsKICByZXR1cm4gdGVzdCgiTG9hZCBhbmQgcGFyc2UgbG9uZyBhbmQgY29tcGxleCB0ZXh0IGNlbGwiLCBmdW5jdGlvbigpIHsKICAgIHZhciBnb29nbGVTcHJlYWRzaGVldDsKICAgIGV4cGVjdCgxKTsKICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpOwogICAgZ29vZ2xlU3ByZWFkc2hlZXQgPSBuZXcgR29vZ2xlU3ByZWFkc2hlZXQoKTsKICAgIGdvb2dsZVNwcmVhZHNoZWV0LnVybCgiaHR0cHM6Ly9zcHJlYWRzaGVldHMuZ29vZ2xlLmNvbS9wdWI/a2V5PTBBZ28zMUpRUFp4WnJkR0pTWlRZMk1IVTRWbEozUm5OdGRuTkRWalJqTFZFJmhsPWVuJm91dHB1dD1odG1sIik7CiAgICBnb29nbGVTcHJlYWRzaGVldC50eXBlID0gInRlc3QiOwogICAgZ29vZ2xlU3ByZWFkc2hlZXQuc2F2ZSgpOwogICAgc3RvcCgpOwogICAgcmV0dXJuIGdvb2dsZVNwcmVhZHNoZWV0LmxvYWQoZnVuY3Rpb24ocmVzdWx0KSB7CiAgICAgIGNvbnNvbGUubG9nKHJlc3VsdCk7CiAgICAgIGVxdWFscyhyZXN1bHQuZGF0YVswXS5tYXRjaCgvY29ycmVjdGVtZW50LykubGVuZ3RoLCAxKTsKICAgICAgcmV0dXJuIHN0YXJ0KCk7CiAgICB9KTsKICB9KTsKfSk7", "content_type": "application/javascript"}, "images/TangerineIcon.png": {"data": "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", "content_type": "image/png"}, "tests/tests.coffee": {"data": "", "content_type": ""}, "models/Copy of jqueryMobilePage.coffee": {"data": "", "content_type": ""}, "models/scorer.coffee": {"data": "Y2xhc3MgU2NvcmVyCiAgdXBkYXRlOiAtPgogICAgY29tcGxldGVkID0gd3JvbmcgPSAwCiAgICBmb3IgZWxlbWVudCBpbiAkKCcudWktcGFnZS1hY3RpdmUgLnVpLWNoZWNrYm94IGxhYmVsLnVpLWJ0bicpCiAgICAgIGVsZW1lbnQgPSAkKGVsZW1lbnQpCiAgICAgIHdyb25nKysgaWYgZWxlbWVudC5pcygnLmZpcnN0X2NsaWNrJykKICAgICAgY29tcGxldGVkKysKICAgICAgYnJlYWsgaWYgZWxlbWVudC5pcygnLnNlY29uZF9jbGljaycpCiAgICAkKCcjY29tcGxldGVkJykuaHRtbChjb21wbGV0ZWQpCiAgICAkKCcjd3JvbmcnKS5odG1sKHdyb25nKQoKICByZW5kZXI6IC0+CiAgICBAaWQgPSAic2NvcmVyIgogICAgc2V0SW50ZXJ2YWwoIHRoaXMudXBkYXRlLCA1MDApCiAgICBNdXN0YWNoZS50b19odG1sKEBfdGVtcGxhdGUoKSx0aGlzKQoKICBfdGVtcGxhdGU6IC0+ICIKPGRpdiBjbGFzcz0nc2NvcmVyJz4KICA8c21hbGw+CiAgQ29tcGxldGVkOjxzcGFuIGlkPSdjb21wbGV0ZWQnPjwvc3Bhbj4KICBXcm9uZzo8c3BhbiBpZD0nd3JvbmcnPjwvc3Bhbj4KICA8L3NtYWxsPgo8L2Rpdj4KIgoK", "content_type": ""}, "tests/testData/Assessment.TEST EGRA Prototype.DateTime": {"data": "eyJwYWdlSWQiOiJEYXRlVGltZSIsInBhZ2VUeXBlIjoiRGF0ZVRpbWVQYWdlIn0K", "content_type": ""}, "tests/testData/Assessment.TEST EGRA Prototype.Results": {"data": "eyJwYWdlSWQiOiJSZXN1bHRzIiwicGFnZVR5cGUiOiJSZXN1bHRzUGFnZSJ9Cg==", "content_type": ""}, "js-libraries/jquery-1.6.2.min.js": {"data": "", "content_type": "application/javascript"}, "images/ajax-loader.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAACMAAAAjBAMAAADs965qAAAAA3NCSVQICAjb4U/gAAAAMFBMVEX////x8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHvvEhiAAAAEHRSTlMAESIzRFVmd4iZqrvM3e7/dpUBFQAAAAlwSFlzAAAK6wAACusBgosNWgAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAEaSURBVCiRY2AgATCapaUqoIiIzN5z5syZJiQRltW7gUJ3705C6OraDRG6GwATkli1evdusNBTuKJVq3c4MjBX3733DqqMfdWqFWDbau+9ewIRspy5KgHMYL737g1EX+fMaVAjbN+9KwDLzZxZAHPMu3cXwEbNnAl397p3YDslOmD6GBjs/v8AURodzXAh3v+/QZRHRyNciPP/f4hQA1yIHVMICtzLC9CFzMuL0IXEy0vQhdjK0+BsRqgv0tIMYEKCggJgmbS0QJgiQUEIwy0tVQCmCCokmhYaCFMElWMKDQ01BIkoKcKEGFRDQ1yMlISUgEIwe5iAQi7GxkpKSjBFwMh2cXEGCSkiOVcFLIQswsAgZGxshCpCBgAA0FNYp5zwDegAAAAASUVORK5CYII=", "content_type": "image/png"}, "google-spreadsheet-javascript/tests/testsCallbackData.json": {"data": "", "content_type": "application/json"}, "images/icons-36-black.png": {"data": "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", "content_type": "image/png"}, "google-spreadsheet-javascript/google-spreadsheet.js": {"data": "LyoKVXBkYXRlZCB2ZXJzaW9ucyBjYW4gYmUgZm91bmQgYXQgaHR0cHM6Ly9naXRodWIuY29tL21pa2V5bWNrYXkvZ29vZ2xlLXNwcmVhZHNoZWV0LWphdmFzY3JpcHQKKi92YXIgR29vZ2xlU3ByZWFkc2hlZXQsIEdvb2dsZVVybDsKR29vZ2xlVXJsID0gKGZ1bmN0aW9uKCkgewogIGZ1bmN0aW9uIEdvb2dsZVVybChzb3VyY2VJZGVudGlmaWVyKSB7CiAgICB0aGlzLnNvdXJjZUlkZW50aWZpZXIgPSBzb3VyY2VJZGVudGlmaWVyOwogICAgaWYgKHRoaXMuc291cmNlSWRlbnRpZmllci5tYXRjaCgvaHR0cChzKSo6LykpIHsKICAgICAgdGhpcy51cmwgPSB0aGlzLnNvdXJjZUlkZW50aWZpZXI7CiAgICAgIHRyeSB7CiAgICAgICAgdGhpcy5rZXkgPSB0aGlzLnVybC5tYXRjaCgva2V5PSguKj8pJi8pWzFdOwogICAgICB9IGNhdGNoIChlcnJvcikgewogICAgICAgIHRoaXMua2V5ID0gdGhpcy51cmwubWF0Y2goLyhjZWxsc3xsaXN0KVwvKC4qPylcLy8pWzJdOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICB0aGlzLmtleSA9IHRoaXMuc291cmNlSWRlbnRpZmllcjsKICAgIH0KICAgIHRoaXMuanNvbkNlbGxzVXJsID0gImh0dHA6Ly9zcHJlYWRzaGVldHMuZ29vZ2xlLmNvbS9mZWVkcy9jZWxscy8iICsgdGhpcy5rZXkgKyAiL29kNi9wdWJsaWMvYmFzaWM/YWx0PWpzb24taW4tc2NyaXB0IjsKICAgIHRoaXMuanNvbkxpc3RVcmwgPSAiaHR0cDovL3NwcmVhZHNoZWV0cy5nb29nbGUuY29tL2ZlZWRzL2xpc3QvIiArIHRoaXMua2V5ICsgIi9vZDYvcHVibGljL2Jhc2ljP2FsdD1qc29uLWluLXNjcmlwdCI7CiAgICB0aGlzLmpzb25VcmwgPSB0aGlzLmpzb25DZWxsc1VybDsKICB9CiAgcmV0dXJuIEdvb2dsZVVybDsKfSkoKTsKR29vZ2xlU3ByZWFkc2hlZXQgPSAoZnVuY3Rpb24oKSB7CiAgZnVuY3Rpb24gR29vZ2xlU3ByZWFkc2hlZXQoKSB7fQogIEdvb2dsZVNwcmVhZHNoZWV0LnByb3RvdHlwZS5sb2FkID0gZnVuY3Rpb24oY2FsbGJhY2spIHsKICAgIHZhciBpbnRlcnZhbElkLCBqc29uVXJsLCBzYWZldHlDb3VudGVyLCB1cmwsIHdhaXRVbnRpbExvYWRlZDsKICAgIHVybCA9IHRoaXMuZ29vZ2xlVXJsLmpzb25DZWxsc1VybCArICImY2FsbGJhY2s9R29vZ2xlU3ByZWFkc2hlZXQuY2FsbGJhY2tDZWxscyI7CiAgICAkKCdib2R5JykuYXBwZW5kKCI8c2NyaXB0IHNyYz0nIiArIHVybCArICInLz4iKTsKICAgIGpzb25VcmwgPSB0aGlzLmpzb25Vcmw7CiAgICBzYWZldHlDb3VudGVyID0gMDsKICAgIHdhaXRVbnRpbExvYWRlZCA9IGZ1bmN0aW9uKCkgewogICAgICB2YXIgcmVzdWx0OwogICAgICByZXN1bHQgPSBHb29nbGVTcHJlYWRzaGVldC5maW5kKHsKICAgICAgICBqc29uVXJsOiBqc29uVXJsCiAgICAgIH0pOwogICAgICBpZiAoc2FmZXR5Q291bnRlcisrID4gMzAgfHwgKChyZXN1bHQgIT0gbnVsbCkgJiYgKHJlc3VsdC5kYXRhICE9IG51bGwpKSkgewogICAgICAgIGNsZWFySW50ZXJ2YWwoaW50ZXJ2YWxJZCk7CiAgICAgICAgcmV0dXJuIGNhbGxiYWNrKHJlc3VsdCk7CiAgICAgIH0KICAgIH07CiAgICBpbnRlcnZhbElkID0gc2V0SW50ZXJ2YWwod2FpdFVudGlsTG9hZGVkLCAyMDApOwogICAgaWYgKHR5cGVvZiByZXN1bHQgIT0gInVuZGVmaW5lZCIgJiYgcmVzdWx0ICE9PSBudWxsKSB7CiAgICAgIHJldHVybiByZXN1bHQ7CiAgICB9CiAgfTsKICBHb29nbGVTcHJlYWRzaGVldC5wcm90b3R5cGUudXJsID0gZnVuY3Rpb24odXJsKSB7CiAgICByZXR1cm4gdGhpcy5nb29nbGVVcmwobmV3IEdvb2dsZVVybCh1cmwpKTsKICB9OwogIEdvb2dsZVNwcmVhZHNoZWV0LnByb3RvdHlwZS5nb29nbGVVcmwgPSBmdW5jdGlvbihnb29nbGVVcmwpIHsKICAgIGlmICh0eXBlb2YgZ29vZ2xlVXJsID09PSAic3RyaW5nIikgewogICAgICB0aHJvdyAiSW52YWxpZCB1cmwsIGV4cGVjdGluZyBvYmplY3Qgbm90IHN0cmluZyI7CiAgICB9CiAgICB0aGlzLnVybCA9IGdvb2dsZVVybC51cmw7CiAgICB0aGlzLmtleSA9IGdvb2dsZVVybC5rZXk7CiAgICB0aGlzLmpzb25VcmwgPSBnb29nbGVVcmwuanNvblVybDsKICAgIHJldHVybiB0aGlzLmdvb2dsZVVybCA9IGdvb2dsZVVybDsKICB9OwogIEdvb2dsZVNwcmVhZHNoZWV0LnByb3RvdHlwZS5zYXZlID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gbG9jYWxTdG9yYWdlWyJHb29nbGVTcHJlYWRzaGVldC4iICsgdGhpcy5rZXldID0gSlNPTi5zdHJpbmdpZnkodGhpcyk7CiAgfTsKICByZXR1cm4gR29vZ2xlU3ByZWFkc2hlZXQ7Cn0pKCk7Ckdvb2dsZVNwcmVhZHNoZWV0LmJsZXNzID0gZnVuY3Rpb24ob2JqZWN0KSB7CiAgdmFyIGtleSwgcmVzdWx0LCB2YWx1ZTsKICByZXN1bHQgPSBuZXcgR29vZ2xlU3ByZWFkc2hlZXQoKTsKICBmb3IgKGtleSBpbiBvYmplY3QpIHsKICAgIHZhbHVlID0gb2JqZWN0W2tleV07CiAgICByZXN1bHRba2V5XSA9IHZhbHVlOwogIH0KICByZXR1cm4gcmVzdWx0Owp9OwpHb29nbGVTcHJlYWRzaGVldC5maW5kID0gZnVuY3Rpb24ocGFyYW1zKSB7CiAgdmFyIGl0ZW0sIGl0ZW1PYmplY3QsIGtleSwgdmFsdWUsIF9pLCBfbGVuOwogIHRyeSB7CiAgICBmb3IgKGl0ZW0gaW4gbG9jYWxTdG9yYWdlKSB7CiAgICAgIGlmIChpdGVtLm1hdGNoKC9eR29vZ2xlU3ByZWFkc2hlZXRcLi8pKSB7CiAgICAgICAgaXRlbU9iamVjdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlW2l0ZW1dKTsKICAgICAgICBmb3IgKGtleSBpbiBwYXJhbXMpIHsKICAgICAgICAgIHZhbHVlID0gcGFyYW1zW2tleV07CiAgICAgICAgICBpZiAoaXRlbU9iamVjdFtrZXldID09PSB2YWx1ZSkgewogICAgICAgICAgICByZXR1cm4gR29vZ2xlU3ByZWFkc2hlZXQuYmxlc3MoaXRlbU9iamVjdCk7CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIGZvciAoX2kgPSAwLCBfbGVuID0gbG9jYWxTdG9yYWdlLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgIGl0ZW0gPSBsb2NhbFN0b3JhZ2VbX2ldOwogICAgICBpZiAoaXRlbS5tYXRjaCgvXkdvb2dsZVNwcmVhZHNoZWV0XC4vKSkgewogICAgICAgIGl0ZW1PYmplY3QgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZVtpdGVtXSk7CiAgICAgICAgZm9yIChrZXkgaW4gcGFyYW1zKSB7CiAgICAgICAgICB2YWx1ZSA9IHBhcmFtc1trZXldOwogICAgICAgICAgaWYgKGl0ZW1PYmplY3Rba2V5XSA9PT0gdmFsdWUpIHsKICAgICAgICAgICAgcmV0dXJuIEdvb2dsZVNwcmVhZHNoZWV0LmJsZXNzKGl0ZW1PYmplY3QpOwogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KICByZXR1cm4gbnVsbDsKfTsKR29vZ2xlU3ByZWFkc2hlZXQuY2FsbGJhY2tDZWxscyA9IGZ1bmN0aW9uKGRhdGEpIHsKICB2YXIgY2VsbCwgZ29vZ2xlU3ByZWFkc2hlZXQsIGdvb2dsZVVybDsKICBnb29nbGVVcmwgPSBuZXcgR29vZ2xlVXJsKGRhdGEuZmVlZC5pZC4kdCk7CiAgZ29vZ2xlU3ByZWFkc2hlZXQgPSBHb29nbGVTcHJlYWRzaGVldC5maW5kKHsKICAgIGpzb25Vcmw6IGdvb2dsZVVybC5qc29uVXJsCiAgfSk7CiAgaWYgKGdvb2dsZVNwcmVhZHNoZWV0ID09PSBudWxsKSB7CiAgICBnb29nbGVTcHJlYWRzaGVldCA9IG5ldyBHb29nbGVTcHJlYWRzaGVldCgpOwogICAgZ29vZ2xlU3ByZWFkc2hlZXQuZ29vZ2xlVXJsKGdvb2dsZVVybCk7CiAgfQogIGdvb2dsZVNwcmVhZHNoZWV0LmRhdGEgPSAoZnVuY3Rpb24oKSB7CiAgICB2YXIgX2ksIF9sZW4sIF9yZWYsIF9yZXN1bHRzOwogICAgX3JlZiA9IGRhdGEuZmVlZC5lbnRyeTsKICAgIF9yZXN1bHRzID0gW107CiAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgY2VsbCA9IF9yZWZbX2ldOwogICAgICBfcmVzdWx0cy5wdXNoKGNlbGwuY29udGVudC4kdCk7CiAgICB9CiAgICByZXR1cm4gX3Jlc3VsdHM7CiAgfSkoKTsKICBnb29nbGVTcHJlYWRzaGVldC5zYXZlKCk7CiAgcmV0dXJuIGdvb2dsZVNwcmVhZHNoZWV0Owp9OwovKiBUT0RPIChIYW5kbGUgcm93IGJhc2VkIGRhdGEpCkdvb2dsZVNwcmVhZHNoZWV0LmNhbGxiYWNrTGlzdCA9IChkYXRhKSAtPiov", "content_type": "application/javascript"}, "js-libraries/jquery-mobile/images/icons-36-black.png": {"data": "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", "content_type": "image/png"}, "js-libraries/jquery.couch.js": {"data": "", "content_type": "application/javascript"}, "models/jqueryMobilePage.js": {"data": "", "content_type": "application/javascript"}, "js-libraries/inflection.js": {"data": "", "content_type": "application/javascript"}, "google-spreadsheet-javascript/sample.html": {"data": "PCFET0NUWVBFIGh0bWw+IAo8aHRtbD4gCgk8aGVhZD4gCiAgICA8dGl0bGU+R29vZ2xlIFNwcmVhZHNoZWV0IEphdmFzY3JpcHQ8L3RpdGxlPiAKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImpxdWVyeS0xLjQuNC5taW4uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iZ29vZ2xlLXNwcmVhZHNoZWV0LmpzIj48L3NjcmlwdD4KICAgIDxzdHlsZT4KICAgICAgYm9keXsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsKICAgICAgICBjb2xvcjogZ3JlZW47CiAgICAgICAgZm9udC1zaXplOiAuOGVtOwogICAgICAgIGZvbnQtZmFtaWx5OiBzYW5zLXNlcmlmOwogICAgICB9CiAgICAgIGgxLGF7IGNvbG9yOiB5ZWxsb3d9CiAgICAgIGlucHV0ewogICAgICAgIGZvbnQtc2l6ZTogLjhlbTsKICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBibGFjazsKICAgICAgICBjb2xvcjp3aGl0ZTsKICAgICAgfQogICAgPC9zdHlsZT4KICA8L2hlYWQ+IAogIDxib2R5PiAKICAgIDxoMT5Hb29nbGUgU3ByZWFkc2hlZXQgSmF2YXNjcmlwdDwvaDE+CiAgICBIZXJlIGlzIHRoZSBtb3N0IGJhc2ljIHVzYWdlOgogICAgPHByZSBpZD0nY29kZSc+PC9wcmU+CiAgICBBbmQgaGVyZSBhcmUgdGhlIHJlc3VsdHM6CiAgICA8cHJlIGlkPSdyZXN1bHRzJz48L3ByZT4KICAgIDxkaXYgaWQ9J2xpbmtzJz4KICAgICAgR2l0aHViIFVSTDogPGEgaHJlZj0naHR0cHM6Ly9naXRodWIuY29tL21pa2V5bWNrYXkvZ29vZ2xlLXNwcmVhZHNoZWV0LWphdmFzY3JpcHQnPmh0dHBzOi8vZ2l0aHViLmNvbS9taWtleW1ja2F5L2dvb2dsZS1zcHJlYWRzaGVldC1qYXZhc2NyaXB0PC9hPjxici8+CiAgICAgIFNvdXJjZSBVUkwgZm9yIGFib3ZlIHNwcmVhZHNoZWV0IGRhdGE6IDxzcGFuIGlkPSdzcHJlYWRzaGVldF91cmwnPjwvc3Bhbj48YnIvPgogICAgICBUcnkgeW91ciBvd24gc3ByZWFkc2hlZXQgKG5lZWRzIHRvIGJlIDxhIGhyZWY9J2h0dHBzOi8vZG9jcy5nb29nbGUuY29tL3N1cHBvcnQvYmluL2Fuc3dlci5weT9obD1lbiZhbnN3ZXI9NDcxMzQnPnB1Ymxpc2hlZDwvYT4pOjxici8+CiAgICAgIDxpbnB1dCBzdHlsZT0nd2lkdGg6NzAwcHgnIG5hbWU9J3VybCcgdHlwZT0ndGV4dCc+PC9pbnB1dD4KICAgICAgPGlucHV0IG9uY2xpY2s9J2RvY3VtZW50LmxvY2F0aW9uID0gZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUgKyAiP3VybD0iKyQoImlucHV0W25hbWVdIikudmFsKCknIHR5cGU9J3N1Ym1pdCc+PC9pbnB1dD4KICAgIDwvZGl2PgogICAgPGlmcmFtZSB3aWR0aD0nNTAwJyBoZWlnaHQ9JzMwMCcgZnJhbWVib3JkZXI9JzAnID48L2lmcmFtZT4KICAgIDxzY3JpcHQ+CiAgICA8L3NjcmlwdD4KICAgIDxzY3JpcHQgaWQ9J3NjcmlwdCc+CiAgICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpOwogICAgICB2YXIgc2FtcGxlX3VybCA9ICJodHRwczovL3NwcmVhZHNoZWV0cy5nb29nbGUuY29tL3B1Yj9rZXk9MEFnbzMxSlFQWnhacmRIRjJiV05qY1RKRkxYSjZVVU01U2xkRWFrZEVhWGMmaGw9ZW4mb3V0cHV0PWh0bWwiOwogICAgICB2YXIgdXJsX3BhcmFtZXRlciA9IGRvY3VtZW50LmxvY2F0aW9uLnNlYXJjaC5zcGxpdCgvXD91cmw9LylbMV0KICAgICAgdmFyIHVybCA9IHVybF9wYXJhbWV0ZXIgfHwgc2FtcGxlX3VybDsKICAgICAgdmFyIGdvb2dsZVNwcmVhZHNoZWV0ID0gbmV3IEdvb2dsZVNwcmVhZHNoZWV0KCk7CiAgICAgIGdvb2dsZVNwcmVhZHNoZWV0LnVybCh1cmwpOwogICAgICBnb29nbGVTcHJlYWRzaGVldC5sb2FkKGZ1bmN0aW9uKHJlc3VsdCkgewogICAgICAgICQoJyNyZXN1bHRzJykuaHRtbChKU09OLnN0cmluZ2lmeShyZXN1bHQpLnJlcGxhY2UoLywvZywiLFxuIikpOwogICAgICB9KTsKICAgIDwvc2NyaXB0PgogICAgPHNjcmlwdD4KICAgICAgJCgnI2NvZGUnKS5odG1sKCQoJyNzY3JpcHQnKS5odG1sKCkpCiAgICAgICQoJyNzcHJlYWRzaGVldF91cmwnKS5odG1sKCI8YSBocmVmPSciK3VybCsiJz4iK3VybCsiPC9hPiIpOwogICAgICAkKCcjaWZyYW1lJykuYXR0cigic3JjIix1cmwpOwogICAgICAkKCdpbnB1dFtuYW1lXScpLnZhbCh1cmwpOwogICAgICBpZiAodXJsICE9IHNhbXBsZV91cmwpewogICAgICAgICQoImRpdiNsaW5rcyIpLmFwcGVuZCgiPGJyLz48YSBocmVmPSciK2RvY3VtZW50LmxvY2F0aW9uLnBhdGhuYW1lKyInPk9yaWdpbmFsIFNhbXBsZSBTcHJlYWRzaGVldDwvYT4iKQogICAgICB9CiAgICA8L3NjcmlwdD4KICA8L2JvZHk+CjwvaHRtbD4KCg==", "content_type": "text/html"}, "models/assessment.js": {"data": "dmFyIEFzc2Vzc21lbnQ7CnZhciBfX2JpbmQgPSBmdW5jdGlvbihmbiwgbWUpeyByZXR1cm4gZnVuY3Rpb24oKXsgcmV0dXJuIGZuLmFwcGx5KG1lLCBhcmd1bWVudHMpOyB9OyB9OwokLmFzc2Vzc21lbnQgPSBudWxsOwokLmNvdWNoREJEYXRhYmFzZVBhdGggPSAnL2VncmEvJzsKQXNzZXNzbWVudCA9IChmdW5jdGlvbigpIHsKICBmdW5jdGlvbiBBc3Nlc3NtZW50KG5hbWUpIHsKICAgIHRoaXMubmFtZSA9IG5hbWU7CiAgICB0aGlzLnVybFBhdGggPSAiQXNzZXNzbWVudC4iICsgdGhpcy5uYW1lOwogIH0KICBBc3Nlc3NtZW50LnByb3RvdHlwZS5jaGFuZ2VOYW1lID0gZnVuY3Rpb24obmV3TmFtZSkgewogICAgdmFyIHBhZ2UsIF9pLCBfbGVuLCBfcmVmLCBfcmVzdWx0czsKICAgIHRoaXMubmFtZSA9IG5ld05hbWU7CiAgICB0aGlzLnVybFBhdGggPSAiQXNzZXNzbWVudC4iICsgdGhpcy5uYW1lOwogICAgdGhpcy51cmxQYXRoc0ZvclBhZ2VzID0gW107CiAgICBfcmVmID0gdGhpcy5wYWdlczsKICAgIF9yZXN1bHRzID0gW107CiAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgcGFnZSA9IF9yZWZbX2ldOwogICAgICBwYWdlLnVybFBhdGggPSB0aGlzLnVybFBhdGggKyAiLiIgKyBwYWdlLnBhZ2VJZDsKICAgICAgX3Jlc3VsdHMucHVzaCh0aGlzLnVybFBhdGhzRm9yUGFnZXMucHVzaChwYWdlLnVybFBhdGgpKTsKICAgIH0KICAgIHJldHVybiBfcmVzdWx0czsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLnNldFBhZ2VzID0gZnVuY3Rpb24ocGFnZXMpIHsKICAgIHZhciBpbmRleCwgcGFnZSwgX2xlbiwgX3JlZiwgX3Jlc3VsdHM7CiAgICB0aGlzLnBhZ2VzID0gcGFnZXM7CiAgICB0aGlzLnVybFBhdGhzRm9yUGFnZXMgPSBbXTsKICAgIF9yZWYgPSB0aGlzLnBhZ2VzOwogICAgX3Jlc3VsdHMgPSBbXTsKICAgIGZvciAoaW5kZXggPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IGluZGV4IDwgX2xlbjsgaW5kZXgrKykgewogICAgICBwYWdlID0gX3JlZltpbmRleF07CiAgICAgIHBhZ2UuYXNzZXNzbWVudCA9IHRoaXM7CiAgICAgIHBhZ2UucGFnZU51bWJlciA9IGluZGV4OwogICAgICBpZiAoaW5kZXggIT09IDApIHsKICAgICAgICBwYWdlLnByZXZpb3VzUGFnZSA9IHRoaXMucGFnZXNbaW5kZXggLSAxXS5wYWdlSWQ7CiAgICAgIH0KICAgICAgaWYgKHRoaXMucGFnZXMubGVuZ3RoICE9PSBpbmRleCArIDEpIHsKICAgICAgICBwYWdlLm5leHRQYWdlID0gdGhpcy5wYWdlc1tpbmRleCArIDFdLnBhZ2VJZDsKICAgICAgfQogICAgICBwYWdlLnVybFNjaGVtZSA9IHRoaXMudXJsU2NoZW1lOwogICAgICBwYWdlLnVybFBhdGggPSB0aGlzLnVybFBhdGggKyAiLiIgKyBwYWdlLnBhZ2VJZDsKICAgICAgX3Jlc3VsdHMucHVzaCh0aGlzLnVybFBhdGhzRm9yUGFnZXMucHVzaChwYWdlLnVybFBhdGgpKTsKICAgIH0KICAgIHJldHVybiBfcmVzdWx0czsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLmdldFBhZ2UgPSBmdW5jdGlvbihwYWdlSWQpIHsKICAgIHZhciBwYWdlLCBfaSwgX2xlbiwgX3JlZjsKICAgIF9yZWYgPSB0aGlzLnBhZ2VzOwogICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgIHBhZ2UgPSBfcmVmW19pXTsKICAgICAgaWYgKHBhZ2UucGFnZUlkID09PSBwYWdlSWQpIHsKICAgICAgICByZXR1cm4gcGFnZTsKICAgICAgfQogICAgfQogIH07CiAgQXNzZXNzbWVudC5wcm90b3R5cGUuaW5zZXJ0UGFnZSA9IGZ1bmN0aW9uKHBhZ2UsIHBhZ2VOdW1iZXIpIHsKICAgIHRoaXMucGFnZXMuc3BsaWNlKHBhZ2VOdW1iZXIsIDAsIHBhZ2UpOwogICAgcmV0dXJuIHRoaXMuc2V0UGFnZXModGhpcy5wYWdlcyk7CiAgfTsKICBBc3Nlc3NtZW50LnByb3RvdHlwZS51cmwgPSBmdW5jdGlvbigpIHsKICAgIHJldHVybiAiIiArIHRoaXMudXJsU2NoZW1lICsgIjovLyIgKyB0aGlzLnVybFBhdGg7CiAgfTsKICBBc3Nlc3NtZW50LnByb3RvdHlwZS5sb2dpblBhZ2UgPSBmdW5jdGlvbigpIHsKICAgIHJldHVybiAkLmFzc2Vzc21lbnQucGFnZXNbMF07CiAgfTsKICBBc3Nlc3NtZW50LnByb3RvdHlwZS5jdXJyZW50VXNlciA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIHRoaXMubG9naW5QYWdlKCkucmVzdWx0cygpLnVzZXJuYW1lOwogIH07CiAgQXNzZXNzbWVudC5wcm90b3R5cGUuY3VycmVudFBhc3N3b3JkID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gdGhpcy5sb2dpblBhZ2UoKS5yZXN1bHRzKCkucGFzc3dvcmQ7CiAgfTsKICBBc3Nlc3NtZW50LnByb3RvdHlwZS5oYXNVc2VyQXV0aGVudGljYXRlZCA9IGZ1bmN0aW9uKCkgewogICAgdmFyIGxvZ2luUmVzdWx0czsKICAgIGxvZ2luUmVzdWx0cyA9IHRoaXMubG9naW5QYWdlKCkucmVzdWx0cygpOwogICAgcmV0dXJuIGxvZ2luUmVzdWx0cy51c2VybmFtZSAhPT0gIiIgJiYgbG9naW5SZXN1bHRzLnBhc3N3b3JkICE9PSAiIjsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLnJlc3VsdHMgPSBmdW5jdGlvbigpIHsKICAgIHZhciBwYWdlLCByZXN1bHRzLCBfaSwgX2xlbiwgX3JlZjsKICAgIHJlc3VsdHMgPSB7fTsKICAgIF9yZWYgPSB0aGlzLnBhZ2VzOwogICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgIHBhZ2UgPSBfcmVmW19pXTsKICAgICAgcmVzdWx0c1twYWdlLnBhZ2VJZF0gPSBwYWdlLnJlc3VsdHMoKTsKICAgIH0KICAgIHJlc3VsdHMudGltZXN0YW1wID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7CiAgICByZXR1cm4gcmVzdWx0czsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLnNhdmVSZXN1bHRzID0gZnVuY3Rpb24oY2FsbGJhY2spIHsKICAgIHZhciByZXN1bHRzLCB1cmw7CiAgICByZXN1bHRzID0gdGhpcy5yZXN1bHRzKCk7CiAgICB1cmwgPSAkLmNvdWNoREJEYXRhYmFzZVBhdGg7CiAgICByZXR1cm4gJC5hamF4KHsKICAgICAgdXJsOiB1cmwsCiAgICAgIGFzeW5jOiB0cnVlLAogICAgICB0eXBlOiAnUE9TVCcsCiAgICAgIGNvbnRlbnRUeXBlOiAnYXBwbGljYXRpb24vanNvbicsCiAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KHJlc3VsdHMpLAogICAgICBlcnJvcjogZnVuY3Rpb24oKSB7CiAgICAgICAgdGhyb3cgIkNvdWxkIG5vdCBQVVQgdG8gIiArIHVybDsKICAgICAgfSwKICAgICAgY29tcGxldGU6IGZ1bmN0aW9uKCkgewogICAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsKSB7CiAgICAgICAgICByZXR1cm4gY2FsbGJhY2socmVzdWx0cyk7CiAgICAgICAgfQogICAgICB9CiAgICB9KTsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLnJlc2V0VVJMID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gZG9jdW1lbnQubG9jYXRpb24ucGF0aG5hbWUgKyBkb2N1bWVudC5sb2NhdGlvbi5zZWFyY2g7CiAgfTsKICBBc3Nlc3NtZW50LnByb3RvdHlwZS5yZXNldCA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIGRvY3VtZW50LmxvY2F0aW9uID0gdGhpcy5yZXNldFVSTCgpOwogIH07CiAgQXNzZXNzbWVudC5wcm90b3R5cGUudmFsaWRhdGUgPSBmdW5jdGlvbigpIHsKICAgIHZhciBwYWdlLCBwYWdlUmVzdWx0LCB2YWxpZGF0aW9uRXJyb3JzLCBfaSwgX2xlbiwgX3JlZjsKICAgIHZhbGlkYXRpb25FcnJvcnMgPSAiIjsKICAgIF9yZWYgPSB0aGlzLnBhZ2VzOwogICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgIHBhZ2UgPSBfcmVmW19pXTsKICAgICAgcGFnZVJlc3VsdCA9IHBhZ2UudmFsaWRhdGUoKTsKICAgICAgaWYgKHBhZ2VSZXN1bHQgIT09IHRydWUpIHsKICAgICAgICB2YWxpZGF0aW9uRXJyb3JzICs9ICInIiArIChwYWdlLm5hbWUoKSkgKyAiJyBwYWdlIGludmFsaWQ6ICIgKyBwYWdlUmVzdWx0ICsgIiA8YnIvPiI7CiAgICAgIH0KICAgIH0KICAgIGlmICh2YWxpZGF0aW9uRXJyb3JzICE9PSAiIikgewogICAgICByZXR1cm4gdmFsaWRhdGlvbkVycm9yczsKICAgIH0gZWxzZSB7CiAgICAgIHJldHVybiB0cnVlOwogICAgfQogIH07CiAgQXNzZXNzbWVudC5wcm90b3R5cGUudG9KU09OID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gSlNPTi5zdHJpbmdpZnkoewogICAgICBuYW1lOiB0aGlzLm5hbWUsCiAgICAgIHVybFBhdGhzRm9yUGFnZXM6IHRoaXMudXJsUGF0aHNGb3JQYWdlcwogICAgfSk7CiAgfTsKICBBc3Nlc3NtZW50LnByb3RvdHlwZS5zYXZlID0gZnVuY3Rpb24oKSB7CiAgICBzd2l0Y2ggKHRoaXMudXJsU2NoZW1lKSB7CiAgICAgIGNhc2UgImxvY2Fsc3RvcmFnZSI6CiAgICAgICAgcmV0dXJuIHRoaXMuc2F2ZVRvTG9jYWxTdG9yYWdlKCk7CiAgICAgIGRlZmF1bHQ6CiAgICAgICAgdGhyb3cgIlVSTCB0eXBlIG5vdCB5ZXQgaW1wbGVtZW50ZWQ6ICIgKyB0aGlzLnVybFNjaGVtZTsKICAgIH0KICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLnNhdmVUb0xvY2FsU3RvcmFnZSA9IGZ1bmN0aW9uKCkgewogICAgdmFyIHBhZ2UsIF9pLCBfbGVuLCBfcmVmLCBfcmVzdWx0czsKICAgIHRoaXMudXJsU2NoZW1lID0gImxvY2Fsc3RvcmFnZSI7CiAgICBsb2NhbFN0b3JhZ2VbdGhpcy51cmxQYXRoXSA9IHRoaXMudG9KU09OKCk7CiAgICBfcmVmID0gdGhpcy5wYWdlczsKICAgIF9yZXN1bHRzID0gW107CiAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgcGFnZSA9IF9yZWZbX2ldOwogICAgICBfcmVzdWx0cy5wdXNoKHBhZ2Uuc2F2ZVRvTG9jYWxTdG9yYWdlKCkpOwogICAgfQogICAgcmV0dXJuIF9yZXN1bHRzOwogIH07CiAgQXNzZXNzbWVudC5wcm90b3R5cGUuc2F2ZVRvQ291Y2hEQiA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7CiAgICB0aGlzLnVybFNjaGVtZSA9ICJodHRwIjsKICAgIGlmICh0aGlzLnVybFBhdGhbMF0gIT09ICIvIikgewogICAgICB0aGlzLnVybFBhdGggPSAkLmNvdWNoREJEYXRhYmFzZVBhdGggKyB0aGlzLnVybFBhdGg7CiAgICB9CiAgICAkLmFqYXgoewogICAgICB1cmw6IHRoaXMudXJsUGF0aCwKICAgICAgYXN5bmM6IHRydWUsCiAgICAgIHR5cGU6ICdQVVQnLAogICAgICBkYXRhVHlwZTogJ2pzb24nLAogICAgICBkYXRhOiB0aGlzLnRvSlNPTigpLAogICAgICBzdWNjZXNzOiBfX2JpbmQoZnVuY3Rpb24ocmVzdWx0KSB7CiAgICAgICAgdmFyIHBhZ2UsIF9pLCBfbGVuLCBfcmVmOwogICAgICAgIHRoaXMucmV2aXNpb24gPSByZXN1bHQucmV2OwogICAgICAgIF9yZWYgPSB0aGlzLnBhZ2VzOwogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICAgICAgcGFnZSA9IF9yZWZbX2ldOwogICAgICAgICAgcGFnZS5zYXZlVG9Db3VjaERCKCk7CiAgICAgICAgfQogICAgICAgIHJldHVybiB0aGlzLm9uUmVhZHkoZnVuY3Rpb24oKSB7CiAgICAgICAgICByZXR1cm4gY2FsbGJhY2soKTsKICAgICAgICB9KTsKICAgICAgfSwgdGhpcyksCiAgICAgIGVycm9yOiBmdW5jdGlvbigpIHsKICAgICAgICB0aHJvdyAiQ291bGQgbm90IFBVVCB0byAiICsgdGhpcy51cmxQYXRoOwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiB0aGlzOwogIH07CiAgQXNzZXNzbWVudC5wcm90b3R5cGVbImRlbGV0ZSJdID0gZnVuY3Rpb24oKSB7CiAgICBpZiAodGhpcy51cmxTY2hlbWUgPT09ICJsb2NhbHN0b3JhZ2UiKSB7CiAgICAgIHJldHVybiB0aGlzLmRlbGV0ZUZyb21Mb2NhbFN0b3JhZ2UoKTsKICAgIH0KICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLmRlbGV0ZUZyb21Mb2NhbFN0b3JhZ2UgPSBmdW5jdGlvbigpIHsKICAgIHZhciBwYWdlLCBfaSwgX2xlbiwgX3JlZjsKICAgIF9yZWYgPSB0aGlzLnBhZ2VzOwogICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgIHBhZ2UgPSBfcmVmW19pXTsKICAgICAgcGFnZS5kZWxldGVGcm9tTG9jYWxTdG9yYWdlKCk7CiAgICB9CiAgICByZXR1cm4gbG9jYWxTdG9yYWdlLnJlbW92ZUl0ZW0odGhpcy51cmxQYXRoKTsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLmRlbGV0ZUZyb21Db3VjaERCID0gZnVuY3Rpb24oKSB7CiAgICB2YXIgcGFnZSwgdXJsLCBfaSwgX2xlbiwgX3JlZjsKICAgIHVybCA9ICQuY291Y2hEQkRhdGFiYXNlUGF0aCArIHRoaXMudXJsUGF0aCArICgiP3Jldj0iICsgdGhpcy5yZXZpc2lvbik7CiAgICBpZiAodGhpcy5wYWdlcykgewogICAgICBfcmVmID0gdGhpcy5wYWdlczsKICAgICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgICAgcGFnZSA9IF9yZWZbX2ldOwogICAgICAgIHBhZ2UuZGVsZXRlRnJvbUNvdWNoREIoKTsKICAgICAgfQogICAgfQogICAgcmV0dXJuICQuYWpheCh7CiAgICAgIHVybDogdXJsLAogICAgICBhc3luYzogdHJ1ZSwKICAgICAgdHlwZTogJ0RFTEVURScsCiAgICAgIGVycm9yOiBmdW5jdGlvbigpIHsKICAgICAgICB0aHJvdyAiRXJyb3IgZGVsZXRpbmcgIiArIHVybDsKICAgICAgfQogICAgfSk7CiAgfTsKICBBc3Nlc3NtZW50LnByb3RvdHlwZS5vblJlYWR5ID0gZnVuY3Rpb24oY2FsbGJhY2spIHsKICAgIHZhciBjaGVja0lmTG9hZGluZywgbWF4VHJpZXMsIHRpbWVzVHJpZWQ7CiAgICBtYXhUcmllcyA9IDEwOwogICAgdGltZXNUcmllZCA9IDA7CiAgICBjaGVja0lmTG9hZGluZyA9IF9fYmluZChmdW5jdGlvbigpIHsKICAgICAgdmFyIHBhZ2UsIF9pLCBfbGVuLCBfcmVmOwogICAgICB0aW1lc1RyaWVkKys7CiAgICAgIGlmICh0aGlzLmxvYWRpbmcpIHsKICAgICAgICBpZiAodGltZXNUcmllZCA+PSBtYXhUcmllcykgewogICAgICAgICAgdGhyb3cgIlRpbWVvdXQgZXJyb3Igd2hpbGUgd2FpdGluZyBmb3IgYXNzZXNzbWVudDogIiArIHRoaXMubmFtZTsKICAgICAgICB9CiAgICAgICAgc2V0VGltZW91dChjaGVja0lmTG9hZGluZywgMTAwMCk7CiAgICAgICAgcmV0dXJuOwogICAgICB9CiAgICAgIF9yZWYgPSB0aGlzLnBhZ2VzOwogICAgICBmb3IgKF9pID0gMCwgX2xlbiA9IF9yZWYubGVuZ3RoOyBfaSA8IF9sZW47IF9pKyspIHsKICAgICAgICBwYWdlID0gX3JlZltfaV07CiAgICAgICAgaWYgKHBhZ2UubG9hZGluZykgewogICAgICAgICAgaWYgKHRpbWVzVHJpZWQgPj0gbWF4VHJpZXMpIHsKICAgICAgICAgICAgdGhyb3cgIlRpbWVvdXQgZXJyb3Igd2hpbGUgd2FpdGluZyBmb3IgcGFnZTogIiArIHBhZ2UucGFnZUlkOwogICAgICAgICAgfQogICAgICAgICAgc2V0VGltZW91dChjaGVja0lmTG9hZGluZywgMTAwMCk7CiAgICAgICAgICByZXR1cm47CiAgICAgICAgfQogICAgICB9CiAgICAgIHJldHVybiBjYWxsYmFjaygpOwogICAgfSwgdGhpcyk7CiAgICByZXR1cm4gY2hlY2tJZkxvYWRpbmcoKTsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLnJlbmRlciA9IGZ1bmN0aW9uKGNhbGxiYWNrKSB7CiAgICByZXR1cm4gdGhpcy5vblJlYWR5KF9fYmluZChmdW5jdGlvbigpIHsKICAgICAgdmFyIGksIHBhZ2UsIHJlc3VsdDsKICAgICAgJC5hc3Nlc3NtZW50ID0gdGhpczsKICAgICAgJCgnZGl2JykubGl2ZSgncGFnZWJlZm9yZXNob3cnLCBfX2JpbmQoZnVuY3Rpb24oZXZlbnQsIHVpKSB7CiAgICAgICAgdmFyIHBhZ2UsIF9pLCBfbGVuLCBfcmVmOwogICAgICAgIF9yZWYgPSB0aGlzLnBhZ2VzOwogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICAgICAgcGFnZSA9IF9yZWZbX2ldOwogICAgICAgICAgaWYgKHBhZ2UucGFnZUlkID09PSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLmF0dHIoJ2lkJykpIHsKICAgICAgICAgICAgdGhpcy5jdXJyZW50UGFnZSA9IHBhZ2U7CiAgICAgICAgICAgIHJldHVybjsKICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0sIHRoaXMpKTsKICAgICAgcmVzdWx0ID0gKGZ1bmN0aW9uKCkgewogICAgICAgIHZhciBfbGVuLCBfcmVmLCBfcmVzdWx0czsKICAgICAgICBfcmVmID0gdGhpcy5wYWdlczsKICAgICAgICBfcmVzdWx0cyA9IFtdOwogICAgICAgIGZvciAoaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgaSA8IF9sZW47IGkrKykgewogICAgICAgICAgcGFnZSA9IF9yZWZbaV07CiAgICAgICAgICBfcmVzdWx0cy5wdXNoKHBhZ2UucmVuZGVyKCkpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gX3Jlc3VsdHM7CiAgICAgIH0pLmNhbGwodGhpcyk7CiAgICAgIHJlc3VsdCA9IHJlc3VsdC5qb2luKCIiKTsKICAgICAgcmVzdWx0ICs9ICIgICAgICAgIDxkaXYgZGF0YS1yb2xlPSdkaWFsb2cnIGlkPSdfaW5mb1BhZ2UnPiAgICAgICAgICA8ZGl2IGRhdGEtcm9sZT0naGVhZGVyJz4JICAgICAgICAgICAgPGgxPkluZm9ybWF0aW9uPC9oMT4gICAgICAgICAgPC9kaXY+ICAgICAgICAgIDxkaXYgZGF0YS1yb2xlPSdjb250ZW50Jz4JICAgICAgICAgIDwvZGl2PjwhLS0gL2NvbnRlbnQgLS0+ICAgICAgICA8L2Rpdj4gICAgICAiOwogICAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgewogICAgICAgIGNhbGxiYWNrKHJlc3VsdCk7CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0sIHRoaXMpKTsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLmZsYXNoID0gZnVuY3Rpb24oKSB7CiAgICAkKCcuY29udHJvbHMnKS5hZGRDbGFzcygiZmxhc2giKTsKICAgICQoImRpdltkYXRhLXJvbGU9aGVhZGVyXSIpLnRvZ2dsZUNsYXNzKCJmbGFzaCIpOwogICAgJCgiZGl2W2RhdGEtcm9sZT1mb290ZXJdIikudG9nZ2xlQ2xhc3MoImZsYXNoIik7CiAgICByZXR1cm4gc2V0VGltZW91dChmdW5jdGlvbigpIHsKICAgICAgJCgnLmNvbnRyb2xzJykucmVtb3ZlQ2xhc3MoImZsYXNoIik7CiAgICAgICQoImRpdltkYXRhLXJvbGU9aGVhZGVyXSIpLnJlbW92ZUNsYXNzKCJmbGFzaCIpOwogICAgICByZXR1cm4gJCgiZGl2W2RhdGEtcm9sZT1mb290ZXJdIikucmVtb3ZlQ2xhc3MoImZsYXNoIik7CiAgICB9LCAzMDAwKTsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLnRvUGFwZXIgPSBmdW5jdGlvbihjYWxsYmFjaykgewogICAgcmV0dXJuIHRoaXMub25SZWFkeShfX2JpbmQoZnVuY3Rpb24oKSB7CiAgICAgIHZhciBpLCBwYWdlLCByZXN1bHQ7CiAgICAgIHJlc3VsdCA9IChmdW5jdGlvbigpIHsKICAgICAgICB2YXIgX2xlbiwgX3JlZiwgX3Jlc3VsdHM7CiAgICAgICAgX3JlZiA9IHRoaXMucGFnZXM7CiAgICAgICAgX3Jlc3VsdHMgPSBbXTsKICAgICAgICBmb3IgKGkgPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IGkgPCBfbGVuOyBpKyspIHsKICAgICAgICAgIHBhZ2UgPSBfcmVmW2ldOwogICAgICAgICAgX3Jlc3VsdHMucHVzaCgoIjxoMT4iICsgKHBhZ2UubmFtZSgpKSArICI8L2gxPiIpICsgcGFnZS50b1BhcGVyKCkpOwogICAgICAgIH0KICAgICAgICByZXR1cm4gX3Jlc3VsdHM7CiAgICAgIH0pLmNhbGwodGhpcyk7CiAgICAgIHJlc3VsdCA9IHJlc3VsdC5qb2luKCI8ZGl2IGNsYXNzPSdwYWdlLWJyZWFrJz48aHIvPjwvZGl2PiIpOwogICAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgewogICAgICAgIGNhbGxiYWNrKHJlc3VsdCk7CiAgICAgIH0KICAgICAgcmV0dXJuIHJlc3VsdDsKICAgIH0sIHRoaXMpKTsKICB9OwogIEFzc2Vzc21lbnQucHJvdG90eXBlLmhhbmRsZVVSTFBhcmFtZXRlcnMgPSBmdW5jdGlvbigpIHsKICAgIHZhciBhLCBkLCBlLCBwYXJhbSwgcSwgciwgdmFsdWUsIF9yZWY7CiAgICBpZiAodGhpcy51cmxQYXJhbXMgIT0gbnVsbCkgewogICAgICByZXR1cm47CiAgICB9CiAgICB0aGlzLnVybFBhcmFtcyA9IHt9OwogICAgYSA9IC9cKy9nOwogICAgciA9IC8oW14mPV0rKT0/KFteJl0qKS9nOwogICAgZCA9IGZ1bmN0aW9uKHMpIHsKICAgICAgcmV0dXJuIGRlY29kZVVSSUNvbXBvbmVudChzLnJlcGxhY2UoYSwgIiAiKSk7CiAgICB9OwogICAgcSA9IHdpbmRvdy5sb2NhdGlvbi5zZWFyY2guc3Vic3RyaW5nKDEpOwogICAgd2hpbGUgKChlID0gci5leGVjKHEpKSkgewogICAgICB0aGlzLnVybFBhcmFtc1tkKGVbMV0pXSA9IGQoZVsyXSk7CiAgICB9CiAgICBfcmVmID0gdGhpcy51cmxQYXJhbXM7CiAgICBmb3IgKHBhcmFtIGluIF9yZWYpIHsKICAgICAgdmFsdWUgPSBfcmVmW3BhcmFtXTsKICAgICAgJCgiaW5wdXQjIiArIHBhcmFtKS52YWwodmFsdWUpOwogICAgfQogICAgaWYgKHRoaXMudXJsUGFyYW1zLm5ld0Fzc2Vzc21lbnQpIHsKICAgICAgaWYgKCEoJC5hc3Nlc3NtZW50LmN1cnJlbnRQYWdlLnBhZ2VJZCA9PT0gIkRhdGVUaW1lIiB8fCAkLmFzc2Vzc21lbnQuY3VycmVudFBhZ2UucGFnZUlkID09PSAiTG9naW4iKSkgewogICAgICAgIGlmICghKCQuYXNzZXNzbWVudC5jdXJyZW50UGFnZS5wYWdlSWQgPT09ICJEYXRlVGltZSIgfHwgJC5hc3Nlc3NtZW50LmN1cnJlbnRQYWdlLnBhZ2VJZCA9PT0gIkxvZ2luIikpIHsKICAgICAgICAgICQubW9iaWxlLmNoYW5nZVBhZ2UoIkRhdGVUaW1lIik7CiAgICAgICAgfQogICAgICAgIHJldHVybiBkb2N1bWVudC5sb2NhdGlvbiA9IGRvY3VtZW50LmxvY2F0aW9uLmhyZWY7CiAgICAgIH0KICAgIH0KICB9OwogIHJldHVybiBBc3Nlc3NtZW50Owp9KSgpOwpBc3Nlc3NtZW50LmxvYWQgPSBmdW5jdGlvbih1cmwsIGNhbGxiYWNrKSB7CiAgdmFyIGFzc2Vzc21lbnQsIHVybFBhdGgsIHVybFNjaGVtZTsKICB0cnkgewogICAgdXJsU2NoZW1lID0gdXJsLnN1YnN0cmluZygwLCB1cmwuaW5kZXhPZigiOi8vIikpOwogICAgdXJsUGF0aCA9IHVybC5zdWJzdHJpbmcodXJsLmluZGV4T2YoIjovLyIpICsgMyk7CiAgfSBjYXRjaCAoZXJyb3IpIHsKICAgIHRocm93ICJJbnZhbGlkIHVybDogIiArIHVybDsKICB9CiAgc3dpdGNoICh1cmxTY2hlbWUpIHsKICAgIGNhc2UgImxvY2Fsc3RvcmFnZSI6CiAgICAgIGFzc2Vzc21lbnQgPSBBc3Nlc3NtZW50LmxvYWRGcm9tTG9jYWxTdG9yYWdlKHVybFBhdGgpOwogICAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgewogICAgICAgIGNhbGxiYWNrKGFzc2Vzc21lbnQpOwogICAgICB9CiAgICAgIGJyZWFrOwogICAgY2FzZSAiaHR0cCI6CiAgICAgIEFzc2Vzc21lbnQubG9hZEZyb21IVFRQKHVybFBhdGgsIGZ1bmN0aW9uKHJlc3VsdCkgewogICAgICAgIGlmIChjYWxsYmFjayAhPSBudWxsKSB7CiAgICAgICAgICByZXR1cm4gY2FsbGJhY2socmVzdWx0KTsKICAgICAgICB9CiAgICAgIH0pOwogICAgICBicmVhazsKICAgIGRlZmF1bHQ6CiAgICAgIHRocm93ICJVUkwgdHlwZSBub3QgeWV0IGltcGxlbWVudGVkOiAiICsgdXJsU2NoZW1lOwogIH0KICByZXR1cm4gYXNzZXNzbWVudDsKfTsKQXNzZXNzbWVudC5sb2FkRnJvbUxvY2FsU3RvcmFnZSA9IGZ1bmN0aW9uKHVybFBhdGgpIHsKICB2YXIgYXNzZXNzbWVudCwgYXNzZXNzbWVudE9iamVjdCwgcGFnZXMsIF9pLCBfbGVuLCBfcmVmOwogIGFzc2Vzc21lbnRPYmplY3QgPSBKU09OLnBhcnNlKGxvY2FsU3RvcmFnZVt1cmxQYXRoXSk7CiAgaWYgKGFzc2Vzc21lbnRPYmplY3QgPT0gbnVsbCkgewogICAgdGhyb3cgIkNvdWxkIG5vdCBsb2FkIGxvY2FsU3RvcmFnZVsnIiArIHVybFBhdGggKyAiJ10sICIgKyBlcnJvcjsKICB9CiAgYXNzZXNzbWVudCA9IG5ldyBBc3Nlc3NtZW50KGFzc2Vzc21lbnRPYmplY3QubmFtZSk7CiAgYXNzZXNzbWVudC51cmxTY2hlbWUgPSAibG9jYWxzdG9yYWdlIjsKICBwYWdlcyA9IFtdOwogIF9yZWYgPSBhc3Nlc3NtZW50T2JqZWN0LnVybFBhdGhzRm9yUGFnZXM7CiAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICB1cmxQYXRoID0gX3JlZltfaV07CiAgICBwYWdlcy5wdXNoKEpRdWVyeU1vYmlsZVBhZ2UubG9hZEZyb21Mb2NhbFN0b3JhZ2UodXJsUGF0aCkpOwogIH0KICBhc3Nlc3NtZW50LnNldFBhZ2VzKHBhZ2VzKTsKICByZXR1cm4gYXNzZXNzbWVudDsKfTsKQXNzZXNzbWVudC5sb2FkRnJvbUhUVFAgPSBmdW5jdGlvbih1cmwsIGNhbGxiYWNrKSB7CiAgdmFyIGFzc2Vzc21lbnQsIGJhc2VVcmw7CiAgYXNzZXNzbWVudCA9IG51bGw7CiAgYmFzZVVybCA9IHVybC5zdWJzdHJpbmcoMCwgdXJsLmxhc3RJbmRleE9mKCIvIikgKyAxKTsKICAkLmFqYXgoewogICAgdXJsOiB1cmwsCiAgICB0eXBlOiAnR0VUJywKICAgIGRhdGFUeXBlOiAnanNvbicsCiAgICBzdWNjZXNzOiBmdW5jdGlvbihyZXN1bHQpIHsKICAgICAgdmFyIHBhZ2VzLCB1cmxQYXRoLCBfaSwgX2xlbiwgX3JlZjsKICAgICAgdHJ5IHsKICAgICAgICBhc3Nlc3NtZW50ID0gbmV3IEFzc2Vzc21lbnQocmVzdWx0Lm5hbWUpOwogICAgICAgIHBhZ2VzID0gW107CiAgICAgICAgX3JlZiA9IHJlc3VsdC51cmxQYXRoc0ZvclBhZ2VzOwogICAgICAgIGZvciAoX2kgPSAwLCBfbGVuID0gX3JlZi5sZW5ndGg7IF9pIDwgX2xlbjsgX2krKykgewogICAgICAgICAgdXJsUGF0aCA9IF9yZWZbX2ldOwogICAgICAgICAgdXJsID0gYmFzZVVybCArIHVybFBhdGg7CiAgICAgICAgICBKUXVlcnlNb2JpbGVQYWdlLmxvYWRGcm9tSFRUUCh7CiAgICAgICAgICAgIHVybDogdXJsLAogICAgICAgICAgICBhc3luYzogZmFsc2UKICAgICAgICAgIH0sIF9fYmluZChmdW5jdGlvbihyZXN1bHQpIHsKICAgICAgICAgICAgcmVzdWx0LmFzc2Vzc21lbnQgPSBhc3Nlc3NtZW50OwogICAgICAgICAgICByZXR1cm4gcGFnZXMucHVzaChyZXN1bHQpOwogICAgICAgICAgfSwgdGhpcykpOwogICAgICAgIH0KICAgICAgICBhc3Nlc3NtZW50LnNldFBhZ2VzKHBhZ2VzKTsKICAgICAgICBpZiAoY2FsbGJhY2sgIT0gbnVsbCkgewogICAgICAgICAgcmV0dXJuIGNhbGxiYWNrKGFzc2Vzc21lbnQpOwogICAgICAgIH0KICAgICAgfSBjYXRjaCAoZXJyb3IpIHsKICAgICAgICByZXR1cm4gY29uc29sZS5sb2coIkVycm9yIGluIEFzc2Vzc21lbnQubG9hZEZyb21IVFRQOiIgKyBlcnJvcik7CiAgICAgIH0KICAgIH0sCiAgICBlcnJvcjogZnVuY3Rpb24oKSB7CiAgICAgIHRocm93ICJGYWlsZWQgdG8gbG9hZDogIiArIHVybDsKICAgIH0KICB9KTsKICByZXR1cm4gYXNzZXNzbWVudDsKfTs=", "content_type": "application/javascript"}, "js-libraries/jquery-mobile/jquery.mobile-1.0b2.css": {"data": "", "content_type": "text/css"}, "models/template.coffee": {"data": "", "content_type": ""}, "js-libraries/jquery-mobile/jquery.mobile-1.0b3.css": {"data": "", "content_type": "text/css"}, "js-libraries/jquery-mobile/jquery.mobile-1.0b2.js": {"data": "", "content_type": "application/javascript"}, "combined-javascript/egra.js": {"data": "", "content_type": "application/javascript"}, "images/form-check-off.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAMAAAC6V+0/AAAAA3NCSVQICAjb4U/gAAAAQlBMVEX///+tra2np6eZmZmQj5CPkI+GhoZ8fHxxcXBmZmZaWlpPT09OT05PTk9OTk9EREQ6OjozMzMnJycfHx8ZGRkTExMVEC93AAAAFnRSTlMAIiIiIiIiIiIiIiIiIiIiIiIiIiIioV7xxAAAAAlwSFlzAAALEgAACxIB0t1+/AAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAAVdEVYdENyZWF0aW9uIFRpbWUAOC8yMC8xMElbDgwAAABWSURBVBiVddFHDoAwDAXRAA4t9HL/qzJWdvnkWbKl2TqEf2/B2yOItyBegngK4iGIuyCmbPG1MmkjzoI4CeIoiIMg9oJoZjH6ygfEThBbUYuhKVR+8QFBJQ0sPBh5JwAAAABJRU5ErkJggg==", "content_type": "image/png"}, "images/icons-36-white.png": {"data": "iVBORw0KGgoAAAANSUhEUgAABFwAAAAkBAMAAABGaTNFAAAAA3NCSVQICAjb4U/gAAAAMFBMVEX///////////////////////////////////////////////////////////////9Or7hAAAAAEHRSTlMAESIzRFVmd4iZqrvM3e7/dpUBFQAAAAlwSFlzAAAK6wAACusBgosNWgAAABZ0RVh0Q3JlYXRpb24gVGltZQAxMC8xNi8xMNNnoNMAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBDUzVxteM2AAAFnUlEQVR4nO1aQYtbVRRO8jJp3qSDFbpRwpgfUDvjyoKYjhpw0UXcuTNxpSgl1U2hLmZ0ISNFpvoDfF0IXUZxo0SIrStBiLhVCFpcCEpaqu2Mk+R477vJ6CTm+47mZVC8H8ME8k7uPe/e737nnHtvKuXh4eHh4eHh4eHh4cFwQmGTYQb3J+CIx38A6S8URuUrpJEvNaTz+FdD5BY3KgqhgkHQ22ONXFf6RPE8N1n6mNucnPomaCl+lhBy68lZHQ3SF2K6vMLsykKoYJATzKl0R27+DdcQMrvcZlXqzCQvP0x+lZX9f+TRYQSv2/8PkoluqIZDZ5UUzpTQ0+KepUvYJ1EiW+nJVdZTpSG/oeenZFhJaKWEQx7WIvmOmTRkqp1k6FK2A5ru4InOyVAxHDqrpJDu7IKRNQv+isjtiESJl0R6MsAd5ToyFPlqtkGmZw3ex62IjP4w1uQCsUgFIlSCmiIbE18lQpegZwe0SCY6FI3aNoSrZHLIi2zNfnpcRoDycsrZACqYEerGNoBTp10rH0J3lXSJsDMWBdMXW5ab0yaJ0KVgB9QsRfkAmkUK4TAR/i7tL5yKqRN4ef3PHwBVGQAmhGO6oMzErJUY36N+nnM2IEiM6DKALuvoklGMYeNepolny67/qfdOhC6WKdeLZBHq5EUlLpE8A5/nXD852l26K7/gjhxQjroqcu1FIx4lYGMizY8X3xaULpg57l+8JDju6ehi5G6IB8i8+K1UlXLqhY3Jb5LJXSxVOuRVUxp5UYmLiSB3oEHV9fMXqdp0S1fR82XHFpiiRnLDKszXyKYg/ZIpn/aROw/b1fY4zygIHr3ciX3+ZnsDWOVNvVdVJMSH8Fir9akMW63W1hz+WaQ7NMJbGHkhYSTSiItRIE2WRKiXXY95BXzObl8W+TzTlP72mzONMjaclcm7nzUryVCKFdLWaIhsFBgLIl68a5YuKG2LMVGpVcctoyh20D1quMj8czDvAlUy1IhLzvaFw0wsYySunb5rY9GvwCJvc4kTqRXzMVuCc9bjMnn3HVNi6LbpduAAKYLRQb4FCdyM6YI12jh0WOqSo4uVFyou8bug+dGKy7CpkBciLsbj+jKORZYuu+5jNl3yctukuz/hd2/bkkh1CLAGl7wmdxnLCyJwVmK6kDxksjI6crrkcJGR6upqp5s0aTbysompZ5rYreHkRkWXQly0PpKuPAFaatvfq44Y75ubLqFCXI6bfOzbNlub7Yl9l5OVytPSr1TgbmKSwahBNsJXVLWToRRLmuMxg3HN1b/QRBWMlt2Z0jFYYrXV9cT8dBnJC5yMzdGU4o3dSbqkkqqMlKkuExeNvORiRinkha2dMpNVl+reIKlu3mUAITyJjERbhNT4hizDQzETUAqUNktl+Jawjd2F0UVZSPNNFb41MyqSI1IkF2jSbOVlWMI2ikI661bAmnwGjBq0CBmjDfdvVHB0qQMLK5t3TFZNNnYXRRflNp1mU4VuzYSOTyFrqkvvFBh5uUe9cUBNde3M2MQZ2KwqCr4YeTwdqmDkMtItYHFWbKpbY+q6KLooDwE0O7ZcXt5zdIpIUyv0SsES81d3CFCTvVLqvPRRQ8dE3mDuWARNvMusossmrV7aNg7FCQRk8aLoojtiVO3Yqg6WEkKNCb/qiNFyqstI3lQdrwZEFXR02ZHBJXjiGcTvFKf68Bx9YbmL6gJDqDpr1lklgiUmQLoLDDYHYBx/QLBsOGRZeFTRpT2op86hzDs4KHYxXaJpuqQrT8G+dQji+2bselSkCuA6q0SwwQxU16OWjLbIO6Sl8zq67FOXOH6um3/nUHdntsd4FTWEj+sXjrCenNXRQHf5MnjtE3459tmPeHfBtSTisNsvfHL+hrKtd+dv5H8G1dVuDw8PDw8PDw8PDw8PDw8Pjz/wO033ekvubhagAAAAAElFTkSuQmCC", "content_type": "image/png"}, "models/scorer.js": {"data": "dmFyIFNjb3JlcjsKU2NvcmVyID0gKGZ1bmN0aW9uKCkgewogIGZ1bmN0aW9uIFNjb3JlcigpIHt9CiAgU2NvcmVyLnByb3RvdHlwZS51cGRhdGUgPSBmdW5jdGlvbigpIHsKICAgIHZhciBjb21wbGV0ZWQsIGVsZW1lbnQsIHdyb25nLCBfaSwgX2xlbiwgX3JlZjsKICAgIGNvbXBsZXRlZCA9IHdyb25nID0gMDsKICAgIF9yZWYgPSAkKCcudWktcGFnZS1hY3RpdmUgLnVpLWNoZWNrYm94IGxhYmVsLnVpLWJ0bicpOwogICAgZm9yIChfaSA9IDAsIF9sZW4gPSBfcmVmLmxlbmd0aDsgX2kgPCBfbGVuOyBfaSsrKSB7CiAgICAgIGVsZW1lbnQgPSBfcmVmW19pXTsKICAgICAgZWxlbWVudCA9ICQoZWxlbWVudCk7CiAgICAgIGlmIChlbGVtZW50LmlzKCcuZmlyc3RfY2xpY2snKSkgewogICAgICAgIHdyb25nKys7CiAgICAgIH0KICAgICAgY29tcGxldGVkKys7CiAgICAgIGlmIChlbGVtZW50LmlzKCcuc2Vjb25kX2NsaWNrJykpIHsKICAgICAgICBicmVhazsKICAgICAgfQogICAgfQogICAgJCgnI2NvbXBsZXRlZCcpLmh0bWwoY29tcGxldGVkKTsKICAgIHJldHVybiAkKCcjd3JvbmcnKS5odG1sKHdyb25nKTsKICB9OwogIFNjb3Jlci5wcm90b3R5cGUucmVuZGVyID0gZnVuY3Rpb24oKSB7CiAgICB0aGlzLmlkID0gInNjb3JlciI7CiAgICBzZXRJbnRlcnZhbCh0aGlzLnVwZGF0ZSwgNTAwKTsKICAgIHJldHVybiBNdXN0YWNoZS50b19odG1sKHRoaXMuX3RlbXBsYXRlKCksIHRoaXMpOwogIH07CiAgU2NvcmVyLnByb3RvdHlwZS5fdGVtcGxhdGUgPSBmdW5jdGlvbigpIHsKICAgIHJldHVybiAiPGRpdiBjbGFzcz0nc2NvcmVyJz4gIDxzbWFsbD4gIENvbXBsZXRlZDo8c3BhbiBpZD0nY29tcGxldGVkJz48L3NwYW4+ICBXcm9uZzo8c3BhbiBpZD0nd3JvbmcnPjwvc3Bhbj4gIDwvc21hbGw+PC9kaXY+IjsKICB9OwogIHJldHVybiBTY29yZXI7Cn0pKCk7", "content_type": "application/javascript"}, "tests/testData/Assessment.TEST EGRA Prototype": {"data": "ewogICJuYW1lIjogIlRFU1QgRUdSQSBQcm90b3R5cGUiLAogICJfaWQiOiAiQXNzZXNzbWVudC5URVNUIEVHUkEgUHJvdG90eXBlIiwKICAidXJsUGF0aHNGb3JQYWdlcyI6IFsKICAgICJBc3Nlc3NtZW50LlRFU1QgRUdSQSBQcm90b3R5cGUuTG9naW4iLAogICAgIkFzc2Vzc21lbnQuVEVTVCBFR1JBIFByb3RvdHlwZS5EYXRlVGltZSIsCiAgICAiQXNzZXNzbWVudC5URVNUIEVHUkEgUHJvdG90eXBlLlNjaG9vbCIsCiAgICAiQXNzZXNzbWVudC5URVNUIEVHUkEgUHJvdG90eXBlLkluc3RydWN0aW9ucyIsCiAgICAiQXNzZXNzbWVudC5URVNUIEVHUkEgUHJvdG90eXBlLlN0dWRlbnRJbmZvcm1hdGlvbiIsCiAgICAiQXNzZXNzbWVudC5URVNUIEVHUkEgUHJvdG90eXBlLkxldHRlcnMiLAogICAgIkFzc2Vzc21lbnQuVEVTVCBFR1JBIFByb3RvdHlwZS5SZXN1bHRzIgogIF0KfQo=", "content_type": ""}, "tests/tests.js": {"data": "", "content_type": "application/javascript"}, "js-libraries/jquery-mobile/images/icon-search-black.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAABAAAAAQCAYAAAAf8/9hAAAAGXRFWHRTb2Z0d2FyZQBBZG9iZSBJbWFnZVJlYWR5ccllPAAAAyJpVFh0WE1MOmNvbS5hZG9iZS54bXAAAAAAADw/eHBhY2tldCBiZWdpbj0i77u/IiBpZD0iVzVNME1wQ2VoaUh6cmVTek5UY3prYzlkIj8+IDx4OnhtcG1ldGEgeG1sbnM6eD0iYWRvYmU6bnM6bWV0YS8iIHg6eG1wdGs9IkFkb2JlIFhNUCBDb3JlIDUuMC1jMDYwIDYxLjEzNDc3NywgMjAxMC8wMi8xMi0xNzozMjowMCAgICAgICAgIj4gPHJkZjpSREYgeG1sbnM6cmRmPSJodHRwOi8vd3d3LnczLm9yZy8xOTk5LzAyLzIyLXJkZi1zeW50YXgtbnMjIj4gPHJkZjpEZXNjcmlwdGlvbiByZGY6YWJvdXQ9IiIgeG1sbnM6eG1wPSJodHRwOi8vbnMuYWRvYmUuY29tL3hhcC8xLjAvIiB4bWxuczp4bXBNTT0iaHR0cDovL25zLmFkb2JlLmNvbS94YXAvMS4wL21tLyIgeG1sbnM6c3RSZWY9Imh0dHA6Ly9ucy5hZG9iZS5jb20veGFwLzEuMC9zVHlwZS9SZXNvdXJjZVJlZiMiIHhtcDpDcmVhdG9yVG9vbD0iQWRvYmUgUGhvdG9zaG9wIENTNSBNYWNpbnRvc2giIHhtcE1NOkluc3RhbmNlSUQ9InhtcC5paWQ6NzA4NTM4NTRCMDgwMTFERkE3MjhCQTNEQzI2NUU3RTYiIHhtcE1NOkRvY3VtZW50SUQ9InhtcC5kaWQ6NzA4NTM4NTVCMDgwMTFERkE3MjhCQTNEQzI2NUU3RTYiPiA8eG1wTU06RGVyaXZlZEZyb20gc3RSZWY6aW5zdGFuY2VJRD0ieG1wLmlpZDo3MDg1Mzg1MkIwODAxMURGQTcyOEJBM0RDMjY1RTdFNiIgc3RSZWY6ZG9jdW1lbnRJRD0ieG1wLmRpZDo3MDg1Mzg1M0IwODAxMURGQTcyOEJBM0RDMjY1RTdFNiIvPiA8L3JkZjpEZXNjcmlwdGlvbj4gPC9yZGY6UkRGPiA8L3g6eG1wbWV0YT4gPD94cGFja2V0IGVuZD0iciI/PoXpIKcAAAFRSURBVHjalNTPK0RRGMbxY+YKi/ErFpKkLJAVipUs7spCREqKbLC0JGuGhaIwQ5TYWAxLxQZLpfgTRMMCodgo8j31zDSOMdO89eltmnOee2bue68XDoeNKg+9GEY7ynCLY+ziyqSpgHoIOzhEP6oQRCOmcIrJ/wIKsIYRvGAW9ahEB/ZRgohO9yegW1/cow/zuME7LjCEGa1fRIUbMKa+jHOTvhZwhmoMuAGt+MKByVwx9RY3IKSApywBj+rFbkAc+WjIEtCkHncDTjQD4xk2l+suGc3FrwA7JG9aMK37n1o1mpE6XOuCyQr6vv9Af0UPfHShELUYxDratN7OwzMuEwGeehQfmEOnpJYd42YUYSVlTzLA1h6O9DzYZ6EUd/rNdpRHsarJjSRCPOdK9njb4taW/p+oPtvB+wyY3GoDE3ajTrLkmdxrE9+w74HYjwADAKDLQn974v1dAAAAAElFTkSuQmCC", "content_type": "image/png"}, "google-spreadsheet-javascript/tests/tests.coffee": {"data": "JChkb2N1bWVudCkucmVhZHkgLT4KICBtb2R1bGUgIkJhc2ljIFVuaXQgVGVzdCIKICB0ZXN0ICJTYW1wbGUgdGVzdCIsIC0+CiAgICBleHBlY3QoMSkKICAgIGVxdWFscyg0LzIsMikKCiAgbW9kdWxlICJHb29nbGUgU3ByZWFkc2hlZXQiCiAgdXJsID0gImh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vcHViP2tleT0wQWdvMzFKUVBaeFpyZEhGMmJXTmpjVEpGTFhKNlVVTTVTbGRFYWtkRWFYYyZobD1lbiZvdXRwdXQ9aHRtbCIKCiAgUVVuaXQudGVzdFN0YXJ0ID0gKG5hbWUpIC0+CiAgICBjb25zb2xlLmxvZyBuYW1lCgogIHRlc3QgIkxvYWQgZnJvbSBVUkwiLCAtPgogICAgZXhwZWN0KDIpCiAgICBleHBlY3RlZEtleSA9ICIwQWdvMzFKUVBaeFpyZEhGMmJXTmpjVEpGTFhKNlVVTTVTbGRFYWtkRWFYYyIKICAgIGV4cGVjdGVkSnNvblVybCA9ICJodHRwOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMvY2VsbHMvIiArIGV4cGVjdGVkS2V5ICsgIi9vZDYvcHVibGljL2Jhc2ljP2FsdD1qc29uLWluLXNjcmlwdCIKICAgIGdvb2dsZVVybCA9IG5ldyBHb29nbGVVcmwodXJsKQogICAgZXF1YWxzKGdvb2dsZVVybC5rZXksIGV4cGVjdGVkS2V5KQogICAgZXF1YWxzKGdvb2dsZVVybC5qc29uVXJsLCBleHBlY3RlZEpzb25VcmwpCgogIHRlc3QgIlNhdmUgYW5kIGZpbmQiLCAtPgogICAgZ29vZ2xlU3ByZWFkc2hlZXQgPSBuZXcgR29vZ2xlU3ByZWFkc2hlZXQoKQogICAgZ29vZ2xlU3ByZWFkc2hlZXQudXJsKHVybCkKICAgIGdvb2dsZVNwcmVhZHNoZWV0LnR5cGUgPSAidGVzdCIKICAgIGdvb2dsZVNwcmVhZHNoZWV0LnNhdmUoKQogICAgcmVzdWx0ID0gR29vZ2xlU3ByZWFkc2hlZXQuZmluZCh7dXJsOnVybH0pCiAgICBlcXVhbHMoSlNPTi5zdHJpbmdpZnkocmVzdWx0KSxKU09OLnN0cmluZ2lmeShnb29nbGVTcHJlYWRzaGVldCkpCgojICBOb3Qgd29ya2luZyBmb3Igc29tZSByZWFzb24KIyAgdGVzdCAiUGFyc2luZyIsIC0+CiMgICAgZXhwZWN0KDEpCiMgICAgIyBUaGlzIGlzIGhvdyB0byB0ZXN0IGNhbGxiYWNrIGZ1bmN0aW9ucyAtIHVzZSBzdG9wKCkgYW5kIHN0YXJ0KCkKIyAgICBzdG9wKCkKIyAgICBqUXVlcnkuZ2V0SlNPTiAidGVzdHNDYWxsYmFja0NlbGxzRGF0YS5qc29uIiwgKGRhdGEpIC0+CiMgICAgICByZXN1bHQgPSBHb29nbGVTcHJlYWRzaGVldC5jYWxsYmFja0NlbGxzKGRhdGEpCiMgICAgICBlcXVhbHMocmVzdWx0LmRhdGEubGVuZ3RoLDEwKQojICAgICAgc3RhcnQoKQoKICB0ZXN0ICJMb2FkIGFuZCBwYXJzZSIsIC0+CiAgICBleHBlY3QoMSkKICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpCiAgICBnb29nbGVTcHJlYWRzaGVldCA9IG5ldyBHb29nbGVTcHJlYWRzaGVldCgpCiAgICBnb29nbGVTcHJlYWRzaGVldC51cmwodXJsKQogICAgZ29vZ2xlU3ByZWFkc2hlZXQudHlwZSA9ICJ0ZXN0IgogICAgZ29vZ2xlU3ByZWFkc2hlZXQuc2F2ZSgpCiAgICBzdG9wKCkKICAgIGdvb2dsZVNwcmVhZHNoZWV0LmxvYWQgKHJlc3VsdCkgLT4KICAgICAgZXF1YWxzKHJlc3VsdC5kYXRhLmxlbmd0aCwxMCkKICAgICAgc3RhcnQoKQoKICB0ZXN0ICJMb2FkIGFuZCBwYXJzZSBsb25nIGFuZCBjb21wbGV4IHRleHQgY2VsbCIsIC0+CiAgICBleHBlY3QoMSkKICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpCiAgICBnb29nbGVTcHJlYWRzaGVldCA9IG5ldyBHb29nbGVTcHJlYWRzaGVldCgpCiAgICBnb29nbGVTcHJlYWRzaGVldC51cmwoImh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vcHViP2tleT0wQWdvMzFKUVBaeFpyZEdKU1pUWTJNSFU0VmxKM1JuTnRkbk5EVmpSakxWRSZobD1lbiZvdXRwdXQ9aHRtbCIpCiAgICBnb29nbGVTcHJlYWRzaGVldC50eXBlID0gInRlc3QiCiAgICBnb29nbGVTcHJlYWRzaGVldC5zYXZlKCkKICAgIHN0b3AoKQogICAgZ29vZ2xlU3ByZWFkc2hlZXQubG9hZCAocmVzdWx0KSAtPgogICAgICBjb25zb2xlLmxvZyByZXN1bHQKICAgICAgZXF1YWxzKHJlc3VsdC5kYXRhWzBdLm1hdGNoKC9jb3JyZWN0ZW1lbnQvKS5sZW5ndGgsIDEpCiAgICAgIHN0YXJ0KCkK", "content_type": ""}, "google-spreadsheet-javascript/tests/tests.html": {"data": "PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiIKICAgICAgImh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw0L2xvb3NlLmR0ZCI+CjxodG1sPgogIDxoZWFkPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJxdW5pdC5jc3MiIHR5cGU9InRleHQvY3NzIi8+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9qcXVlcnktMS40LjQubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uL2dvb2dsZS1zcHJlYWRzaGVldC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJxdW5pdC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJ0ZXN0cy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICA8L3NjcmlwdD4KICA8L2hlYWQ+CiAgPGJvZHk+CiAgICA8aDEgaWQ9InF1bml0LWhlYWRlciI+UVVuaXQgZXhhbXBsZTwvaDE+CiAgICA8aDIgaWQ9InF1bml0LWJhbm5lciI+PC9oMj4KICAgIDxoMiBpZD0icXVuaXQtdXNlckFnZW50Ij48L2gyPgogICAgPG9sIGlkPSJxdW5pdC10ZXN0cyI+CiAgICA8L29sPgogIDwvYm9keT4KPC9odG1sPgo=", "content_type": "text/html"}, "tests/qunit.js": {"data": "LyoKICogUVVuaXQgLSBBIEphdmFTY3JpcHQgVW5pdCBUZXN0aW5nIEZyYW1ld29yawogKiAKICogaHR0cDovL2RvY3MuanF1ZXJ5LmNvbS9RVW5pdAogKgogKiBDb3B5cmlnaHQgKGMpIDIwMDkgSm9obiBSZXNpZywgSsO2cm4gWmFlZmZlcmVyCiAqIER1YWwgbGljZW5zZWQgdW5kZXIgdGhlIE1JVCAoTUlULUxJQ0VOU0UudHh0KQogKiBhbmQgR1BMIChHUEwtTElDRU5TRS50eHQpIGxpY2Vuc2VzLgogKi8KCihmdW5jdGlvbih3aW5kb3cpIHsKCnZhciBkZWZpbmVkID0gewoJc2V0VGltZW91dDogdHlwZW9mIHdpbmRvdy5zZXRUaW1lb3V0ICE9PSAidW5kZWZpbmVkIiwKCXNlc3Npb25TdG9yYWdlOiAoZnVuY3Rpb24oKSB7CgkJdHJ5IHsKCQkJcmV0dXJuICEhc2Vzc2lvblN0b3JhZ2UuZ2V0SXRlbTsKCQl9IGNhdGNoKGUpewoJCQlyZXR1cm4gZmFsc2U7CgkJfQogIH0pKCkKfQoKdmFyIHRlc3RJZCA9IDA7Cgp2YXIgVGVzdCA9IGZ1bmN0aW9uKG5hbWUsIHRlc3ROYW1lLCBleHBlY3RlZCwgdGVzdEVudmlyb25tZW50QXJnLCBhc3luYywgY2FsbGJhY2spIHsKCXRoaXMubmFtZSA9IG5hbWU7Cgl0aGlzLnRlc3ROYW1lID0gdGVzdE5hbWU7Cgl0aGlzLmV4cGVjdGVkID0gZXhwZWN0ZWQ7Cgl0aGlzLnRlc3RFbnZpcm9ubWVudEFyZyA9IHRlc3RFbnZpcm9ubWVudEFyZzsKCXRoaXMuYXN5bmMgPSBhc3luYzsKCXRoaXMuY2FsbGJhY2sgPSBjYWxsYmFjazsKCXRoaXMuYXNzZXJ0aW9ucyA9IFtdOwp9OwpUZXN0LnByb3RvdHlwZSA9IHsKCWluaXQ6IGZ1bmN0aW9uKCkgewoJCXZhciB0ZXN0cyA9IGlkKCJxdW5pdC10ZXN0cyIpOwoJCWlmICh0ZXN0cykgewoJCQl2YXIgYiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInN0cm9uZyIpOwoJCQkJYi5pbm5lckhUTUwgPSAiUnVubmluZyAiICsgdGhpcy5uYW1lOwoJCQl2YXIgbGkgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsaSIpOwoJCQkJbGkuYXBwZW5kQ2hpbGQoIGIgKTsKCQkJCWxpLmlkID0gdGhpcy5pZCA9ICJ0ZXN0LW91dHB1dCIgKyB0ZXN0SWQrKzsKCQkJdGVzdHMuYXBwZW5kQ2hpbGQoIGxpICk7CgkJfQoJfSwKCXNldHVwOiBmdW5jdGlvbigpIHsKCQlpZiAodGhpcy5tb2R1bGUgIT0gY29uZmlnLnByZXZpb3VzTW9kdWxlKSB7CgkJCWlmICggdGhpcy5wcmV2aW91c01vZHVsZSApIHsKCQkJCVFVbml0Lm1vZHVsZURvbmUoIHRoaXMubW9kdWxlLCBjb25maWcubW9kdWxlU3RhdHMuYmFkLCBjb25maWcubW9kdWxlU3RhdHMuYWxsICk7CgkJCX0KCQkJY29uZmlnLnByZXZpb3VzTW9kdWxlID0gdGhpcy5tb2R1bGU7CgkJCWNvbmZpZy5tb2R1bGVTdGF0cyA9IHsgYWxsOiAwLCBiYWQ6IDAgfTsKCQkJUVVuaXQubW9kdWxlU3RhcnQoIHRoaXMubW9kdWxlLCB0aGlzLm1vZHVsZVRlc3RFbnZpcm9ubWVudCApOwoJCX0KCgkJY29uZmlnLmN1cnJlbnQgPSB0aGlzOwoJCXRoaXMudGVzdEVudmlyb25tZW50ID0gZXh0ZW5kKHsKCQkJc2V0dXA6IGZ1bmN0aW9uKCkge30sCgkJCXRlYXJkb3duOiBmdW5jdGlvbigpIHt9CgkJfSwgdGhpcy5tb2R1bGVUZXN0RW52aXJvbm1lbnQpOwoJCWlmICh0aGlzLnRlc3RFbnZpcm9ubWVudEFyZykgewoJCQlleHRlbmQodGhpcy50ZXN0RW52aXJvbm1lbnQsIHRoaXMudGVzdEVudmlyb25tZW50QXJnKTsKCQl9CgoJCVFVbml0LnRlc3RTdGFydCggdGhpcy50ZXN0TmFtZSwgdGhpcy50ZXN0RW52aXJvbm1lbnQgKTsKCgkJLy8gYWxsb3cgdXRpbGl0eSBmdW5jdGlvbnMgdG8gYWNjZXNzIHRoZSBjdXJyZW50IHRlc3QgZW52aXJvbm1lbnQKCQkvLyBUT0RPIHdoeT8/CgkJUVVuaXQuY3VycmVudF90ZXN0RW52aXJvbm1lbnQgPSB0aGlzLnRlc3RFbnZpcm9ubWVudDsKCQkKCQl0cnkgewoJCQlpZiAoICFjb25maWcucG9sbHV0aW9uICkgewoJCQkJc2F2ZUdsb2JhbCgpOwoJCQl9CgoJCQl0aGlzLnRlc3RFbnZpcm9ubWVudC5zZXR1cC5jYWxsKHRoaXMudGVzdEVudmlyb25tZW50KTsKCQl9IGNhdGNoKGUpIHsKCQkJLy8gVE9ETyB1c2UgdGVzdE5hbWUgaW5zdGVhZCBvZiBuYW1lIGZvciBuby1tYXJrdXAgbWVzc2FnZT8KCQkJUVVuaXQub2soIGZhbHNlLCAiU2V0dXAgZmFpbGVkIG9uICIgKyB0aGlzLm5hbWUgKyAiOiAiICsgZS5tZXNzYWdlICk7CgkJfQoJfSwKCXJ1bjogZnVuY3Rpb24oKSB7CgkJaWYgKCB0aGlzLmFzeW5jICkgewoJCQlRVW5pdC5zdG9wKCk7CgkJfQoKCQl0cnkgewoJCQl0aGlzLmNhbGxiYWNrLmNhbGwodGhpcy50ZXN0RW52aXJvbm1lbnQpOwoJCX0gY2F0Y2goZSkgewoJCQkvLyBUT0RPIHVzZSB0ZXN0TmFtZSBpbnN0ZWFkIG9mIG5hbWUgZm9yIG5vLW1hcmt1cCBtZXNzYWdlPwoJCQlmYWlsKCJUZXN0ICIgKyB0aGlzLm5hbWUgKyAiIGRpZWQsIGV4Y2VwdGlvbiBhbmQgdGVzdCBmb2xsb3dzIiwgZSwgdGhpcy5jYWxsYmFjayk7CgkJCVFVbml0Lm9rKCBmYWxzZSwgIkRpZWQgb24gdGVzdCAjIiArICh0aGlzLmFzc2VydGlvbnMubGVuZ3RoICsgMSkgKyAiOiAiICsgZS5tZXNzYWdlICsgIiAtICIgKyBRVW5pdC5qc0R1bXAucGFyc2UoZSkgKTsKCQkJLy8gZWxzZSBuZXh0IHRlc3Qgd2lsbCBjYXJyeSB0aGUgcmVzcG9uc2liaWxpdHkKCQkJc2F2ZUdsb2JhbCgpOwoKCQkJLy8gUmVzdGFydCB0aGUgdGVzdHMgaWYgdGhleSdyZSBibG9ja2luZwoJCQlpZiAoIGNvbmZpZy5ibG9ja2luZyApIHsKCQkJCXN0YXJ0KCk7CgkJCX0KCQl9Cgl9LAoJdGVhcmRvd246IGZ1bmN0aW9uKCkgewoJCXRyeSB7CgkJCWNoZWNrUG9sbHV0aW9uKCk7CgkJCXRoaXMudGVzdEVudmlyb25tZW50LnRlYXJkb3duLmNhbGwodGhpcy50ZXN0RW52aXJvbm1lbnQpOwoJCX0gY2F0Y2goZSkgewoJCQkvLyBUT0RPIHVzZSB0ZXN0TmFtZSBpbnN0ZWFkIG9mIG5hbWUgZm9yIG5vLW1hcmt1cCBtZXNzYWdlPwoJCQlRVW5pdC5vayggZmFsc2UsICJUZWFyZG93biBmYWlsZWQgb24gIiArIHRoaXMubmFtZSArICI6ICIgKyBlLm1lc3NhZ2UgKTsKCQl9Cgl9LAoJZmluaXNoOiBmdW5jdGlvbigpIHsKCQlpZiAoIHRoaXMuZXhwZWN0ZWQgJiYgdGhpcy5leHBlY3RlZCAhPSB0aGlzLmFzc2VydGlvbnMubGVuZ3RoICkgewoJCQlRVW5pdC5vayggZmFsc2UsICJFeHBlY3RlZCAiICsgdGhpcy5leHBlY3RlZCArICIgYXNzZXJ0aW9ucywgYnV0ICIgKyB0aGlzLmFzc2VydGlvbnMubGVuZ3RoICsgIiB3ZXJlIHJ1biIgKTsKCQl9CgkJCgkJdmFyIGdvb2QgPSAwLCBiYWQgPSAwLAoJCQl0ZXN0cyA9IGlkKCJxdW5pdC10ZXN0cyIpOwoKCQljb25maWcuc3RhdHMuYWxsICs9IHRoaXMuYXNzZXJ0aW9ucy5sZW5ndGg7CgkJY29uZmlnLm1vZHVsZVN0YXRzLmFsbCArPSB0aGlzLmFzc2VydGlvbnMubGVuZ3RoOwoKCQlpZiAoIHRlc3RzICkgewoJCQl2YXIgb2wgID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgib2wiKTsKCgkJCWZvciAoIHZhciBpID0gMDsgaSA8IHRoaXMuYXNzZXJ0aW9ucy5sZW5ndGg7IGkrKyApIHsKCQkJCXZhciBhc3NlcnRpb24gPSB0aGlzLmFzc2VydGlvbnNbaV07CgoJCQkJdmFyIGxpID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgibGkiKTsKCQkJCWxpLmNsYXNzTmFtZSA9IGFzc2VydGlvbi5yZXN1bHQgPyAicGFzcyIgOiAiZmFpbCI7CgkJCQlsaS5pbm5lckhUTUwgPSBhc3NlcnRpb24ubWVzc2FnZSB8fCAoYXNzZXJ0aW9uLnJlc3VsdCA/ICJva2F5IiA6ICJmYWlsZWQiKTsKCQkJCW9sLmFwcGVuZENoaWxkKCBsaSApOwoKCQkJCWlmICggYXNzZXJ0aW9uLnJlc3VsdCApIHsKCQkJCQlnb29kKys7CgkJCQl9IGVsc2UgewoJCQkJCWJhZCsrOwoJCQkJCWNvbmZpZy5zdGF0cy5iYWQrKzsKCQkJCQljb25maWcubW9kdWxlU3RhdHMuYmFkKys7CgkJCQl9CgkJCX0KCgkJCS8vIHN0b3JlIHJlc3VsdCB3aGVuIHBvc3NpYmxlCgkJCWRlZmluZWQuc2Vzc2lvblN0b3JhZ2UgJiYgc2Vzc2lvblN0b3JhZ2Uuc2V0SXRlbSgicXVuaXQtIiArIHRoaXMudGVzdE5hbWUsIGJhZCk7CgoJCQlpZiAoYmFkID09IDApIHsKCQkJCW9sLnN0eWxlLmRpc3BsYXkgPSAibm9uZSI7CgkJCX0KCgkJCXZhciBiID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgic3Ryb25nIik7CgkJCWIuaW5uZXJIVE1MID0gdGhpcy5uYW1lICsgIiA8YiBjbGFzcz0nY291bnRzJz4oPGIgY2xhc3M9J2ZhaWxlZCc+IiArIGJhZCArICI8L2I+LCA8YiBjbGFzcz0ncGFzc2VkJz4iICsgZ29vZCArICI8L2I+LCAiICsgdGhpcy5hc3NlcnRpb25zLmxlbmd0aCArICIpPC9iPiI7CgkJCQoJCQlhZGRFdmVudChiLCAiY2xpY2siLCBmdW5jdGlvbigpIHsKCQkJCXZhciBuZXh0ID0gYi5uZXh0U2libGluZywgZGlzcGxheSA9IG5leHQuc3R5bGUuZGlzcGxheTsKCQkJCW5leHQuc3R5bGUuZGlzcGxheSA9IGRpc3BsYXkgPT09ICJub25lIiA/ICJibG9jayIgOiAibm9uZSI7CgkJCX0pOwoJCQkKCQkJYWRkRXZlbnQoYiwgImRibGNsaWNrIiwgZnVuY3Rpb24oZSkgewoJCQkJdmFyIHRhcmdldCA9IGUgJiYgZS50YXJnZXQgPyBlLnRhcmdldCA6IHdpbmRvdy5ldmVudC5zcmNFbGVtZW50OwoJCQkJaWYgKCB0YXJnZXQubm9kZU5hbWUudG9Mb3dlckNhc2UoKSA9PSAic3BhbiIgfHwgdGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT0gImIiICkgewoJCQkJCXRhcmdldCA9IHRhcmdldC5wYXJlbnROb2RlOwoJCQkJfQoJCQkJaWYgKCB3aW5kb3cubG9jYXRpb24gJiYgdGFyZ2V0Lm5vZGVOYW1lLnRvTG93ZXJDYXNlKCkgPT09ICJzdHJvbmciICkgewoJCQkJCXdpbmRvdy5sb2NhdGlvbi5zZWFyY2ggPSAiPyIgKyBlbmNvZGVVUklDb21wb25lbnQoZ2V0VGV4dChbdGFyZ2V0XSkucmVwbGFjZSgvXCguK1wpJC8sICIiKS5yZXBsYWNlKC8oXlxzKnxccyokKS9nLCAiIikpOwoJCQkJfQoJCQl9KTsKCgkJCXZhciBsaSA9IGlkKHRoaXMuaWQpOwoJCQlsaS5jbGFzc05hbWUgPSBiYWQgPyAiZmFpbCIgOiAicGFzcyI7CgkJCWxpLnN0eWxlLmRpc3BsYXkgPSByZXN1bHREaXNwbGF5U3R5bGUoIWJhZCk7CgkJCWxpLnJlbW92ZUNoaWxkKCBsaS5maXJzdENoaWxkICk7CgkJCWxpLmFwcGVuZENoaWxkKCBiICk7CgkJCWxpLmFwcGVuZENoaWxkKCBvbCApOwoKCQkJaWYgKCBiYWQgKSB7CgkJCQl2YXIgdG9vbGJhciA9IGlkKCJxdW5pdC10ZXN0cnVubmVyLXRvb2xiYXIiKTsKCQkJCWlmICggdG9vbGJhciApIHsKCQkJCQl0b29sYmFyLnN0eWxlLmRpc3BsYXkgPSAiYmxvY2siOwoJCQkJCWlkKCJxdW5pdC1maWx0ZXItcGFzcyIpLmRpc2FibGVkID0gbnVsbDsKCQkJCX0KCQkJfQoKCQl9IGVsc2UgewoJCQlmb3IgKCB2YXIgaSA9IDA7IGkgPCB0aGlzLmFzc2VydGlvbnMubGVuZ3RoOyBpKysgKSB7CgkJCQlpZiAoICF0aGlzLmFzc2VydGlvbnNbaV0ucmVzdWx0ICkgewoJCQkJCWJhZCsrOwoJCQkJCWNvbmZpZy5zdGF0cy5iYWQrKzsKCQkJCQljb25maWcubW9kdWxlU3RhdHMuYmFkKys7CgkJCQl9CgkJCX0KCQl9CgoJCXRyeSB7CgkJCVFVbml0LnJlc2V0KCk7CgkJfSBjYXRjaChlKSB7CgkJCS8vIFRPRE8gdXNlIHRlc3ROYW1lIGluc3RlYWQgb2YgbmFtZSBmb3Igbm8tbWFya3VwIG1lc3NhZ2U/CgkJCWZhaWwoInJlc2V0KCkgZmFpbGVkLCBmb2xsb3dpbmcgVGVzdCAiICsgdGhpcy5uYW1lICsgIiwgZXhjZXB0aW9uIGFuZCByZXNldCBmbiBmb2xsb3dzIiwgZSwgUVVuaXQucmVzZXQpOwoJCX0KCgkJUVVuaXQudGVzdERvbmUoIHRoaXMudGVzdE5hbWUsIGJhZCwgdGhpcy5hc3NlcnRpb25zLmxlbmd0aCApOwoJfSwKCQoJcXVldWU6IGZ1bmN0aW9uKCkgewoJCXZhciB0ZXN0ID0gdGhpczsKCQlzeW5jaHJvbml6ZShmdW5jdGlvbigpIHsKCQkJdGVzdC5pbml0KCk7CgkJfSk7CgkJZnVuY3Rpb24gcnVuKCkgewoJCQkvLyBlYWNoIG9mIHRoZXNlIGNhbiBieSBhc3luYwoJCQlzeW5jaHJvbml6ZShmdW5jdGlvbigpIHsKCQkJCXRlc3Quc2V0dXAoKTsKCQkJfSk7CgkJCXN5bmNocm9uaXplKGZ1bmN0aW9uKCkgewoJCQkJdGVzdC5ydW4oKTsKCQkJfSk7CgkJCXN5bmNocm9uaXplKGZ1bmN0aW9uKCkgewoJCQkJdGVzdC50ZWFyZG93bigpOwoJCQl9KTsKCQkJc3luY2hyb25pemUoZnVuY3Rpb24oKSB7CgkJCQl0ZXN0LmZpbmlzaCgpOwoJCQl9KTsKCQl9CgkJLy8gZGVmZXIgd2hlbiBwcmV2aW91cyB0ZXN0IHJ1biBwYXNzZWQsIGlmIHN0b3JhZ2UgaXMgYXZhaWxhYmxlCgkJdmFyIGJhZCA9IGRlZmluZWQuc2Vzc2lvblN0b3JhZ2UgJiYgK3Nlc3Npb25TdG9yYWdlLmdldEl0ZW0oInF1bml0LSIgKyB0aGlzLnRlc3ROYW1lKTsKCQlpZiAoYmFkKSB7CgkJCXJ1bigpOwoJCX0gZWxzZSB7CgkJCXN5bmNocm9uaXplKHJ1bik7CgkJfTsKCX0KCQp9Cgp2YXIgUVVuaXQgPSB7CgoJLy8gY2FsbCBvbiBzdGFydCBvZiBtb2R1bGUgdGVzdCB0byBwcmVwZW5kIG5hbWUgdG8gYWxsIHRlc3RzCgltb2R1bGU6IGZ1bmN0aW9uKG5hbWUsIHRlc3RFbnZpcm9ubWVudCkgewoJCWNvbmZpZy5wcmV2aW91c01vZHVsZSA9IGNvbmZpZy5jdXJyZW50TW9kdWxlOwoJCWNvbmZpZy5jdXJyZW50TW9kdWxlID0gbmFtZTsKCQljb25maWcuY3VycmVudE1vZHVsZVRlc3RFbnZpcm9tZW50ID0gdGVzdEVudmlyb25tZW50OwoJfSwKCglhc3luY1Rlc3Q6IGZ1bmN0aW9uKHRlc3ROYW1lLCBleHBlY3RlZCwgY2FsbGJhY2spIHsKCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggPT09IDIgKSB7CgkJCWNhbGxiYWNrID0gZXhwZWN0ZWQ7CgkJCWV4cGVjdGVkID0gMDsKCQl9CgoJCVFVbml0LnRlc3QodGVzdE5hbWUsIGV4cGVjdGVkLCBjYWxsYmFjaywgdHJ1ZSk7Cgl9LAoJCgl0ZXN0OiBmdW5jdGlvbih0ZXN0TmFtZSwgZXhwZWN0ZWQsIGNhbGxiYWNrLCBhc3luYykgewoJCXZhciBuYW1lID0gJzxzcGFuIGNsYXNzPSJ0ZXN0LW5hbWUiPicgKyB0ZXN0TmFtZSArICc8L3NwYW4+JywgdGVzdEVudmlyb25tZW50QXJnOwoKCQlpZiAoIGFyZ3VtZW50cy5sZW5ndGggPT09IDIgKSB7CgkJCWNhbGxiYWNrID0gZXhwZWN0ZWQ7CgkJCWV4cGVjdGVkID0gbnVsbDsKCQl9CgkJLy8gaXMgMm5kIGFyZ3VtZW50IGEgdGVzdEVudmlyb25tZW50PwoJCWlmICggZXhwZWN0ZWQgJiYgdHlwZW9mIGV4cGVjdGVkID09PSAnb2JqZWN0JykgewoJCQl0ZXN0RW52aXJvbm1lbnRBcmcgPSAgZXhwZWN0ZWQ7CgkJCWV4cGVjdGVkID0gbnVsbDsKCQl9CgoJCWlmICggY29uZmlnLmN1cnJlbnRNb2R1bGUgKSB7CgkJCW5hbWUgPSAnPHNwYW4gY2xhc3M9Im1vZHVsZS1uYW1lIj4nICsgY29uZmlnLmN1cnJlbnRNb2R1bGUgKyAiPC9zcGFuPjogIiArIG5hbWU7CgkJfQoKCQlpZiAoICF2YWxpZFRlc3QoY29uZmlnLmN1cnJlbnRNb2R1bGUgKyAiOiAiICsgdGVzdE5hbWUpICkgewoJCQlyZXR1cm47CgkJfQoJCQoJCXZhciB0ZXN0ID0gbmV3IFRlc3QobmFtZSwgdGVzdE5hbWUsIGV4cGVjdGVkLCB0ZXN0RW52aXJvbm1lbnRBcmcsIGFzeW5jLCBjYWxsYmFjayk7CgkJdGVzdC5wcmV2aW91c01vZHVsZSA9IGNvbmZpZy5wcmV2aW91c01vZHVsZTsKCQl0ZXN0Lm1vZHVsZSA9IGNvbmZpZy5jdXJyZW50TW9kdWxlOwoJCXRlc3QubW9kdWxlVGVzdEVudmlyb25tZW50ID0gY29uZmlnLmN1cnJlbnRNb2R1bGVUZXN0RW52aXJvbWVudDsKCQl0ZXN0LnF1ZXVlKCk7Cgl9LAoJCgkvKioKCSAqIFNwZWNpZnkgdGhlIG51bWJlciBvZiBleHBlY3RlZCBhc3NlcnRpb25zIHRvIGd1cmFudGVlIHRoYXQgZmFpbGVkIHRlc3QgKG5vIGFzc2VydGlvbnMgYXJlIHJ1biBhdCBhbGwpIGRvbid0IHNsaXAgdGhyb3VnaC4KCSAqLwoJZXhwZWN0OiBmdW5jdGlvbihhc3NlcnRzKSB7CgkJY29uZmlnLmN1cnJlbnQuZXhwZWN0ZWQgPSBhc3NlcnRzOwoJfSwKCgkvKioKCSAqIEFzc2VydHMgdHJ1ZS4KCSAqIEBleGFtcGxlIG9rKCAiYXNkZmFzZGYiLmxlbmd0aCA+IDUsICJUaGVyZSBtdXN0IGJlIGF0IGxlYXN0IDUgY2hhcnMiICk7CgkgKi8KCW9rOiBmdW5jdGlvbihhLCBtc2cpIHsKCQlhID0gISFhOwoJCXZhciBkZXRhaWxzID0gewoJCQlyZXN1bHQ6IGEsCgkJCW1lc3NhZ2U6IG1zZwoJCX07CgkJbXNnID0gZXNjYXBlSHRtbChtc2cpOwoJCVFVbml0LmxvZyhhLCBtc2csIGRldGFpbHMpOwoJCWNvbmZpZy5jdXJyZW50LmFzc2VydGlvbnMucHVzaCh7CgkJCXJlc3VsdDogYSwKCQkJbWVzc2FnZTogbXNnCgkJfSk7Cgl9LAoKCS8qKgoJICogQ2hlY2tzIHRoYXQgdGhlIGZpcnN0IHR3byBhcmd1bWVudHMgYXJlIGVxdWFsLCB3aXRoIGFuIG9wdGlvbmFsIG1lc3NhZ2UuCgkgKiBQcmludHMgb3V0IGJvdGggYWN0dWFsIGFuZCBleHBlY3RlZCB2YWx1ZXMuCgkgKgoJICogUHJlZmVyZWQgdG8gb2soIGFjdHVhbCA9PSBleHBlY3RlZCwgbWVzc2FnZSApCgkgKgoJICogQGV4YW1wbGUgZXF1YWwoIGZvcm1hdCgiUmVjZWl2ZWQgezB9IGJ5dGVzLiIsIDIpLCAiUmVjZWl2ZWQgMiBieXRlcy4iICk7CgkgKgoJICogQHBhcmFtIE9iamVjdCBhY3R1YWwKCSAqIEBwYXJhbSBPYmplY3QgZXhwZWN0ZWQKCSAqIEBwYXJhbSBTdHJpbmcgbWVzc2FnZSAob3B0aW9uYWwpCgkgKi8KCWVxdWFsOiBmdW5jdGlvbihhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7CgkJUVVuaXQucHVzaChleHBlY3RlZCA9PSBhY3R1YWwsIGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpOwoJfSwKCglub3RFcXVhbDogZnVuY3Rpb24oYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkgewoJCVFVbml0LnB1c2goZXhwZWN0ZWQgIT0gYWN0dWFsLCBhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKTsKCX0sCgkKCWRlZXBFcXVhbDogZnVuY3Rpb24oYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkgewoJCVFVbml0LnB1c2goUVVuaXQuZXF1aXYoYWN0dWFsLCBleHBlY3RlZCksIGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpOwoJfSwKCglub3REZWVwRXF1YWw6IGZ1bmN0aW9uKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHsKCQlRVW5pdC5wdXNoKCFRVW5pdC5lcXVpdihhY3R1YWwsIGV4cGVjdGVkKSwgYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSk7Cgl9LAoKCXN0cmljdEVxdWFsOiBmdW5jdGlvbihhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKSB7CgkJUVVuaXQucHVzaChleHBlY3RlZCA9PT0gYWN0dWFsLCBhY3R1YWwsIGV4cGVjdGVkLCBtZXNzYWdlKTsKCX0sCgoJbm90U3RyaWN0RXF1YWw6IGZ1bmN0aW9uKGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpIHsKCQlRVW5pdC5wdXNoKGV4cGVjdGVkICE9PSBhY3R1YWwsIGFjdHVhbCwgZXhwZWN0ZWQsIG1lc3NhZ2UpOwoJfSwKCglyYWlzZXM6IGZ1bmN0aW9uKGZuLCAgbWVzc2FnZSkgewoJCXRyeSB7CgkJCWZuKCk7CgkJCVFVbml0Lm9rKCBmYWxzZSwgbWVzc2FnZSApOwoJCX0KCQljYXRjaCAoZSkgewoJCQlRVW5pdC5vayggdHJ1ZSwgbWVzc2FnZSApOwoJCX0KCX0sCgoJc3RhcnQ6IGZ1bmN0aW9uKCkgewoJCS8vIEEgc2xpZ2h0IGRlbGF5LCB0byBhdm9pZCBhbnkgY3VycmVudCBjYWxsYmFja3MKCQlpZiAoIGRlZmluZWQuc2V0VGltZW91dCApIHsKCQkJd2luZG93LnNldFRpbWVvdXQoZnVuY3Rpb24oKSB7CgkJCQlpZiAoIGNvbmZpZy50aW1lb3V0ICkgewoJCQkJCWNsZWFyVGltZW91dChjb25maWcudGltZW91dCk7CgkJCQl9CgoJCQkJY29uZmlnLmJsb2NraW5nID0gZmFsc2U7CgkJCQlwcm9jZXNzKCk7CgkJCX0sIDEzKTsKCQl9IGVsc2UgewoJCQljb25maWcuYmxvY2tpbmcgPSBmYWxzZTsKCQkJcHJvY2VzcygpOwoJCX0KCX0sCgkKCXN0b3A6IGZ1bmN0aW9uKHRpbWVvdXQpIHsKCQljb25maWcuYmxvY2tpbmcgPSB0cnVlOwoKCQlpZiAoIHRpbWVvdXQgJiYgZGVmaW5lZC5zZXRUaW1lb3V0ICkgewoJCQljb25maWcudGltZW91dCA9IHdpbmRvdy5zZXRUaW1lb3V0KGZ1bmN0aW9uKCkgewoJCQkJUVVuaXQub2soIGZhbHNlLCAiVGVzdCB0aW1lZCBvdXQiICk7CgkJCQlRVW5pdC5zdGFydCgpOwoJCQl9LCB0aW1lb3V0KTsKCQl9Cgl9Cgp9OwoKLy8gQmFja3dhcmRzIGNvbXBhdGliaWxpdHksIGRlcHJlY2F0ZWQKUVVuaXQuZXF1YWxzID0gUVVuaXQuZXF1YWw7ClFVbml0LnNhbWUgPSBRVW5pdC5kZWVwRXF1YWw7CgovLyBNYWludGFpbiBpbnRlcm5hbCBzdGF0ZQp2YXIgY29uZmlnID0gewoJLy8gVGhlIHF1ZXVlIG9mIHRlc3RzIHRvIHJ1bgoJcXVldWU6IFtdLAoKCS8vIGJsb2NrIHVudGlsIGRvY3VtZW50IHJlYWR5CglibG9ja2luZzogdHJ1ZQp9OwoKLy8gTG9hZCBwYXJhbWF0ZXJzCihmdW5jdGlvbigpIHsKCXZhciBsb2NhdGlvbiA9IHdpbmRvdy5sb2NhdGlvbiB8fCB7IHNlYXJjaDogIiIsIHByb3RvY29sOiAiZmlsZToiIH0sCgkJR0VUUGFyYW1zID0gbG9jYXRpb24uc2VhcmNoLnNsaWNlKDEpLnNwbGl0KCcmJyk7CgoJZm9yICggdmFyIGkgPSAwOyBpIDwgR0VUUGFyYW1zLmxlbmd0aDsgaSsrICkgewoJCUdFVFBhcmFtc1tpXSA9IGRlY29kZVVSSUNvbXBvbmVudCggR0VUUGFyYW1zW2ldICk7CgkJaWYgKCBHRVRQYXJhbXNbaV0gPT09ICJub2dsb2JhbHMiICkgewoJCQlHRVRQYXJhbXMuc3BsaWNlKCBpLCAxICk7CgkJCWktLTsKCQkJY29uZmlnLm5vZ2xvYmFscyA9IHRydWU7CgkJfSBlbHNlIGlmICggR0VUUGFyYW1zW2ldLnNlYXJjaCgnPScpID4gLTEgKSB7CgkJCUdFVFBhcmFtcy5zcGxpY2UoIGksIDEgKTsKCQkJaS0tOwoJCX0KCX0KCQoJLy8gcmVzdHJpY3QgbW9kdWxlcy90ZXN0cyBieSBnZXQgcGFyYW1ldGVycwoJY29uZmlnLmZpbHRlcnMgPSBHRVRQYXJhbXM7CgkKCS8vIEZpZ3VyZSBvdXQgaWYgd2UncmUgcnVubmluZyB0aGUgdGVzdHMgZnJvbSBhIHNlcnZlciBvciBub3QKCVFVbml0LmlzTG9jYWwgPSAhIShsb2NhdGlvbi5wcm90b2NvbCA9PT0gJ2ZpbGU6Jyk7Cn0pKCk7CgovLyBFeHBvc2UgdGhlIEFQSSBhcyBnbG9iYWwgdmFyaWFibGVzLCB1bmxlc3MgYW4gJ2V4cG9ydHMnCi8vIG9iamVjdCBleGlzdHMsIGluIHRoYXQgY2FzZSB3ZSBhc3N1bWUgd2UncmUgaW4gQ29tbW9uSlMKaWYgKCB0eXBlb2YgZXhwb3J0cyA9PT0gInVuZGVmaW5lZCIgfHwgdHlwZW9mIHJlcXVpcmUgPT09ICJ1bmRlZmluZWQiICkgewoJZXh0ZW5kKHdpbmRvdywgUVVuaXQpOwoJd2luZG93LlFVbml0ID0gUVVuaXQ7Cn0gZWxzZSB7CglleHRlbmQoZXhwb3J0cywgUVVuaXQpOwoJZXhwb3J0cy5RVW5pdCA9IFFVbml0Owp9CgovLyBkZWZpbmUgdGhlc2UgYWZ0ZXIgZXhwb3NpbmcgZ2xvYmFscyB0byBrZWVwIHRoZW0gaW4gdGhlc2UgUVVuaXQgbmFtZXNwYWNlIG9ubHkKZXh0ZW5kKFFVbml0LCB7Cgljb25maWc6IGNvbmZpZywKCgkvLyBJbml0aWFsaXplIHRoZSBjb25maWd1cmF0aW9uIG9wdGlvbnMKCWluaXQ6IGZ1bmN0aW9uKCkgewoJCWV4dGVuZChjb25maWcsIHsKCQkJc3RhdHM6IHsgYWxsOiAwLCBiYWQ6IDAgfSwKCQkJbW9kdWxlU3RhdHM6IHsgYWxsOiAwLCBiYWQ6IDAgfSwKCQkJc3RhcnRlZDogK25ldyBEYXRlLAoJCQl1cGRhdGVSYXRlOiAxMDAwLAoJCQlibG9ja2luZzogZmFsc2UsCgkJCWF1dG9zdGFydDogdHJ1ZSwKCQkJYXV0b3J1bjogZmFsc2UsCgkJCWZpbHRlcnM6IFtdLAoJCQlxdWV1ZTogW10KCQl9KTsKCgkJdmFyIHRlc3RzID0gaWQoInF1bml0LXRlc3RzIiksCgkJCWJhbm5lciA9IGlkKCJxdW5pdC1iYW5uZXIiKSwKCQkJcmVzdWx0ID0gaWQoInF1bml0LXRlc3RyZXN1bHQiKTsKCgkJaWYgKCB0ZXN0cyApIHsKCQkJdGVzdHMuaW5uZXJIVE1MID0gIiI7CgkJfQoKCQlpZiAoIGJhbm5lciApIHsKCQkJYmFubmVyLmNsYXNzTmFtZSA9ICIiOwoJCX0KCgkJaWYgKCByZXN1bHQgKSB7CgkJCXJlc3VsdC5wYXJlbnROb2RlLnJlbW92ZUNoaWxkKCByZXN1bHQgKTsKCQl9Cgl9LAoJCgkvKioKCSAqIFJlc2V0cyB0aGUgdGVzdCBzZXR1cC4gVXNlZnVsIGZvciB0ZXN0cyB0aGF0IG1vZGlmeSB0aGUgRE9NLgoJICogCgkgKiBJZiBqUXVlcnkgaXMgYXZhaWxhYmxlLCB1c2VzIGpRdWVyeSdzIGh0bWwoKSwgb3RoZXJ3aXNlIGp1c3QgaW5uZXJIVE1MLgoJICovCglyZXNldDogZnVuY3Rpb24oKSB7CgkJaWYgKCB3aW5kb3cualF1ZXJ5ICkgewoJCQlqUXVlcnkoICIjbWFpbiwgI3F1bml0LWZpeHR1cmUiICkuaHRtbCggY29uZmlnLmZpeHR1cmUgKTsKCQl9IGVsc2UgewoJCQl2YXIgbWFpbiA9IGlkKCAnbWFpbicgKSB8fCBpZCggJ3F1bml0LWZpeHR1cmUnICk7CgkJCWlmICggbWFpbiApIHsKCQkJCW1haW4uaW5uZXJIVE1MID0gY29uZmlnLmZpeHR1cmU7CgkJCX0KCQl9Cgl9LAoJCgkvKioKCSAqIFRyaWdnZXIgYW4gZXZlbnQgb24gYW4gZWxlbWVudC4KCSAqCgkgKiBAZXhhbXBsZSB0cmlnZ2VyRXZlbnQoIGRvY3VtZW50LmJvZHksICJjbGljayIgKTsKCSAqCgkgKiBAcGFyYW0gRE9NRWxlbWVudCBlbGVtCgkgKiBAcGFyYW0gU3RyaW5nIHR5cGUKCSAqLwoJdHJpZ2dlckV2ZW50OiBmdW5jdGlvbiggZWxlbSwgdHlwZSwgZXZlbnQgKSB7CgkJaWYgKCBkb2N1bWVudC5jcmVhdGVFdmVudCApIHsKCQkJZXZlbnQgPSBkb2N1bWVudC5jcmVhdGVFdmVudCgiTW91c2VFdmVudHMiKTsKCQkJZXZlbnQuaW5pdE1vdXNlRXZlbnQodHlwZSwgdHJ1ZSwgdHJ1ZSwgZWxlbS5vd25lckRvY3VtZW50LmRlZmF1bHRWaWV3LAoJCQkJMCwgMCwgMCwgMCwgMCwgZmFsc2UsIGZhbHNlLCBmYWxzZSwgZmFsc2UsIDAsIG51bGwpOwoJCQllbGVtLmRpc3BhdGNoRXZlbnQoIGV2ZW50ICk7CgoJCX0gZWxzZSBpZiAoIGVsZW0uZmlyZUV2ZW50ICkgewoJCQllbGVtLmZpcmVFdmVudCgib24iK3R5cGUpOwoJCX0KCX0sCgkKCS8vIFNhZmUgb2JqZWN0IHR5cGUgY2hlY2tpbmcKCWlzOiBmdW5jdGlvbiggdHlwZSwgb2JqICkgewoJCXJldHVybiBRVW5pdC5vYmplY3RUeXBlKCBvYmogKSA9PSB0eXBlOwoJfSwKCQoJb2JqZWN0VHlwZTogZnVuY3Rpb24oIG9iaiApIHsKCQlpZiAodHlwZW9mIG9iaiA9PT0gInVuZGVmaW5lZCIpIHsKCQkJCXJldHVybiAidW5kZWZpbmVkIjsKCgkJLy8gY29uc2lkZXI6IHR5cGVvZiBudWxsID09PSBvYmplY3QKCQl9CgkJaWYgKG9iaiA9PT0gbnVsbCkgewoJCQkJcmV0dXJuICJudWxsIjsKCQl9CgoJCXZhciB0eXBlID0gT2JqZWN0LnByb3RvdHlwZS50b1N0cmluZy5jYWxsKCBvYmogKQoJCQkubWF0Y2goL15cW29iamVjdFxzKC4qKVxdJC8pWzFdIHx8ICcnOwoKCQlzd2l0Y2ggKHR5cGUpIHsKCQkJCWNhc2UgJ051bWJlcic6CgkJCQkJCWlmIChpc05hTihvYmopKSB7CgkJCQkJCQkJcmV0dXJuICJuYW4iOwoJCQkJCQl9IGVsc2UgewoJCQkJCQkJCXJldHVybiAibnVtYmVyIjsKCQkJCQkJfQoJCQkJY2FzZSAnU3RyaW5nJzoKCQkJCWNhc2UgJ0Jvb2xlYW4nOgoJCQkJY2FzZSAnQXJyYXknOgoJCQkJY2FzZSAnRGF0ZSc6CgkJCQljYXNlICdSZWdFeHAnOgoJCQkJY2FzZSAnRnVuY3Rpb24nOgoJCQkJCQlyZXR1cm4gdHlwZS50b0xvd2VyQ2FzZSgpOwoJCX0KCQlpZiAodHlwZW9mIG9iaiA9PT0gIm9iamVjdCIpIHsKCQkJCXJldHVybiAib2JqZWN0IjsKCQl9CgkJcmV0dXJuIHVuZGVmaW5lZDsKCX0sCgkKCXB1c2g6IGZ1bmN0aW9uKHJlc3VsdCwgYWN0dWFsLCBleHBlY3RlZCwgbWVzc2FnZSkgewoJCXZhciBkZXRhaWxzID0gewoJCQlyZXN1bHQ6IHJlc3VsdCwKCQkJbWVzc2FnZTogbWVzc2FnZSwKCQkJYWN0dWFsOiBhY3R1YWwsCgkJCWV4cGVjdGVkOiBleHBlY3RlZAoJCX07CgkJCgkJbWVzc2FnZSA9IGVzY2FwZUh0bWwobWVzc2FnZSkgfHwgKHJlc3VsdCA/ICJva2F5IiA6ICJmYWlsZWQiKTsKCQltZXNzYWdlID0gJzxzcGFuIGNsYXNzPSJ0ZXN0LW1lc3NhZ2UiPicgKyBtZXNzYWdlICsgIjwvc3Bhbj4iOwoJCWV4cGVjdGVkID0gZXNjYXBlSHRtbChRVW5pdC5qc0R1bXAucGFyc2UoZXhwZWN0ZWQpKTsKCQlhY3R1YWwgPSBlc2NhcGVIdG1sKFFVbml0LmpzRHVtcC5wYXJzZShhY3R1YWwpKTsKCQl2YXIgb3V0cHV0ID0gbWVzc2FnZSArICc8dGFibGU+PHRyIGNsYXNzPSJ0ZXN0LWV4cGVjdGVkIj48dGg+RXhwZWN0ZWQ6IDwvdGg+PHRkPjxwcmU+JyArIGV4cGVjdGVkICsgJzwvcHJlPjwvdGQ+PC90cj4nOwoJCWlmIChhY3R1YWwgIT0gZXhwZWN0ZWQpIHsKCQkJb3V0cHV0ICs9ICc8dHIgY2xhc3M9InRlc3QtYWN0dWFsIj48dGg+UmVzdWx0OiA8L3RoPjx0ZD48cHJlPicgKyBhY3R1YWwgKyAnPC9wcmU+PC90ZD48L3RyPic7CgkJCW91dHB1dCArPSAnPHRyIGNsYXNzPSJ0ZXN0LWRpZmYiPjx0aD5EaWZmOiA8L3RoPjx0ZD48cHJlPicgKyBRVW5pdC5kaWZmKGV4cGVjdGVkLCBhY3R1YWwpICsnPC9wcmU+PC90ZD48L3RyPic7CgkJfQoJCWlmICghcmVzdWx0KSB7CgkJCXZhciBzb3VyY2UgPSBzb3VyY2VGcm9tU3RhY2t0cmFjZSgpOwoJCQlpZiAoc291cmNlKSB7CgkJCQlkZXRhaWxzLnNvdXJjZSA9IHNvdXJjZTsKCQkJCW91dHB1dCArPSAnPHRyIGNsYXNzPSJ0ZXN0LXNvdXJjZSI+PHRoPlNvdXJjZTogPC90aD48dGQ+PHByZT4nICsgc291cmNlICsnPC9wcmU+PC90ZD48L3RyPic7CgkJCX0KCQl9CgkJb3V0cHV0ICs9ICI8L3RhYmxlPiI7CgkJCgkJUVVuaXQubG9nKHJlc3VsdCwgbWVzc2FnZSwgZGV0YWlscyk7CgkJCgkJY29uZmlnLmN1cnJlbnQuYXNzZXJ0aW9ucy5wdXNoKHsKCQkJcmVzdWx0OiAhIXJlc3VsdCwKCQkJbWVzc2FnZTogb3V0cHV0CgkJfSk7Cgl9LAoJCgkvLyBMb2dnaW5nIGNhbGxiYWNrcwoJYmVnaW46IGZ1bmN0aW9uKCkge30sCglkb25lOiBmdW5jdGlvbihmYWlsdXJlcywgdG90YWwpIHt9LAoJbG9nOiBmdW5jdGlvbihyZXN1bHQsIG1lc3NhZ2UpIHt9LAoJdGVzdFN0YXJ0OiBmdW5jdGlvbihuYW1lLCB0ZXN0RW52aXJvbm1lbnQpIHt9LAoJdGVzdERvbmU6IGZ1bmN0aW9uKG5hbWUsIGZhaWx1cmVzLCB0b3RhbCkge30sCgltb2R1bGVTdGFydDogZnVuY3Rpb24obmFtZSwgdGVzdEVudmlyb25tZW50KSB7fSwKCW1vZHVsZURvbmU6IGZ1bmN0aW9uKG5hbWUsIGZhaWx1cmVzLCB0b3RhbCkge30KfSk7CgppZiAoIHR5cGVvZiBkb2N1bWVudCA9PT0gInVuZGVmaW5lZCIgfHwgZG9jdW1lbnQucmVhZHlTdGF0ZSA9PT0gImNvbXBsZXRlIiApIHsKCWNvbmZpZy5hdXRvcnVuID0gdHJ1ZTsKfQoKYWRkRXZlbnQod2luZG93LCAibG9hZCIsIGZ1bmN0aW9uKCkgewoJUVVuaXQuYmVnaW4oKTsKCQoJLy8gSW5pdGlhbGl6ZSB0aGUgY29uZmlnLCBzYXZpbmcgdGhlIGV4ZWN1dGlvbiBxdWV1ZQoJdmFyIG9sZGNvbmZpZyA9IGV4dGVuZCh7fSwgY29uZmlnKTsKCVFVbml0LmluaXQoKTsKCWV4dGVuZChjb25maWcsIG9sZGNvbmZpZyk7CgoJY29uZmlnLmJsb2NraW5nID0gZmFsc2U7CgoJdmFyIHVzZXJBZ2VudCA9IGlkKCJxdW5pdC11c2VyQWdlbnQiKTsKCWlmICggdXNlckFnZW50ICkgewoJCXVzZXJBZ2VudC5pbm5lckhUTUwgPSBuYXZpZ2F0b3IudXNlckFnZW50OwoJfQoJdmFyIGJhbm5lciA9IGlkKCJxdW5pdC1oZWFkZXIiKTsKCWlmICggYmFubmVyICkgewoJCXZhciBwYXJhbXNJbmRleCA9IGxvY2F0aW9uLmhyZWYubGFzdEluZGV4T2YobG9jYXRpb24uc2VhcmNoKTsKCQlpZiAoIHBhcmFtc0luZGV4ID4gLTEgKSB7CgkJCXZhciBtYWluUGFnZUxvY2F0aW9uID0gbG9jYXRpb24uaHJlZi5zbGljZSgwLCBwYXJhbXNJbmRleCk7CgkJCWlmICggbWFpblBhZ2VMb2NhdGlvbiA9PSBsb2NhdGlvbi5ocmVmICkgewoJCQkJYmFubmVyLmlubmVySFRNTCA9ICc8YSBocmVmPSIiPiAnICsgYmFubmVyLmlubmVySFRNTCArICc8L2E+ICc7CgkJCX0gZWxzZSB7CgkJCQl2YXIgdGVzdE5hbWUgPSBkZWNvZGVVUklDb21wb25lbnQobG9jYXRpb24uc2VhcmNoLnNsaWNlKDEpKTsKCQkJCWJhbm5lci5pbm5lckhUTUwgPSAnPGEgaHJlZj0iJyArIG1haW5QYWdlTG9jYXRpb24gKyAnIj4nICsgYmFubmVyLmlubmVySFRNTCArICc8L2E+ICYjODI1MDsgPGEgaHJlZj0iIj4nICsgdGVzdE5hbWUgKyAnPC9hPic7CgkJCX0KCQl9Cgl9CgkKCXZhciB0b29sYmFyID0gaWQoInF1bml0LXRlc3RydW5uZXItdG9vbGJhciIpOwoJaWYgKCB0b29sYmFyICkgewoJCXRvb2xiYXIuc3R5bGUuZGlzcGxheSA9ICJub25lIjsKCQkKCQl2YXIgZmlsdGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTsKCQlmaWx0ZXIudHlwZSA9ICJjaGVja2JveCI7CgkJZmlsdGVyLmlkID0gInF1bml0LWZpbHRlci1wYXNzIjsKCQlmaWx0ZXIuZGlzYWJsZWQgPSB0cnVlOwoJCWFkZEV2ZW50KCBmaWx0ZXIsICJjbGljayIsIGZ1bmN0aW9uKCkgewoJCQl2YXIgbGkgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZSgibGkiKTsKCQkJZm9yICggdmFyIGkgPSAwOyBpIDwgbGkubGVuZ3RoOyBpKysgKSB7CgkJCQlpZiAoIGxpW2ldLmNsYXNzTmFtZS5pbmRleE9mKCJwYXNzIikgPiAtMSApIHsKCQkJCQlsaVtpXS5zdHlsZS5kaXNwbGF5ID0gZmlsdGVyLmNoZWNrZWQgPyAibm9uZSIgOiAiIjsKCQkJCX0KCQkJfQoJCX0pOwoJCXRvb2xiYXIuYXBwZW5kQ2hpbGQoIGZpbHRlciApOwoKCQl2YXIgbGFiZWwgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJsYWJlbCIpOwoJCWxhYmVsLnNldEF0dHJpYnV0ZSgiZm9yIiwgInF1bml0LWZpbHRlci1wYXNzIik7CgkJbGFiZWwuaW5uZXJIVE1MID0gIkhpZGUgcGFzc2VkIHRlc3RzIjsKCQl0b29sYmFyLmFwcGVuZENoaWxkKCBsYWJlbCApOwoJfQoKCXZhciBtYWluID0gaWQoJ21haW4nKSB8fCBpZCgncXVuaXQtZml4dHVyZScpOwoJaWYgKCBtYWluICkgewoJCWNvbmZpZy5maXh0dXJlID0gbWFpbi5pbm5lckhUTUw7Cgl9CgoJaWYgKGNvbmZpZy5hdXRvc3RhcnQpIHsKCQlRVW5pdC5zdGFydCgpOwoJfQp9KTsKCmZ1bmN0aW9uIGRvbmUoKSB7Cgljb25maWcuYXV0b3J1biA9IHRydWU7CgoJLy8gTG9nIHRoZSBsYXN0IG1vZHVsZSByZXN1bHRzCglpZiAoIGNvbmZpZy5jdXJyZW50TW9kdWxlICkgewoJCVFVbml0Lm1vZHVsZURvbmUoIGNvbmZpZy5jdXJyZW50TW9kdWxlLCBjb25maWcubW9kdWxlU3RhdHMuYmFkLCBjb25maWcubW9kdWxlU3RhdHMuYWxsICk7Cgl9CgoJdmFyIGJhbm5lciA9IGlkKCJxdW5pdC1iYW5uZXIiKSwKCQl0ZXN0cyA9IGlkKCJxdW5pdC10ZXN0cyIpLAoJCWh0bWwgPSBbJ1Rlc3RzIGNvbXBsZXRlZCBpbiAnLAoJCStuZXcgRGF0ZSAtIGNvbmZpZy5zdGFydGVkLCAnIG1pbGxpc2Vjb25kcy48YnIvPicsCgkJJzxzcGFuIGNsYXNzPSJwYXNzZWQiPicsIGNvbmZpZy5zdGF0cy5hbGwgLSBjb25maWcuc3RhdHMuYmFkLCAnPC9zcGFuPiB0ZXN0cyBvZiA8c3BhbiBjbGFzcz0idG90YWwiPicsIGNvbmZpZy5zdGF0cy5hbGwsICc8L3NwYW4+IHBhc3NlZCwgPHNwYW4gY2xhc3M9ImZhaWxlZCI+JywgY29uZmlnLnN0YXRzLmJhZCwnPC9zcGFuPiBmYWlsZWQuJ10uam9pbignJyk7CgoJaWYgKCBiYW5uZXIgKSB7CgkJYmFubmVyLmNsYXNzTmFtZSA9IChjb25maWcuc3RhdHMuYmFkID8gInF1bml0LWZhaWwiIDogInF1bml0LXBhc3MiKTsKCX0KCglpZiAoIHRlc3RzICkgewkKCQl2YXIgcmVzdWx0ID0gaWQoInF1bml0LXRlc3RyZXN1bHQiKTsKCgkJaWYgKCAhcmVzdWx0ICkgewoJCQlyZXN1bHQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCJwIik7CgkJCXJlc3VsdC5pZCA9ICJxdW5pdC10ZXN0cmVzdWx0IjsKCQkJcmVzdWx0LmNsYXNzTmFtZSA9ICJyZXN1bHQiOwoJCQl0ZXN0cy5wYXJlbnROb2RlLmluc2VydEJlZm9yZSggcmVzdWx0LCB0ZXN0cy5uZXh0U2libGluZyApOwoJCX0KCgkJcmVzdWx0LmlubmVySFRNTCA9IGh0bWw7Cgl9CgoJUVVuaXQuZG9uZSggY29uZmlnLnN0YXRzLmJhZCwgY29uZmlnLnN0YXRzLmFsbCApOwp9CgpmdW5jdGlvbiB2YWxpZFRlc3QoIG5hbWUgKSB7Cgl2YXIgaSA9IGNvbmZpZy5maWx0ZXJzLmxlbmd0aCwKCQlydW4gPSBmYWxzZTsKCglpZiAoICFpICkgewoJCXJldHVybiB0cnVlOwoJfQoJCgl3aGlsZSAoIGktLSApIHsKCQl2YXIgZmlsdGVyID0gY29uZmlnLmZpbHRlcnNbaV0sCgkJCW5vdCA9IGZpbHRlci5jaGFyQXQoMCkgPT0gJyEnOwoKCQlpZiAoIG5vdCApIHsKCQkJZmlsdGVyID0gZmlsdGVyLnNsaWNlKDEpOwoJCX0KCgkJaWYgKCBuYW1lLmluZGV4T2YoZmlsdGVyKSAhPT0gLTEgKSB7CgkJCXJldHVybiAhbm90OwoJCX0KCgkJaWYgKCBub3QgKSB7CgkJCXJ1biA9IHRydWU7CgkJfQoJfQoKCXJldHVybiBydW47Cn0KCi8vIHNvIGZhciBzdXBwb3J0cyBvbmx5IEZpcmVmb3gsIENocm9tZSBhbmQgT3BlcmEgKGJ1Z2d5KQovLyBjb3VsZCBiZSBleHRlbmRlZCBpbiB0aGUgZnV0dXJlIHRvIHVzZSBzb21ldGhpbmcgbGlrZSBodHRwczovL2dpdGh1Yi5jb20vY3Nub3Zlci9UcmFjZUtpdApmdW5jdGlvbiBzb3VyY2VGcm9tU3RhY2t0cmFjZSgpIHsKCXRyeSB7CgkJdGhyb3cgbmV3IEVycm9yKCk7Cgl9IGNhdGNoICggZSApIHsKCQlpZiAoZS5zdGFja3RyYWNlKSB7CgkJCS8vIE9wZXJhCgkJCXJldHVybiBlLnN0YWNrdHJhY2Uuc3BsaXQoIlxuIilbNl07CgkJfSBlbHNlIGlmIChlLnN0YWNrKSB7CgkJCS8vIEZpcmVmb3gsIENocm9tZQoJCQlyZXR1cm4gZS5zdGFjay5zcGxpdCgiXG4iKVs0XTsKCQl9Cgl9Cn0KCmZ1bmN0aW9uIHJlc3VsdERpc3BsYXlTdHlsZShwYXNzZWQpIHsKCXJldHVybiBwYXNzZWQgJiYgaWQoInF1bml0LWZpbHRlci1wYXNzIikgJiYgaWQoInF1bml0LWZpbHRlci1wYXNzIikuY2hlY2tlZCA/ICdub25lJyA6ICcnOwp9CgpmdW5jdGlvbiBlc2NhcGVIdG1sKHMpIHsKCWlmICghcykgewoJCXJldHVybiAiIjsKCX0KCXMgPSBzICsgIiI7CglyZXR1cm4gcy5yZXBsYWNlKC9bXCYiPD5cXF0vZywgZnVuY3Rpb24ocykgewoJCXN3aXRjaChzKSB7CgkJCWNhc2UgIiYiOiByZXR1cm4gIiZhbXA7IjsKCQkJY2FzZSAiXFwiOiByZXR1cm4gIlxcXFwiOwoJCQljYXNlICciJzogcmV0dXJuICdcIic7CgkJCWNhc2UgIjwiOiByZXR1cm4gIiZsdDsiOwoJCQljYXNlICI+IjogcmV0dXJuICImZ3Q7IjsKCQkJZGVmYXVsdDogcmV0dXJuIHM7CgkJfQoJfSk7Cn0KCmZ1bmN0aW9uIHN5bmNocm9uaXplKCBjYWxsYmFjayApIHsKCWNvbmZpZy5xdWV1ZS5wdXNoKCBjYWxsYmFjayApOwoKCWlmICggY29uZmlnLmF1dG9ydW4gJiYgIWNvbmZpZy5ibG9ja2luZyApIHsKCQlwcm9jZXNzKCk7Cgl9Cn0KCmZ1bmN0aW9uIHByb2Nlc3MoKSB7Cgl2YXIgc3RhcnQgPSAobmV3IERhdGUoKSkuZ2V0VGltZSgpOwoKCXdoaWxlICggY29uZmlnLnF1ZXVlLmxlbmd0aCAmJiAhY29uZmlnLmJsb2NraW5nICkgewoJCWlmICggY29uZmlnLnVwZGF0ZVJhdGUgPD0gMCB8fCAoKChuZXcgRGF0ZSgpKS5nZXRUaW1lKCkgLSBzdGFydCkgPCBjb25maWcudXBkYXRlUmF0ZSkgKSB7CgkJCWNvbmZpZy5xdWV1ZS5zaGlmdCgpKCk7CgkJfSBlbHNlIHsKCQkJd2luZG93LnNldFRpbWVvdXQoIHByb2Nlc3MsIDEzICk7CgkJCWJyZWFrOwoJCX0KCX0KICBpZiAoIWNvbmZpZy5ibG9ja2luZyAmJiAhY29uZmlnLnF1ZXVlLmxlbmd0aCkgewogICAgZG9uZSgpOwogIH0KfQoKZnVuY3Rpb24gc2F2ZUdsb2JhbCgpIHsKCWNvbmZpZy5wb2xsdXRpb24gPSBbXTsKCQoJaWYgKCBjb25maWcubm9nbG9iYWxzICkgewoJCWZvciAoIHZhciBrZXkgaW4gd2luZG93ICkgewoJCQljb25maWcucG9sbHV0aW9uLnB1c2goIGtleSApOwoJCX0KCX0KfQoKZnVuY3Rpb24gY2hlY2tQb2xsdXRpb24oIG5hbWUgKSB7Cgl2YXIgb2xkID0gY29uZmlnLnBvbGx1dGlvbjsKCXNhdmVHbG9iYWwoKTsKCQoJdmFyIG5ld0dsb2JhbHMgPSBkaWZmKCBvbGQsIGNvbmZpZy5wb2xsdXRpb24gKTsKCWlmICggbmV3R2xvYmFscy5sZW5ndGggPiAwICkgewoJCW9rKCBmYWxzZSwgIkludHJvZHVjZWQgZ2xvYmFsIHZhcmlhYmxlKHMpOiAiICsgbmV3R2xvYmFscy5qb2luKCIsICIpICk7CgkJY29uZmlnLmN1cnJlbnQuZXhwZWN0ZWQrKzsKCX0KCgl2YXIgZGVsZXRlZEdsb2JhbHMgPSBkaWZmKCBjb25maWcucG9sbHV0aW9uLCBvbGQgKTsKCWlmICggZGVsZXRlZEdsb2JhbHMubGVuZ3RoID4gMCApIHsKCQlvayggZmFsc2UsICJEZWxldGVkIGdsb2JhbCB2YXJpYWJsZShzKTogIiArIGRlbGV0ZWRHbG9iYWxzLmpvaW4oIiwgIikgKTsKCQljb25maWcuY3VycmVudC5leHBlY3RlZCsrOwoJfQp9CgovLyByZXR1cm5zIGEgbmV3IEFycmF5IHdpdGggdGhlIGVsZW1lbnRzIHRoYXQgYXJlIGluIGEgYnV0IG5vdCBpbiBiCmZ1bmN0aW9uIGRpZmYoIGEsIGIgKSB7Cgl2YXIgcmVzdWx0ID0gYS5zbGljZSgpOwoJZm9yICggdmFyIGkgPSAwOyBpIDwgcmVzdWx0Lmxlbmd0aDsgaSsrICkgewoJCWZvciAoIHZhciBqID0gMDsgaiA8IGIubGVuZ3RoOyBqKysgKSB7CgkJCWlmICggcmVzdWx0W2ldID09PSBiW2pdICkgewoJCQkJcmVzdWx0LnNwbGljZShpLCAxKTsKCQkJCWktLTsKCQkJCWJyZWFrOwoJCQl9CgkJfQoJfQoJcmV0dXJuIHJlc3VsdDsKfQoKZnVuY3Rpb24gZmFpbChtZXNzYWdlLCBleGNlcHRpb24sIGNhbGxiYWNrKSB7CglpZiAoIHR5cGVvZiBjb25zb2xlICE9PSAidW5kZWZpbmVkIiAmJiBjb25zb2xlLmVycm9yICYmIGNvbnNvbGUud2FybiApIHsKCQljb25zb2xlLmVycm9yKG1lc3NhZ2UpOwoJCWNvbnNvbGUuZXJyb3IoZXhjZXB0aW9uKTsKCQljb25zb2xlLndhcm4oY2FsbGJhY2sudG9TdHJpbmcoKSk7CgoJfSBlbHNlIGlmICggd2luZG93Lm9wZXJhICYmIG9wZXJhLnBvc3RFcnJvciApIHsKCQlvcGVyYS5wb3N0RXJyb3IobWVzc2FnZSwgZXhjZXB0aW9uLCBjYWxsYmFjay50b1N0cmluZyk7Cgl9Cn0KCmZ1bmN0aW9uIGV4dGVuZChhLCBiKSB7Cglmb3IgKCB2YXIgcHJvcCBpbiBiICkgewoJCWFbcHJvcF0gPSBiW3Byb3BdOwoJfQoKCXJldHVybiBhOwp9CgpmdW5jdGlvbiBhZGRFdmVudChlbGVtLCB0eXBlLCBmbikgewoJaWYgKCBlbGVtLmFkZEV2ZW50TGlzdGVuZXIgKSB7CgkJZWxlbS5hZGRFdmVudExpc3RlbmVyKCB0eXBlLCBmbiwgZmFsc2UgKTsKCX0gZWxzZSBpZiAoIGVsZW0uYXR0YWNoRXZlbnQgKSB7CgkJZWxlbS5hdHRhY2hFdmVudCggIm9uIiArIHR5cGUsIGZuICk7Cgl9IGVsc2UgewoJCWZuKCk7Cgl9Cn0KCmZ1bmN0aW9uIGlkKG5hbWUpIHsKCXJldHVybiAhISh0eXBlb2YgZG9jdW1lbnQgIT09ICJ1bmRlZmluZWQiICYmIGRvY3VtZW50ICYmIGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKSAmJgoJCWRvY3VtZW50LmdldEVsZW1lbnRCeUlkKCBuYW1lICk7Cn0KCi8vIFRlc3QgZm9yIGVxdWFsaXR5IGFueSBKYXZhU2NyaXB0IHR5cGUuCi8vIERpc2N1c3Npb25zIGFuZCByZWZlcmVuY2U6IGh0dHA6Ly9waGlscmF0aGUuY29tL2FydGljbGVzL2VxdWl2Ci8vIFRlc3Qgc3VpdGVzOiBodHRwOi8vcGhpbHJhdGhlLmNvbS90ZXN0cy9lcXVpdgovLyBBdXRob3I6IFBoaWxpcHBlIFJhdGjDqSA8cHJhdGhlQGdtYWlsLmNvbT4KUVVuaXQuZXF1aXYgPSBmdW5jdGlvbiAoKSB7CgogICAgdmFyIGlubmVyRXF1aXY7IC8vIHRoZSByZWFsIGVxdWl2IGZ1bmN0aW9uCiAgICB2YXIgY2FsbGVycyA9IFtdOyAvLyBzdGFjayB0byBkZWNpZGUgYmV0d2VlbiBza2lwL2Fib3J0IGZ1bmN0aW9ucwogICAgdmFyIHBhcmVudHMgPSBbXTsgLy8gc3RhY2sgdG8gYXZvaWRpbmcgbG9vcHMgZnJvbSBjaXJjdWxhciByZWZlcmVuY2luZwoKICAgIC8vIENhbGwgdGhlIG8gcmVsYXRlZCBjYWxsYmFjayB3aXRoIHRoZSBnaXZlbiBhcmd1bWVudHMuCiAgICBmdW5jdGlvbiBiaW5kQ2FsbGJhY2tzKG8sIGNhbGxiYWNrcywgYXJncykgewogICAgICAgIHZhciBwcm9wID0gUVVuaXQub2JqZWN0VHlwZShvKTsKICAgICAgICBpZiAocHJvcCkgewogICAgICAgICAgICBpZiAoUVVuaXQub2JqZWN0VHlwZShjYWxsYmFja3NbcHJvcF0pID09PSAiZnVuY3Rpb24iKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2tzW3Byb3BdLmFwcGx5KGNhbGxiYWNrcywgYXJncyk7CiAgICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGJhY2tzW3Byb3BdOyAvLyBvciB1bmRlZmluZWQKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIAogICAgdmFyIGNhbGxiYWNrcyA9IGZ1bmN0aW9uICgpIHsKCiAgICAgICAgLy8gZm9yIHN0cmluZywgYm9vbGVhbiwgbnVtYmVyIGFuZCBudWxsCiAgICAgICAgZnVuY3Rpb24gdXNlU3RyaWN0RXF1YWxpdHkoYiwgYSkgewogICAgICAgICAgICBpZiAoYiBpbnN0YW5jZW9mIGEuY29uc3RydWN0b3IgfHwgYSBpbnN0YW5jZW9mIGIuY29uc3RydWN0b3IpIHsKICAgICAgICAgICAgICAgIC8vIHRvIGNhdGNoIHNob3J0IGFubm90YWlvbiBWUyAnbmV3JyBhbm5vdGF0aW9uIG9mIGEgZGVjbGFyYXRpb24KICAgICAgICAgICAgICAgIC8vIGUuZy4gdmFyIGkgPSAxOwogICAgICAgICAgICAgICAgLy8gICAgICB2YXIgaiA9IG5ldyBOdW1iZXIoMSk7CiAgICAgICAgICAgICAgICByZXR1cm4gYSA9PSBiOwogICAgICAgICAgICB9IGVsc2UgewogICAgICAgICAgICAgICAgcmV0dXJuIGEgPT09IGI7CiAgICAgICAgICAgIH0KICAgICAgICB9CgogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgICJzdHJpbmciOiB1c2VTdHJpY3RFcXVhbGl0eSwKICAgICAgICAgICAgImJvb2xlYW4iOiB1c2VTdHJpY3RFcXVhbGl0eSwKICAgICAgICAgICAgIm51bWJlciI6IHVzZVN0cmljdEVxdWFsaXR5LAogICAgICAgICAgICAibnVsbCI6IHVzZVN0cmljdEVxdWFsaXR5LAogICAgICAgICAgICAidW5kZWZpbmVkIjogdXNlU3RyaWN0RXF1YWxpdHksCgogICAgICAgICAgICAibmFuIjogZnVuY3Rpb24gKGIpIHsKICAgICAgICAgICAgICAgIHJldHVybiBpc05hTihiKTsKICAgICAgICAgICAgfSwKCiAgICAgICAgICAgICJkYXRlIjogZnVuY3Rpb24gKGIsIGEpIHsKICAgICAgICAgICAgICAgIHJldHVybiBRVW5pdC5vYmplY3RUeXBlKGIpID09PSAiZGF0ZSIgJiYgYS52YWx1ZU9mKCkgPT09IGIudmFsdWVPZigpOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgInJlZ2V4cCI6IGZ1bmN0aW9uIChiLCBhKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gUVVuaXQub2JqZWN0VHlwZShiKSA9PT0gInJlZ2V4cCIgJiYKICAgICAgICAgICAgICAgICAgICBhLnNvdXJjZSA9PT0gYi5zb3VyY2UgJiYgLy8gdGhlIHJlZ2V4IGl0c2VsZgogICAgICAgICAgICAgICAgICAgIGEuZ2xvYmFsID09PSBiLmdsb2JhbCAmJiAvLyBhbmQgaXRzIG1vZGlmZXJzIChnbWkpIC4uLgogICAgICAgICAgICAgICAgICAgIGEuaWdub3JlQ2FzZSA9PT0gYi5pZ25vcmVDYXNlICYmCiAgICAgICAgICAgICAgICAgICAgYS5tdWx0aWxpbmUgPT09IGIubXVsdGlsaW5lOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgLy8gLSBza2lwIHdoZW4gdGhlIHByb3BlcnR5IGlzIGEgbWV0aG9kIG9mIGFuIGluc3RhbmNlIChPT1ApCiAgICAgICAgICAgIC8vIC0gYWJvcnQgb3RoZXJ3aXNlLAogICAgICAgICAgICAvLyAgIGluaXRpYWwgPT09IHdvdWxkIGhhdmUgY2F0Y2ggaWRlbnRpY2FsIHJlZmVyZW5jZXMgYW55d2F5CiAgICAgICAgICAgICJmdW5jdGlvbiI6IGZ1bmN0aW9uICgpIHsKICAgICAgICAgICAgICAgIHZhciBjYWxsZXIgPSBjYWxsZXJzW2NhbGxlcnMubGVuZ3RoIC0gMV07CiAgICAgICAgICAgICAgICByZXR1cm4gY2FsbGVyICE9PSBPYmplY3QgJiYKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZW9mIGNhbGxlciAhPT0gInVuZGVmaW5lZCI7CiAgICAgICAgICAgIH0sCgogICAgICAgICAgICAiYXJyYXkiOiBmdW5jdGlvbiAoYiwgYSkgewogICAgICAgICAgICAgICAgdmFyIGksIGosIGxvb3A7CiAgICAgICAgICAgICAgICB2YXIgbGVuOwoKICAgICAgICAgICAgICAgIC8vIGIgY291bGQgYmUgYW4gb2JqZWN0IGxpdGVyYWwgaGVyZQogICAgICAgICAgICAgICAgaWYgKCAhIChRVW5pdC5vYmplY3RUeXBlKGIpID09PSAiYXJyYXkiKSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0gICAKICAgICAgICAgICAgICAgIAogICAgICAgICAgICAgICAgbGVuID0gYS5sZW5ndGg7CiAgICAgICAgICAgICAgICBpZiAobGVuICE9PSBiLmxlbmd0aCkgeyAvLyBzYWZlIGFuZCBmYXN0ZXIKICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIC8vdHJhY2sgcmVmZXJlbmNlIHRvIGF2b2lkIGNpcmN1bGFyIHJlZmVyZW5jZXMKICAgICAgICAgICAgICAgIHBhcmVudHMucHVzaChhKTsKICAgICAgICAgICAgICAgIGZvciAoaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgICAgICAgICAgIGxvb3AgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICBmb3Ioaj0wO2o8cGFyZW50cy5sZW5ndGg7aisrKXsKICAgICAgICAgICAgICAgICAgICAgICAgaWYocGFyZW50c1tqXSA9PT0gYVtpXSl7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBsb29wID0gdHJ1ZTsvL2RvbnQgcmV3YWxrIGFycmF5CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAgICAgaWYgKCFsb29wICYmICEgaW5uZXJFcXVpdihhW2ldLCBiW2ldKSkgewogICAgICAgICAgICAgICAgICAgICAgICBwYXJlbnRzLnBvcCgpOwogICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgcGFyZW50cy5wb3AoKTsKICAgICAgICAgICAgICAgIHJldHVybiB0cnVlOwogICAgICAgICAgICB9LAoKICAgICAgICAgICAgIm9iamVjdCI6IGZ1bmN0aW9uIChiLCBhKSB7CiAgICAgICAgICAgICAgICB2YXIgaSwgaiwgbG9vcDsKICAgICAgICAgICAgICAgIHZhciBlcSA9IHRydWU7IC8vIHVubGVzcyB3ZSBjYW4gcHJvb3ZlIGl0CiAgICAgICAgICAgICAgICB2YXIgYVByb3BlcnRpZXMgPSBbXSwgYlByb3BlcnRpZXMgPSBbXTsgLy8gY29sbGVjdGlvbiBvZiBzdHJpbmdzCgogICAgICAgICAgICAgICAgLy8gY29tcGFyaW5nIGNvbnN0cnVjdG9ycyBpcyBtb3JlIHN0cmljdCB0aGFuIHVzaW5nIGluc3RhbmNlb2YKICAgICAgICAgICAgICAgIGlmICggYS5jb25zdHJ1Y3RvciAhPT0gYi5jb25zdHJ1Y3RvcikgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0KCiAgICAgICAgICAgICAgICAvLyBzdGFjayBjb25zdHJ1Y3RvciBiZWZvcmUgdHJhdmVyc2luZyBwcm9wZXJ0aWVzCiAgICAgICAgICAgICAgICBjYWxsZXJzLnB1c2goYS5jb25zdHJ1Y3Rvcik7CiAgICAgICAgICAgICAgICAvL3RyYWNrIHJlZmVyZW5jZSB0byBhdm9pZCBjaXJjdWxhciByZWZlcmVuY2VzCiAgICAgICAgICAgICAgICBwYXJlbnRzLnB1c2goYSk7CiAgICAgICAgICAgICAgICAKICAgICAgICAgICAgICAgIGZvciAoaSBpbiBhKSB7IC8vIGJlIHN0cmljdDogZG9uJ3QgZW5zdXJlcyBoYXNPd25Qcm9wZXJ0eSBhbmQgZ28gZGVlcAogICAgICAgICAgICAgICAgICAgIGxvb3AgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICBmb3Ioaj0wO2o8cGFyZW50cy5sZW5ndGg7aisrKXsKICAgICAgICAgICAgICAgICAgICAgICAgaWYocGFyZW50c1tqXSA9PT0gYVtpXSkKICAgICAgICAgICAgICAgICAgICAgICAgICAgIGxvb3AgPSB0cnVlOyAvL2Rvbid0IGdvIGRvd24gdGhlIHNhbWUgcGF0aCB0d2ljZQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICBhUHJvcGVydGllcy5wdXNoKGkpOyAvLyBjb2xsZWN0IGEncyBwcm9wZXJ0aWVzCgogICAgICAgICAgICAgICAgICAgIGlmICghbG9vcCAmJiAhIGlubmVyRXF1aXYoYVtpXSwgYltpXSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgZXEgPSBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIGNhbGxlcnMucG9wKCk7IC8vIHVuc3RhY2ssIHdlIGFyZSBkb25lCiAgICAgICAgICAgICAgICBwYXJlbnRzLnBvcCgpOwoKICAgICAgICAgICAgICAgIGZvciAoaSBpbiBiKSB7CiAgICAgICAgICAgICAgICAgICAgYlByb3BlcnRpZXMucHVzaChpKTsgLy8gY29sbGVjdCBiJ3MgcHJvcGVydGllcwogICAgICAgICAgICAgICAgfQoKICAgICAgICAgICAgICAgIC8vIEVuc3VyZXMgaWRlbnRpY2FsIHByb3BlcnRpZXMgbmFtZQogICAgICAgICAgICAgICAgcmV0dXJuIGVxICYmIGlubmVyRXF1aXYoYVByb3BlcnRpZXMuc29ydCgpLCBiUHJvcGVydGllcy5zb3J0KCkpOwogICAgICAgICAgICB9CiAgICAgICAgfTsKICAgIH0oKTsKCiAgICBpbm5lckVxdWl2ID0gZnVuY3Rpb24gKCkgeyAvLyBjYW4gdGFrZSBtdWx0aXBsZSBhcmd1bWVudHMKICAgICAgICB2YXIgYXJncyA9IEFycmF5LnByb3RvdHlwZS5zbGljZS5hcHBseShhcmd1bWVudHMpOwogICAgICAgIGlmIChhcmdzLmxlbmd0aCA8IDIpIHsKICAgICAgICAgICAgcmV0dXJuIHRydWU7IC8vIGVuZCB0cmFuc2l0aW9uCiAgICAgICAgfQoKICAgICAgICByZXR1cm4gKGZ1bmN0aW9uIChhLCBiKSB7CiAgICAgICAgICAgIGlmIChhID09PSBiKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsgLy8gY2F0Y2ggdGhlIG1vc3QgeW91IGNhbgogICAgICAgICAgICB9IGVsc2UgaWYgKGEgPT09IG51bGwgfHwgYiA9PT0gbnVsbCB8fCB0eXBlb2YgYSA9PT0gInVuZGVmaW5lZCIgfHwgdHlwZW9mIGIgPT09ICJ1bmRlZmluZWQiIHx8IFFVbml0Lm9iamVjdFR5cGUoYSkgIT09IFFVbml0Lm9iamVjdFR5cGUoYikpIHsKICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsgLy8gZG9uJ3QgbG9zZSB0aW1lIHdpdGggZXJyb3IgcHJvbmUgY2FzZXMKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHJldHVybiBiaW5kQ2FsbGJhY2tzKGEsIGNhbGxiYWNrcywgW2IsIGFdKTsKICAgICAgICAgICAgfQoKICAgICAgICAvLyBhcHBseSB0cmFuc2l0aW9uIHdpdGggKDEuLm4pIGFyZ3VtZW50cwogICAgICAgIH0pKGFyZ3NbMF0sIGFyZ3NbMV0pICYmIGFyZ3VtZW50cy5jYWxsZWUuYXBwbHkodGhpcywgYXJncy5zcGxpY2UoMSwgYXJncy5sZW5ndGggLTEpKTsKICAgIH07CgogICAgcmV0dXJuIGlubmVyRXF1aXY7Cgp9KCk7CgovKioKICoganNEdW1wCiAqIENvcHlyaWdodCAoYykgMjAwOCBBcmllbCBGbGVzbGVyIC0gYWZsZXNsZXIoYXQpZ21haWwoZG90KWNvbSB8IGh0dHA6Ly9mbGVzbGVyLmJsb2dzcG90LmNvbQogKiBMaWNlbnNlZCB1bmRlciBCU0QgKGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvYnNkLWxpY2Vuc2UucGhwKQogKiBEYXRlOiA1LzE1LzIwMDgKICogQHByb2plY3REZXNjcmlwdGlvbiBBZHZhbmNlZCBhbmQgZXh0ZW5zaWJsZSBkYXRhIGR1bXBpbmcgZm9yIEphdmFzY3JpcHQuCiAqIEB2ZXJzaW9uIDEuMC4wCiAqIEBhdXRob3IgQXJpZWwgRmxlc2xlcgogKiBAbGluayB7aHR0cDovL2ZsZXNsZXIuYmxvZ3Nwb3QuY29tLzIwMDgvMDUvanNkdW1wLXByZXR0eS1kdW1wLW9mLWFueS1qYXZhc2NyaXB0Lmh0bWx9CiAqLwpRVW5pdC5qc0R1bXAgPSAoZnVuY3Rpb24oKSB7CglmdW5jdGlvbiBxdW90ZSggc3RyICkgewoJCXJldHVybiAnIicgKyBzdHIudG9TdHJpbmcoKS5yZXBsYWNlKC8iL2csICdcXCInKSArICciJzsKCX07CglmdW5jdGlvbiBsaXRlcmFsKCBvICkgewoJCXJldHVybiBvICsgJyc7CQoJfTsKCWZ1bmN0aW9uIGpvaW4oIHByZSwgYXJyLCBwb3N0ICkgewoJCXZhciBzID0ganNEdW1wLnNlcGFyYXRvcigpLAoJCQliYXNlID0ganNEdW1wLmluZGVudCgpLAoJCQlpbm5lciA9IGpzRHVtcC5pbmRlbnQoMSk7CgkJaWYgKCBhcnIuam9pbiApCgkJCWFyciA9IGFyci5qb2luKCAnLCcgKyBzICsgaW5uZXIgKTsKCQlpZiAoICFhcnIgKQoJCQlyZXR1cm4gcHJlICsgcG9zdDsKCQlyZXR1cm4gWyBwcmUsIGlubmVyICsgYXJyLCBiYXNlICsgcG9zdCBdLmpvaW4ocyk7Cgl9OwoJZnVuY3Rpb24gYXJyYXkoIGFyciApIHsKCQl2YXIgaSA9IGFyci5sZW5ndGgsCXJldCA9IEFycmF5KGkpOwkJCQkJCgkJdGhpcy51cCgpOwoJCXdoaWxlICggaS0tICkKCQkJcmV0W2ldID0gdGhpcy5wYXJzZSggYXJyW2ldICk7CQkJCQoJCXRoaXMuZG93bigpOwoJCXJldHVybiBqb2luKCAnWycsIHJldCwgJ10nICk7Cgl9OwoJCgl2YXIgcmVOYW1lID0gL15mdW5jdGlvbiAoXHcrKS87CgkKCXZhciBqc0R1bXAgPSB7CgkJcGFyc2U6ZnVuY3Rpb24oIG9iaiwgdHlwZSApIHsgLy90eXBlIGlzIHVzZWQgbW9zdGx5IGludGVybmFsbHksIHlvdSBjYW4gZml4IGEgKGN1c3RvbSl0eXBlIGluIGFkdmFuY2UKCQkJdmFyCXBhcnNlciA9IHRoaXMucGFyc2Vyc1sgdHlwZSB8fCB0aGlzLnR5cGVPZihvYmopIF07CgkJCXR5cGUgPSB0eXBlb2YgcGFyc2VyOwkJCQoJCQkKCQkJcmV0dXJuIHR5cGUgPT0gJ2Z1bmN0aW9uJyA/IHBhcnNlci5jYWxsKCB0aGlzLCBvYmogKSA6CgkJCQkgICB0eXBlID09ICdzdHJpbmcnID8gcGFyc2VyIDoKCQkJCSAgIHRoaXMucGFyc2Vycy5lcnJvcjsKCQl9LAoJCXR5cGVPZjpmdW5jdGlvbiggb2JqICkgewoJCQl2YXIgdHlwZTsKCQkJaWYgKCBvYmogPT09IG51bGwgKSB7CgkJCQl0eXBlID0gIm51bGwiOwoJCQl9IGVsc2UgaWYgKHR5cGVvZiBvYmogPT09ICJ1bmRlZmluZWQiKSB7CgkJCQl0eXBlID0gInVuZGVmaW5lZCI7CgkJCX0gZWxzZSBpZiAoUVVuaXQuaXMoIlJlZ0V4cCIsIG9iaikpIHsKCQkJCXR5cGUgPSAicmVnZXhwIjsKCQkJfSBlbHNlIGlmIChRVW5pdC5pcygiRGF0ZSIsIG9iaikpIHsKCQkJCXR5cGUgPSAiZGF0ZSI7CgkJCX0gZWxzZSBpZiAoUVVuaXQuaXMoIkZ1bmN0aW9uIiwgb2JqKSkgewoJCQkJdHlwZSA9ICJmdW5jdGlvbiI7CgkJCX0gZWxzZSBpZiAodHlwZW9mIG9iai5zZXRJbnRlcnZhbCAhPT0gdW5kZWZpbmVkICYmIHR5cGVvZiBvYmouZG9jdW1lbnQgIT09ICJ1bmRlZmluZWQiICYmIHR5cGVvZiBvYmoubm9kZVR5cGUgPT09ICJ1bmRlZmluZWQiKSB7CgkJCQl0eXBlID0gIndpbmRvdyI7CgkJCX0gZWxzZSBpZiAob2JqLm5vZGVUeXBlID09PSA5KSB7CgkJCQl0eXBlID0gImRvY3VtZW50IjsKCQkJfSBlbHNlIGlmIChvYmoubm9kZVR5cGUpIHsKCQkJCXR5cGUgPSAibm9kZSI7CgkJCX0gZWxzZSBpZiAodHlwZW9mIG9iaiA9PT0gIm9iamVjdCIgJiYgdHlwZW9mIG9iai5sZW5ndGggPT09ICJudW1iZXIiICYmIG9iai5sZW5ndGggPj0gMCkgewoJCQkJdHlwZSA9ICJhcnJheSI7CgkJCX0gZWxzZSB7CgkJCQl0eXBlID0gdHlwZW9mIG9iajsKCQkJfQoJCQlyZXR1cm4gdHlwZTsKCQl9LAoJCXNlcGFyYXRvcjpmdW5jdGlvbigpIHsKCQkJcmV0dXJuIHRoaXMubXVsdGlsaW5lID8JdGhpcy5IVE1MID8gJzxiciAvPicgOiAnXG4nIDogdGhpcy5IVE1MID8gJyZuYnNwOycgOiAnICc7CgkJfSwKCQlpbmRlbnQ6ZnVuY3Rpb24oIGV4dHJhICkgey8vIGV4dHJhIGNhbiBiZSBhIG51bWJlciwgc2hvcnRjdXQgZm9yIGluY3JlYXNpbmctY2FsbGluZy1kZWNyZWFzaW5nCgkJCWlmICggIXRoaXMubXVsdGlsaW5lICkKCQkJCXJldHVybiAnJzsKCQkJdmFyIGNociA9IHRoaXMuaW5kZW50Q2hhcjsKCQkJaWYgKCB0aGlzLkhUTUwgKQoJCQkJY2hyID0gY2hyLnJlcGxhY2UoL1x0L2csJyAgICcpLnJlcGxhY2UoLyAvZywnJm5ic3A7Jyk7CgkJCXJldHVybiBBcnJheSggdGhpcy5fZGVwdGhfICsgKGV4dHJhfHwwKSApLmpvaW4oY2hyKTsKCQl9LAoJCXVwOmZ1bmN0aW9uKCBhICkgewoJCQl0aGlzLl9kZXB0aF8gKz0gYSB8fCAxOwoJCX0sCgkJZG93bjpmdW5jdGlvbiggYSApIHsKCQkJdGhpcy5fZGVwdGhfIC09IGEgfHwgMTsKCQl9LAoJCXNldFBhcnNlcjpmdW5jdGlvbiggbmFtZSwgcGFyc2VyICkgewoJCQl0aGlzLnBhcnNlcnNbbmFtZV0gPSBwYXJzZXI7CgkJfSwKCQkvLyBUaGUgbmV4dCAzIGFyZSBleHBvc2VkIHNvIHlvdSBjYW4gdXNlIHRoZW0KCQlxdW90ZTpxdW90ZSwgCgkJbGl0ZXJhbDpsaXRlcmFsLAoJCWpvaW46am9pbiwKCQkvLwoJCV9kZXB0aF86IDEsCgkJLy8gVGhpcyBpcyB0aGUgbGlzdCBvZiBwYXJzZXJzLCB0byBtb2RpZnkgdGhlbSwgdXNlIGpzRHVtcC5zZXRQYXJzZXIKCQlwYXJzZXJzOnsKCQkJd2luZG93OiAnW1dpbmRvd10nLAoJCQlkb2N1bWVudDogJ1tEb2N1bWVudF0nLAoJCQllcnJvcjonW0VSUk9SXScsIC8vd2hlbiBubyBwYXJzZXIgaXMgZm91bmQsIHNob3VsZG4ndCBoYXBwZW4KCQkJdW5rbm93bjogJ1tVbmtub3duXScsCgkJCSdudWxsJzonbnVsbCcsCgkJCXVuZGVmaW5lZDondW5kZWZpbmVkJywKCQkJJ2Z1bmN0aW9uJzpmdW5jdGlvbiggZm4gKSB7CgkJCQl2YXIgcmV0ID0gJ2Z1bmN0aW9uJywKCQkJCQluYW1lID0gJ25hbWUnIGluIGZuID8gZm4ubmFtZSA6IChyZU5hbWUuZXhlYyhmbil8fFtdKVsxXTsvL2Z1bmN0aW9ucyBuZXZlciBoYXZlIG5hbWUgaW4gSUUKCQkJCWlmICggbmFtZSApCgkJCQkJcmV0ICs9ICcgJyArIG5hbWU7CgkJCQlyZXQgKz0gJygnOwoJCQkJCgkJCQlyZXQgPSBbIHJldCwgUVVuaXQuanNEdW1wLnBhcnNlKCBmbiwgJ2Z1bmN0aW9uQXJncycgKSwgJyl7J10uam9pbignJyk7CgkJCQlyZXR1cm4gam9pbiggcmV0LCBRVW5pdC5qc0R1bXAucGFyc2UoZm4sJ2Z1bmN0aW9uQ29kZScpLCAnfScgKTsKCQkJfSwKCQkJYXJyYXk6IGFycmF5LAoJCQlub2RlbGlzdDogYXJyYXksCgkJCWFyZ3VtZW50czogYXJyYXksCgkJCW9iamVjdDpmdW5jdGlvbiggbWFwICkgewoJCQkJdmFyIHJldCA9IFsgXTsKCQkJCVFVbml0LmpzRHVtcC51cCgpOwoJCQkJZm9yICggdmFyIGtleSBpbiBtYXAgKQoJCQkJCXJldC5wdXNoKCBRVW5pdC5qc0R1bXAucGFyc2Uoa2V5LCdrZXknKSArICc6ICcgKyBRVW5pdC5qc0R1bXAucGFyc2UobWFwW2tleV0pICk7CgkJCQlRVW5pdC5qc0R1bXAuZG93bigpOwoJCQkJcmV0dXJuIGpvaW4oICd7JywgcmV0LCAnfScgKTsKCQkJfSwKCQkJbm9kZTpmdW5jdGlvbiggbm9kZSApIHsKCQkJCXZhciBvcGVuID0gUVVuaXQuanNEdW1wLkhUTUwgPyAnJmx0OycgOiAnPCcsCgkJCQkJY2xvc2UgPSBRVW5pdC5qc0R1bXAuSFRNTCA/ICcmZ3Q7JyA6ICc+JzsKCQkJCQkKCQkJCXZhciB0YWcgPSBub2RlLm5vZGVOYW1lLnRvTG93ZXJDYXNlKCksCgkJCQkJcmV0ID0gb3BlbiArIHRhZzsKCQkJCQkKCQkJCWZvciAoIHZhciBhIGluIFFVbml0LmpzRHVtcC5ET01BdHRycyApIHsKCQkJCQl2YXIgdmFsID0gbm9kZVtRVW5pdC5qc0R1bXAuRE9NQXR0cnNbYV1dOwoJCQkJCWlmICggdmFsICkKCQkJCQkJcmV0ICs9ICcgJyArIGEgKyAnPScgKyBRVW5pdC5qc0R1bXAucGFyc2UoIHZhbCwgJ2F0dHJpYnV0ZScgKTsKCQkJCX0KCQkJCXJldHVybiByZXQgKyBjbG9zZSArIG9wZW4gKyAnLycgKyB0YWcgKyBjbG9zZTsKCQkJfSwKCQkJZnVuY3Rpb25BcmdzOmZ1bmN0aW9uKCBmbiApIHsvL2Z1bmN0aW9uIGNhbGxzIGl0IGludGVybmFsbHksIGl0J3MgdGhlIGFyZ3VtZW50cyBwYXJ0IG9mIHRoZSBmdW5jdGlvbgoJCQkJdmFyIGwgPSBmbi5sZW5ndGg7CgkJCQlpZiAoICFsICkgcmV0dXJuICcnOwkJCQkKCQkJCQoJCQkJdmFyIGFyZ3MgPSBBcnJheShsKTsKCQkJCXdoaWxlICggbC0tICkKCQkJCQlhcmdzW2xdID0gU3RyaW5nLmZyb21DaGFyQ29kZSg5NytsKTsvLzk3IGlzICdhJwoJCQkJcmV0dXJuICcgJyArIGFyZ3Muam9pbignLCAnKSArICcgJzsKCQkJfSwKCQkJa2V5OnF1b3RlLCAvL29iamVjdCBjYWxscyBpdCBpbnRlcm5hbGx5LCB0aGUga2V5IHBhcnQgb2YgYW4gaXRlbSBpbiBhIG1hcAoJCQlmdW5jdGlvbkNvZGU6J1tjb2RlXScsIC8vZnVuY3Rpb24gY2FsbHMgaXQgaW50ZXJuYWxseSwgaXQncyB0aGUgY29udGVudCBvZiB0aGUgZnVuY3Rpb24KCQkJYXR0cmlidXRlOnF1b3RlLCAvL25vZGUgY2FsbHMgaXQgaW50ZXJuYWxseSwgaXQncyBhbiBodG1sIGF0dHJpYnV0ZSB2YWx1ZQoJCQlzdHJpbmc6cXVvdGUsCgkJCWRhdGU6cXVvdGUsCgkJCXJlZ2V4cDpsaXRlcmFsLCAvL3JlZ2V4CgkJCW51bWJlcjpsaXRlcmFsLAoJCQknYm9vbGVhbic6bGl0ZXJhbAoJCX0sCgkJRE9NQXR0cnM6ey8vYXR0cmlidXRlcyB0byBkdW1wIGZyb20gbm9kZXMsIG5hbWU9PnJlYWxOYW1lCgkJCWlkOidpZCcsCgkJCW5hbWU6J25hbWUnLAoJCQknY2xhc3MnOidjbGFzc05hbWUnCgkJfSwKCQlIVE1MOmZhbHNlLC8vaWYgdHJ1ZSwgZW50aXRpZXMgYXJlIGVzY2FwZWQgKCA8LCA+LCBcdCwgc3BhY2UgYW5kIFxuICkKCQlpbmRlbnRDaGFyOicgICcsLy9pbmRlbnRhdGlvbiB1bml0CgkJbXVsdGlsaW5lOnRydWUgLy9pZiB0cnVlLCBpdGVtcyBpbiBhIGNvbGxlY3Rpb24sIGFyZSBzZXBhcmF0ZWQgYnkgYSBcbiwgZWxzZSBqdXN0IGEgc3BhY2UuCgl9OwoKCXJldHVybiBqc0R1bXA7Cn0pKCk7CgovLyBmcm9tIFNpenpsZS5qcwpmdW5jdGlvbiBnZXRUZXh0KCBlbGVtcyApIHsKCXZhciByZXQgPSAiIiwgZWxlbTsKCglmb3IgKCB2YXIgaSA9IDA7IGVsZW1zW2ldOyBpKysgKSB7CgkJZWxlbSA9IGVsZW1zW2ldOwoKCQkvLyBHZXQgdGhlIHRleHQgZnJvbSB0ZXh0IG5vZGVzIGFuZCBDREFUQSBub2RlcwoJCWlmICggZWxlbS5ub2RlVHlwZSA9PT0gMyB8fCBlbGVtLm5vZGVUeXBlID09PSA0ICkgewoJCQlyZXQgKz0gZWxlbS5ub2RlVmFsdWU7CgoJCS8vIFRyYXZlcnNlIGV2ZXJ5dGhpbmcgZWxzZSwgZXhjZXB0IGNvbW1lbnQgbm9kZXMKCQl9IGVsc2UgaWYgKCBlbGVtLm5vZGVUeXBlICE9PSA4ICkgewoJCQlyZXQgKz0gZ2V0VGV4dCggZWxlbS5jaGlsZE5vZGVzICk7CgkJfQoJfQoKCXJldHVybiByZXQ7Cn07CgovKgogKiBKYXZhc2NyaXB0IERpZmYgQWxnb3JpdGhtCiAqICBCeSBKb2huIFJlc2lnIChodHRwOi8vZWpvaG4ub3JnLykKICogIE1vZGlmaWVkIGJ5IENodSBBbGFuICJzcHJpdGUiCiAqCiAqIFJlbGVhc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KICoKICogTW9yZSBJbmZvOgogKiAgaHR0cDovL2Vqb2huLm9yZy9wcm9qZWN0cy9qYXZhc2NyaXB0LWRpZmYtYWxnb3JpdGhtLwogKiAgCiAqIFVzYWdlOiBRVW5pdC5kaWZmKGV4cGVjdGVkLCBhY3R1YWwpCiAqIAogKiBRVW5pdC5kaWZmKCJ0aGUgcXVpY2sgYnJvd24gZm94IGp1bXBlZCBvdmVyIiwgInRoZSBxdWljayBmb3gganVtcHMgb3ZlciIpID09ICJ0aGUgIHF1aWNrIDxkZWw+YnJvd24gPC9kZWw+IGZveCA8ZGVsPmp1bXBlZCA8L2RlbD48aW5zPmp1bXBzIDwvaW5zPiBvdmVyIgogKi8KUVVuaXQuZGlmZiA9IChmdW5jdGlvbigpIHsKCWZ1bmN0aW9uIGRpZmYobywgbil7CgkJdmFyIG5zID0gbmV3IE9iamVjdCgpOwoJCXZhciBvcyA9IG5ldyBPYmplY3QoKTsKCQkKCQlmb3IgKHZhciBpID0gMDsgaSA8IG4ubGVuZ3RoOyBpKyspIHsKCQkJaWYgKG5zW25baV1dID09IG51bGwpIAoJCQkJbnNbbltpXV0gPSB7CgkJCQkJcm93czogbmV3IEFycmF5KCksCgkJCQkJbzogbnVsbAoJCQkJfTsKCQkJbnNbbltpXV0ucm93cy5wdXNoKGkpOwoJCX0KCQkKCQlmb3IgKHZhciBpID0gMDsgaSA8IG8ubGVuZ3RoOyBpKyspIHsKCQkJaWYgKG9zW29baV1dID09IG51bGwpIAoJCQkJb3Nbb1tpXV0gPSB7CgkJCQkJcm93czogbmV3IEFycmF5KCksCgkJCQkJbjogbnVsbAoJCQkJfTsKCQkJb3Nbb1tpXV0ucm93cy5wdXNoKGkpOwoJCX0KCQkKCQlmb3IgKHZhciBpIGluIG5zKSB7CgkJCWlmIChuc1tpXS5yb3dzLmxlbmd0aCA9PSAxICYmIHR5cGVvZihvc1tpXSkgIT0gInVuZGVmaW5lZCIgJiYgb3NbaV0ucm93cy5sZW5ndGggPT0gMSkgewoJCQkJbltuc1tpXS5yb3dzWzBdXSA9IHsKCQkJCQl0ZXh0OiBuW25zW2ldLnJvd3NbMF1dLAoJCQkJCXJvdzogb3NbaV0ucm93c1swXQoJCQkJfTsKCQkJCW9bb3NbaV0ucm93c1swXV0gPSB7CgkJCQkJdGV4dDogb1tvc1tpXS5yb3dzWzBdXSwKCQkJCQlyb3c6IG5zW2ldLnJvd3NbMF0KCQkJCX07CgkJCX0KCQl9CgkJCgkJZm9yICh2YXIgaSA9IDA7IGkgPCBuLmxlbmd0aCAtIDE7IGkrKykgewoJCQlpZiAobltpXS50ZXh0ICE9IG51bGwgJiYgbltpICsgMV0udGV4dCA9PSBudWxsICYmIG5baV0ucm93ICsgMSA8IG8ubGVuZ3RoICYmIG9bbltpXS5yb3cgKyAxXS50ZXh0ID09IG51bGwgJiYKCQkJbltpICsgMV0gPT0gb1tuW2ldLnJvdyArIDFdKSB7CgkJCQluW2kgKyAxXSA9IHsKCQkJCQl0ZXh0OiBuW2kgKyAxXSwKCQkJCQlyb3c6IG5baV0ucm93ICsgMQoJCQkJfTsKCQkJCW9bbltpXS5yb3cgKyAxXSA9IHsKCQkJCQl0ZXh0OiBvW25baV0ucm93ICsgMV0sCgkJCQkJcm93OiBpICsgMQoJCQkJfTsKCQkJfQoJCX0KCQkKCQlmb3IgKHZhciBpID0gbi5sZW5ndGggLSAxOyBpID4gMDsgaS0tKSB7CgkJCWlmIChuW2ldLnRleHQgIT0gbnVsbCAmJiBuW2kgLSAxXS50ZXh0ID09IG51bGwgJiYgbltpXS5yb3cgPiAwICYmIG9bbltpXS5yb3cgLSAxXS50ZXh0ID09IG51bGwgJiYKCQkJbltpIC0gMV0gPT0gb1tuW2ldLnJvdyAtIDFdKSB7CgkJCQluW2kgLSAxXSA9IHsKCQkJCQl0ZXh0OiBuW2kgLSAxXSwKCQkJCQlyb3c6IG5baV0ucm93IC0gMQoJCQkJfTsKCQkJCW9bbltpXS5yb3cgLSAxXSA9IHsKCQkJCQl0ZXh0OiBvW25baV0ucm93IC0gMV0sCgkJCQkJcm93OiBpIC0gMQoJCQkJfTsKCQkJfQoJCX0KCQkKCQlyZXR1cm4gewoJCQlvOiBvLAoJCQluOiBuCgkJfTsKCX0KCQoJcmV0dXJuIGZ1bmN0aW9uKG8sIG4pewoJCW8gPSBvLnJlcGxhY2UoL1xzKyQvLCAnJyk7CgkJbiA9IG4ucmVwbGFjZSgvXHMrJC8sICcnKTsKCQl2YXIgb3V0ID0gZGlmZihvID09ICIiID8gW10gOiBvLnNwbGl0KC9ccysvKSwgbiA9PSAiIiA/IFtdIDogbi5zcGxpdCgvXHMrLykpOwoKCQl2YXIgc3RyID0gIiI7CgkJCgkJdmFyIG9TcGFjZSA9IG8ubWF0Y2goL1xzKy9nKTsKCQlpZiAob1NwYWNlID09IG51bGwpIHsKCQkJb1NwYWNlID0gWyIgIl07CgkJfQoJCWVsc2UgewoJCQlvU3BhY2UucHVzaCgiICIpOwoJCX0KCQl2YXIgblNwYWNlID0gbi5tYXRjaCgvXHMrL2cpOwoJCWlmIChuU3BhY2UgPT0gbnVsbCkgewoJCQluU3BhY2UgPSBbIiAiXTsKCQl9CgkJZWxzZSB7CgkJCW5TcGFjZS5wdXNoKCIgIik7CgkJfQoJCQoJCWlmIChvdXQubi5sZW5ndGggPT0gMCkgewoJCQlmb3IgKHZhciBpID0gMDsgaSA8IG91dC5vLmxlbmd0aDsgaSsrKSB7CgkJCQlzdHIgKz0gJzxkZWw+JyArIG91dC5vW2ldICsgb1NwYWNlW2ldICsgIjwvZGVsPiI7CgkJCX0KCQl9CgkJZWxzZSB7CgkJCWlmIChvdXQublswXS50ZXh0ID09IG51bGwpIHsKCQkJCWZvciAobiA9IDA7IG4gPCBvdXQuby5sZW5ndGggJiYgb3V0Lm9bbl0udGV4dCA9PSBudWxsOyBuKyspIHsKCQkJCQlzdHIgKz0gJzxkZWw+JyArIG91dC5vW25dICsgb1NwYWNlW25dICsgIjwvZGVsPiI7CgkJCQl9CgkJCX0KCQkJCgkJCWZvciAodmFyIGkgPSAwOyBpIDwgb3V0Lm4ubGVuZ3RoOyBpKyspIHsKCQkJCWlmIChvdXQubltpXS50ZXh0ID09IG51bGwpIHsKCQkJCQlzdHIgKz0gJzxpbnM+JyArIG91dC5uW2ldICsgblNwYWNlW2ldICsgIjwvaW5zPiI7CgkJCQl9CgkJCQllbHNlIHsKCQkJCQl2YXIgcHJlID0gIiI7CgkJCQkJCgkJCQkJZm9yIChuID0gb3V0Lm5baV0ucm93ICsgMTsgbiA8IG91dC5vLmxlbmd0aCAmJiBvdXQub1tuXS50ZXh0ID09IG51bGw7IG4rKykgewoJCQkJCQlwcmUgKz0gJzxkZWw+JyArIG91dC5vW25dICsgb1NwYWNlW25dICsgIjwvZGVsPiI7CgkJCQkJfQoJCQkJCXN0ciArPSAiICIgKyBvdXQubltpXS50ZXh0ICsgblNwYWNlW2ldICsgcHJlOwoJCQkJfQoJCQl9CgkJfQoJCQoJCXJldHVybiBzdHI7Cgl9Owp9KSgpOwoKfSkodGhpcyk7Cg==", "content_type": "application/javascript"}, "models/assessment.coffee": {"data": "", "content_type": ""}, "models/jqueryMobilePage.coffee": {"data": "", "content_type": ""}, "tests/testData/Assessment.TEST EGRA Prototype.Instructions": {"data": "eyJfaWQiOiJBc3Nlc3NtZW50LlRFU1QgRUdSQSBQcm90b3R5cGUuSW5zdHJ1Y3Rpb25zIiwiaGVhZGVyIjoiPGgxPkVHUkE8L2gxPiIsInBhZ2VJZCI6Ikluc3RydWN0aW9ucyIsInBhZ2VUeXBlIjoiSW5zdHJ1Y3Rpb25zUGFnZSIsInVybCI6Imh0dHBzOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vcHViP2tleT0wQWdvMzFKUVBaeFpyZEdKU1pUWTJNSFU0VmxKM1JuTnRkbk5EVmpSakxWRSZobD1lbiZvdXRwdXQ9aHRtbCIsImxvYWRpbmciOnRydWUsImFzc2Vzc21lbnQiOiJ7XCJuYW1lXCI6XCJURVNUIEVHUkEgUHJvdG90eXBlXCIsXCJpbmRleGVzRm9yUGFnZXNcIjpbXCJBc3Nlc3NtZW50LlRFU1QgRUdSQSBQcm90b3R5cGUuTG9naW5cIixcIkFzc2Vzc21lbnQuVEVTVCBFR1JBIFByb3RvdHlwZS5JbnN0cnVjdGlvbnNcIixcIkFzc2Vzc21lbnQuVEVTVCBFR1JBIFByb3RvdHlwZS5MZXR0ZXJzXCJdfSIsInBhZ2VOdW1iZXIiOjEsIm5leHRQYWdlIjoiTGV0dGVycyIsImNvbnRlbnQiOiJcIkluc3RydWN0aW9ucyBcdTAwZTAgbFx1MjAxOVx1MDBlOWxcdTAwZTh2ZSA6IENldCBleGVyY2ljZSBlc3QgdW4gZXhlcmNpY2Ugb3JhbC4gSmUgdmFpcyB0ZSBkaXJlIHVuIG1vdCBkZXV4IGZvaXMsIHB1aXMgamUgdmV1eCBxdWUgdHUgbWUgZGlzZXMgbGUgdG91dCBwcmVtaWVyIHNvbiBkdSBtb3QgcXVlIHR1IGVudGVuZHMsIGRcdTIwMTlhY2NvcmQgPyAgIDxici8+PGJyLz5QYXIgZXhlbXBsZTogTGUgbW90IFx1MjAxYyBzb3VwZVx1MjAxZCBjb21tZW5jZSBhdmVjIGxlIHNvbiBcdTIwMWNzc3Nzc1x1MjAxZCwgIG5cdTIwMTllc3QtY2UgcGFzPyBRdWVsIGVzdCBsZSB0b3V0IHByZW1pZXIgc29uIGRhbnMgbGUgbW90IFx1MjAxY3NvdXBlXHUyMDFkPyAgXHUyMDFjU291cGVcdTIwMWQ/ICBbQXR0ZW5kcmUgcXVlIGxcdTIwMTlcdTAwZTlsXHUwMGU4dmUgclx1MDBlOXBcdTAwZTh0ZSBsZSBzb24gXHUyMDFjc3Nzc3NcdTIwMWQuIFNcdTIwMTlpbCBuZSByXHUwMGU5cG9uZCBwYXMsIGRpdGVzLWx1aSwgXHUyMDFjTGUgdG91dCBwcmVtaWVyIHNvbiBkdSBtb3QgXHUyMDFjc291cGVcdTIwMWQgY1x1MjAxOWVzdCBcdTIwMWNzc3Nzc1x1MjAxZF0uPGJyLz48YnIvPkVzc2F5b25zIGVuY29yZSBxdWVscXVlcyBleGVtcGxlcyA6ICA8YnIvPlF1ZWwgZXN0IGxlIHRvdXQgcHJlbWllciBzb24gZGFucyBsZSBtb3QgXHUwMGFiIGpvdXIgXHUwMGJiID8gIFx1MDBhYiBqb3VyIFx1MDBiYiA/ICA8YnIvPjxici8+KFNpIGxcdTIwMTlcdTAwZTlsXHUwMGU4dmUgclx1MDBlOXBvbmQgY29ycmVjdGVtZW50LCBkaXRlcy1sdWkgXHUwMGFiVHJcdTAwZThzIGJpZW4gISBMZSBwcmVtaWVyIHNvbiBkYW5zIGxlIG1vdCBcdTAwYWIgam91ciBcdTAwYmIsIGNcdTIwMTllc3QgXHUwMGFiIGpqamogXHUwMGJiICk8YnIvPjxici8+KFNpIGxcdTIwMTlcdTAwZTlsXHUwMGU4dmUgbmUgclx1MDBlOXBvbmQgcGFzLCBkaXRlcy1sdWkgXHUwMGFiIExlIHByZW1pZXIgc29uIGRhbnMgbGUgbW90IFx1MDBhYiBqb3VyIFx1MDBiYiwgY1x1MjAxOWVzdCBcdTAwYWIgampqaiBcdTAwYmIuKTxici8+PGJyLz5RdWVsIGVzdCBsZSB0b3V0IHByZW1pZXIgc29uIGRhbnMgbGUgbW90IFx1MDBhYiBjaGljIFx1MDBiYj8gXHUwMGFiIGNoaWMgXHUwMGJiPzxici8+PGJyLz4oU2kgbFx1MjAxOVx1MDBlOWxcdTAwZTh2ZSByXHUwMGU5cG9uZCBjb3JyZWN0ZW1lbnQsIGRpdGVzLWx1aSBcdTAwYWJUclx1MDBlOHMgYmllbiAhIExlIHByZW1pZXIgc29uIGRhbnMgbGUgbW90IFx1MDBhYiBjaGljIFx1MDBiYiwgY1x1MjAxOWVzdCBcdTAwYWIgY2hcdTAwYmIpPGJyLz48YnIvPihTaSBsXHUyMDE5XHUwMGU5bFx1MDBlOHZlIG5lIHJcdTAwZTlwb25kIHBhcywgZGl0ZXMtbHVpIFx1MDBhYiBMZSBwcmVtaWVyIHNvbiBkYW5zIGxlIG1vdCBcdTAwYWIgY2hpYyBcdTAwYmIsIGNcdTIwMTllc3QgXHUwMGFiIGNoXHUwMGJiLik8YnIvPjxici8+UXVlbCBlc3QgbGUgdG91dCBwcmVtaWVyIHNvbiBkYW5zIGxlIG1vdCBcdTAwYWIgcG91bGUgXHUwMGJiPyAgXHUwMGFiIHBvdWxlIFx1MDBiYj8gIDxici8+PGJyLz4oU2kgbFx1MjAxOVx1MDBlOWxcdTAwZTh2ZSByXHUwMGU5cG9uZCBjb3JyZWN0ZW1lbnQsIGRpdGVzLWx1aSBcdTAwYWJUclx1MDBlOHMgYmllbiAhIExlIHByZW1pZXIgc29uIGRhbnMgbGUgbW90IFx1MDBhYiBwb3VsZSBcdTAwYmIsIGNcdTIwMTllc3QgXHUwMGFiIHBcdTIwMTlcdTAwYmIgKTxici8+PGJyLz4oU2kgbFx1MjAxOVx1MDBlOWxcdTAwZTh2ZSBuZSByXHUwMGU5cG9uZCBwYXMsIGRpdGVzLWx1aSBcdTAwYWIgTGUgcHJlbWllciBzb24gZGFucyBsZSBtb3QgXHUwMGFiIHBvdWxlIFx1MDBiYiwgY1x1MjAxOWVzdCBcdTAwYWIgcFx1MjAxOSBcdTAwYmIuKTxici8+PGJyLz5UdSBjb21wcmVuZHMgY2UgcXVlIGplIHRlIGRlbWFuZGUgZGUgZmFpcmUgPyBNYWludGVuYW50IGplIHZhaXMgdGUgbGlyZSBkXHUyMDE5YXV0cmVzIG1vdHMuIEplIHZhaXMgbGlyZSBjaGFxdWUgbW90IGRldXggZm9pcy4gRWNvdXRlIGJpZW4sIGV0IGRpcy1tb2kgbGUgdG91dCBwcmVtaWVyIHNvbiBxdWUgdHUgZW50ZW5kcywgZFx1MjAxOWFjY29yZCA/PGJyLz48YnIvPjxici8+PGJyLz5OZSBwYXMgY29ycmlnZXIgbFx1MjAxOVx1MDBlOWxcdTAwZTh2ZSBwZW5kYW50IGxlIHRlc3QuIEVuIGNhcyBkZSBub24tclx1MDBlOXBvbnNlIG91IGRcdTIwMTloXHUwMGU5c2l0YXRpb24gZGUgc2EgcGFydCwgYXByXHUwMGU4cyAzIHNlY29uZGVzIG1hcnF1ZXIgbGEgY2FzZSBcdTAwYWIgUGFzIGRlIHJcdTAwZTlwb25zZSBcdTAwYmIgZXQgcGFzc2V6IGF1IHByb2NoYWluIGl0ZW0uPGJyLz48YnIvPlJcdTAwZThnbGUgZFx1MjAxOWF1dG8tc3RvcCA6IFNpIGxcdTIwMTlcdTAwZTlsXHUwMGU4dmUgbmUgclx1MDBlOXVzc2l0IHBhcyBcdTAwZTAgZG9ubmVyIHVuZSBzZXVsZSByXHUwMGU5cG9uc2UgY29ycmVjdGUgcGFybWkgbGVzIGNpbnEgcHJlbWllcnMgbW90cywgZGVtYW5kZXotbHVpIGdlbnRpbWVudCBkZSBzJ2Fyclx1MDBlYXRlciwgZXQgY29jaGVyIGxhIGNhc2UgXHUwMGFiIGF1dG8tc3RvcCBcdTAwYmIuIFBhc3NleiBhdSBwcm9jaGFpbiBleGVyY2ljZS5cIiIsImZvb3Rlcl90ZXh0IjoiPGEgaHJlZj0nI0xldHRlcnMnPkxldHRlcnM8L2E+In0K", "content_type": ""}, "js-libraries/jquery-mobile/jquery.mobile-1.0b3.min.js": {"data": "", "content_type": "application/javascript"}, "js-libraries/jquery-mobile/jquery.mobile-1.0b3.js": {"data": "", "content_type": "application/javascript"}, "images/icons-18-black.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAAjAAAAAUBAMAAABhfRpVAAAAA3NCSVQICAjb4U/gAAAAMFBMVEX///8AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAv3aB7AAAAEHRSTlMAESIzRFVmd4iZqrvM3e7/dpUBFQAAAAlwSFlzAAAK6wAACusBgosNWgAAABZ0RVh0Q3JlYXRpb24gVGltZQAxMC8xNi8xMNNnoNMAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBDUzVxteM2AAACjElEQVRYhe1XMW/TQBQ++1I3aYYCYmCIqJlhKIxBMpYaMXQJA2ulTIgFhZ2BTIwNLExI7T8AxFBQEW4lxIJE+AcVVGKqegUFlDZ2HheJRvneM8StEEjgb/J9eXfv+bvvnS9K5ciRI8d/huI9QV2e50zpPo71s2Plclq/+LH8ZOL8U0pdZNQNGZVCZcE5HFbn+tUTLKS5zSdVDnAcfMuQyW1xZqbHmebm6HF2b9KCzrt5vYPFutTgUR75GYqTi++CHbTpJGYTInQ0oGs4aZnM+/HxFJl+iCE0u0csVUmoVxc1R93R42RhtNkOBszNTZFEMqWPOHbe2K1usKCZBCTXhohQmCB+Rdg55cFLYsL0o6+4boowVxKfMW/P83ap3v7x4Nbq3RqP5wgGhpvZ45YRhJUK39mW33A6G0CdVHe7QJxuJ8t0HaitBm+U5lPZSoXdtMrHUIyIBmtATfeKTE7ljsLtBlELfhsy6CJtuGFscfs4XhGG8WgLt96aqhKjVo8uGUxep88ewVbrAxU0cJ3Ir/DD95Nqh8AIx+iO8OLZXpHtnWp/OKx+PeqvY97fJYyUQUjlmh1WmRSmYA/IM1hhpByezL4SnkOylSpErJ62MMXRzpjjtZI3bBxuGb5BAWEnpbSSG9t5LQh6HKYUuSL2jsE2BybTlNyiLxj0Bw5f627FHc+PY1vbKs8lDB89mDI+MPXXsshijGPpGCsMllim+AL1MehIwqR8rgtpn+tQzpy0tFpiFkr5XFf4C9lXlHcvYp6WwpT3F/HaMjc8NFjQmDCF8KdVHyLlgvdQRt2cuE4WyAuec+dFyIIWW2Lec34rFJj21VUgdM1iAYOWVjPU+HeQ8pcgR44cOf4pfAcm/R8omO3EagAAAABJRU5ErkJggg==", "content_type": "image/png"}, "models/timer.coffee": {"data": "dGhyb3cgIk5vIGFzc2Vzc21lbnQgbG9hZGVkIiBpZiAkLmFzc2Vzc21lbnQgaXMgdW5kZWZpbmVkCgojIExpdmUgaGFuZGxlciBmb3IgYnV0dG9ucyBpbiB0aW1lciBjb250cm9sCiQoImRpdi50aW1lciBidXR0b24iKS5saXZlICdtb3VzZWRvd24nLCAoZXZlbnREYXRhKSAtPgogIGJ1dHRvblByZXNzZWQgPSBldmVudERhdGEudGFyZ2V0LmlubmVySFRNTAojIENhbGwgdGhlIHRpbWVyIG1ldGhvZCB0aGF0IGhhcyB0aGUgc2FtZSBuYW1lIGFzIHRoZSBidXR0b24ganVzdCBwcmVzc2VkLCBpLmUuICJzdGFydCIgCiAgJC5hc3Nlc3NtZW50LmN1cnJlbnRQYWdlLnRpbWVyW2J1dHRvblByZXNzZWRdKCkKCmNsYXNzIFRpbWVyCiAgY29uc3RydWN0b3I6IChvcHRpb25zKS0+CiAgICBAcGFnZSA9IG9wdGlvbnMucGFnZQogICAgQGVsZW1lbnRMb2NhdGlvbiA9IG51bGwKCiAgc3RhcnQ6IC0+CiAgICBAc2hvd0dyaWRJdGVtcygpCiAgICByZXR1cm4gaWYgQHJ1bm5pbmcKICAgIEBzdGFydGVkID0gdHJ1ZQogICAgQHJ1bm5pbmcgPSB0cnVlCiAgICBAdGlja192YWx1ZSA9IDEKICAgIGRlY3JlbWVudCA9ID0+CiAgICAgIEBzZWNvbmRzIC09IEB0aWNrX3ZhbHVlCiAgICAgIGlmIEBzZWNvbmRzID09IDAKICAgICAgICBAc3RvcCgpCiAgICAgICAgJC5hc3Nlc3NtZW50LmZsYXNoKCkKICAgICAgQHJlbmRlclNlY29uZHMoKQogICAgQGludGVydmFsSWQgPSBzZXRJbnRlcnZhbChkZWNyZW1lbnQsQHRpY2tfdmFsdWUqMTAwMCkKCiAgc3RvcDogLT4KICAgIEBydW5uaW5nID0gZmFsc2UKICAgIGNsZWFySW50ZXJ2YWwoQGludGVydmFsSWQpCgogIGhhc1N0YXJ0ZWRBbmRTdG9wcGVkOiAtPgogICAgcmV0dXJuIChAc2Vjb25kcyAhPSA2MCkgYW5kIChAcnVubmluZyA9PSBmYWxzZSkKCiAgcmVzZXQ6IC0+CiAgICBAc2Vjb25kcyA9IDYwCiAgICBAcmVuZGVyU2Vjb25kcygpCgogIHJlbmRlclNlY29uZHM6IC0+CiAgICAkKCJkaXYjI3tAcGFnZS5wYWdlSWR9IC50aW1lci1zZWNvbmRzIikuaHRtbChAc2Vjb25kcykKCiAgcmVuZGVyOiAtPgogICAgQGlkID0gInRpbWVyIgogICAgQHNlY29uZHMgPSA2MAogICAgTXVzdGFjaGUudG9faHRtbChAX3RlbXBsYXRlKCksdGhpcykKCiAgaGlkZUdyaWRJdGVtczogLT4KICAgICQoIiMje0BwYWdlLnBhZ2VJZH0gLmdyaWQiKS5yZW1vdmVDbGFzcygic2hvdyIpCgogIHNob3dHcmlkSXRlbXM6IC0+CiAgICAkKCIjI3tAcGFnZS5wYWdlSWR9IC5ncmlkIikuYWRkQ2xhc3MoInNob3ciKQoKICBfdGVtcGxhdGU6IC0+ICIKICA8c3BhbiBjbGFzcz0ndGltZXItc2Vjb25kcyc+PC9zcGFuPgoiCg==", "content_type": ""}, "js-libraries/jquery-mobile/jquery.mobile-1.0b2.min.js": {"data": "", "content_type": "application/javascript"}, "css.coffee": {"data": "IyMjClRoaXMgYXBwcmFvY2ggYWxsb3dzIGNvbG9ycyB0byBiZSBzdG9yZWQgYXMgY29uc3RhbnRzCiMjIwoKYmx1ZSA9ICIjNUU4N0IwIgp5ZWxsb3cgPSAiI0Y3Qzk0MiIKZmlyc3RfY2xpY2tfY29sb3IgPSB5ZWxsb3cKc2Vjb25kX2NsaWNrX2NvbG9yID0gYmx1ZQpyZWQgPSAicmVkIgoKJCgiaGVhZCIpLmFwcGVuZCAiCiAgPHN0eWxlPgoKICAgIHNwYW4udGltZXItc2Vjb25kc3sKICAgICAgZmxvYXQ6cmlnaHQ7CiAgICAgIG1hcmdpbi1yaWdodDoxMHB4OwogICAgICBtYXJnaW4tdG9wOjVweDsKICAgICAgZm9udC1zaXplOiBsYXJnZTsKICAgIH0KCiAgICAuY29udHJvbHMuZmxhc2h7CiAgICAgIGNvbG9yOiBibGFjazsKICAgICAgYmFja2dyb3VuZC1jb2xvcjogI3tyZWR9OwogICAgfQoKICAgIC5mbGFzaCB7CiAgICAgIGNvbG9yOiAje3JlZH07CiAgICB9CgogICAgI0luaXRpYWxTb3VuZCAudWktY29udHJvbGdyb3VwLWxhYmVsewogICAgICBmb250LXNpemU6IHgtbGFyZ2U7CiAgICB9CgogICAgI1Bob25lbWVzIGxlZ2VuZHsKICAgICAgZm9udC1zaXplOiB4LWxhcmdlOwogICAgfQoKICAgIC5ncmlkewogICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7CiAgICAgIGZsb2F0OiBsZWZ0OwogICAgICB3aWR0aDogNTBweDsKICAgICAgaGVpZ2h0OiA1MHB4OwogICAgICBtYXJnaW46IDEwcHg7CiAgICAgIGJvcmRlcjogM3B4IG91dHNldCBncmF5OwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7CiAgICAgIGNvbG9yOiBsaWdodGdyYXk7CiAgICAgIC13ZWJraXQtdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTsKICAgICAgLW1vei11c2VyLXNlbGVjdDogbm9uZTsKICAgICAgLW8tdXNlci1zZWxlY3Q6IG5vbmU7CiAgICAgIHVzZXItc2VsZWN0OiBub25lOwogICAgfQoKCiAgICAuZ3JpZC5zaG93ewogICAgICBjb2xvcjogYmxhY2s7CiAgICB9CgogICAgLmdyaWQgc3BhbnsKICAgICAgZm9udC1zaXplOiA1MHB4OwogICAgICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlOwogICAgfQoKICAgIC5ncmlkLnNlbGVjdGVkewogICAgICB0ZXh0LWRlY29yYXRpb246IGxpbmUtdGhyb3VnaDsKICAgICAgY29sb3I6IHdoaXRlOwogICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAje2JsdWV9OwogICAgfQogICAgLmdyaWQubGFzdC1hdHRlbXB0ZWR7CiAgICAgIGNvbG9yOiByZWQ7CiAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOwogICAgICBib3JkZXItdG9wLWNvbG9yOiByZWQ7CiAgICAgIGJvcmRlci1ib3R0b20tY29sb3I6IHJlZDsKICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDsKICAgIH0KCiAgICBAbWVkaWEgc2NyZWVuIGFuZCAob3JpZW50YXRpb246cG9ydHJhaXQpeyAKICAgICAgLmdyaWQtd2lkdGh7CiAgICAgICAgd2lkdGg6IDQ0MHB4OwogICAgICB9CiAgICB9CiAgICBAbWVkaWEgc2NyZWVuIGFuZCAob3JpZW50YXRpb246bGFuZHNjYXBlKSB7CiAgICAgIC5ncmlkLXdpZHRoewogICAgICAgIHdpZHRoOiA4MjBweDsKICAgICAgfQogICAgICAudG9nZ2xlLXJvdy1wb3J0cmFpdHsKICAgICAgICBkaXNwbGF5OiBub25lOwogICAgICB9CiAgICB9CgogICAgLnRvZ2dsZS1yb3d7CiAgICAgIGJhY2tncm91bmQtY29sb3I6ICN7Ymx1ZX07CiAgICAgIHdpZHRoOiAzMHB4OwogICAgICBoZWlnaHQ6IDMwcHg7CiAgICAgIG1hcmdpbi10b3A6IDIycHg7CiAgICB9CiAgICAKCiAgPC9zdHlsZT4KICAiCg==", "content_type": ""}, "tests/testData/Assessment.TEST EGRA Prototype.StudentInformation": {"data": "ewogICJwYWdlVHlwZSI6ICJTdHVkZW50SW5mb3JtYXRpb25QYWdlIiwKICAicGFnZUlkIjogIlN0dWRlbnRJbmZvcm1hdGlvbiIsCiAgInJhZGlvQnV0dG9ucyI6IFsKICAgIHsKICAgICAgImxhYmVsIjogIkdyYWRlIiwKICAgICAgIm5hbWUiOiAiZ3JhZGUiLAogICAgICAidHlwZSI6ICJob3Jpem9udGFsIiwKICAgICAgIm9wdGlvbnMiOiBbCiAgICAgICAgIjFzdCIsCiAgICAgICAgIjJuZCIsCiAgICAgICAgIjNyZCIKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImxhYmVsIjogIkNsYXNzIiwKICAgICAgIm5hbWUiOiAiY2xhc3MiLAogICAgICAidHlwZSI6ICJob3Jpem9udGFsIiwKICAgICAgIm9wdGlvbnMiOiBbCiAgICAgICAgIkEiLAogICAgICAgICJCIiwKICAgICAgICAiQyIKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImxhYmVsIjogIkdlbmRlciIsCiAgICAgICJuYW1lIjogImdlbmRlciIsCiAgICAgICJ0eXBlIjogImhvcml6b250YWwiLAogICAgICAib3B0aW9ucyI6IFsKICAgICAgICAiRmVtYWxlIiwKICAgICAgICAiTWFsZSIKICAgICAgXQogICAgfSwKICAgIHsKICAgICAgImxhYmVsIjogIlllYXIgb2YgYmlydGgiLAogICAgICAibmFtZSI6ICJ5ZWFyT2ZCaXJ0aCIsCiAgICAgICJ0eXBlIjogImhvcml6b250YWwiLAogICAgICAib3B0aW9ucyI6IFsKICAgICAgICAiVW5rbm93biIsCiAgICAgICAgIjE5OTciLAogICAgICAgICIxOTk4IiwKICAgICAgICAiMTk5OSIsCiAgICAgICAgIjIwMDAiLAogICAgICAgICIyMDAxIiwKICAgICAgICAiMjAwMiIsCiAgICAgICAgIjIwMDMiLAogICAgICAgICIyMDA0IiwKICAgICAgICAiMjAwNSIsCiAgICAgICAgIjIwMDYiLAogICAgICAgICIyMDA3IgogICAgICBdCiAgICB9LAogICAgewogICAgICAibGFiZWwiOiAiTW9udGggb2YgQmlydGgiLAogICAgICAibmFtZSI6ICJtb250aE9mQmlydGgiLAogICAgICAidHlwZSI6ICJob3Jpem9udGFsIiwKICAgICAgIm9wdGlvbnMiOiBbCiAgICAgICAgIlVua25vd24iLAogICAgICAgICJKYW51YXJ5IiwKICAgICAgICAiRmVicnVhcnkiLAogICAgICAgICJNYXJjaCIsCiAgICAgICAgIkFwcmlsIiwKICAgICAgICAiTWF5IiwKICAgICAgICAiSnVuZSIsCiAgICAgICAgIkp1bHkiLAogICAgICAgICJBdWd1c3QiLAogICAgICAgICJTZXB0ZW1iZXIiLAogICAgICAgICJPY3RvYmVyIiwKICAgICAgICAiTm92ZW1iZXIiLAogICAgICAgICJEZWNlbWJlciIKICAgICAgXQogICAgfQogIF0KfQo=", "content_type": ""}, "google-spreadsheet-javascript/tests/testsCallbackCellsData.json": {"data": "", "content_type": "application/json"}, "js-libraries/jquery-mobile/images/icons-18-black.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAAwgAAAASCAMAAADIfglFAAAAA3NCSVQICAjb4U/gAAAA51BMVEX////9/f38/Pz6+vr5+fn4+Pj29vb09PTz8/Py8vLx8fHx8PDw8PDv7+/u7u7r6+vq6urp6eno6Ojn5+fm5ubl5eXk5OTj4+Pi4uLj4eHh4eHg4ODf39/e3t7d3d3c3NzY2NjT09PT0tLR0dHQ0NDMzMzBwcG7u7u1tbW0tLS1tLS0s7Otra2qqqqrqaqop6elpKSioaGZmZmXlpaXkpeMjIyIiIh6d3h5d3d3d3dvb29ra2tmZmZgXV5cWVpVVVVERERDP0A/Pz85OTkzMzM0MTIwMDAwLC0iIiIhHR4REREAAAD////pxJw6AAAATXRSTlP/////////////////////////////////////////////////////////////////////////////////////////////////////ANNqEYAAAAAJcEhZcwAACusAAArrAYKLDVoAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBDUzVxteM2AAAAFXRFWHRDcmVhdGlvbiBUaW1lADMvMjUvMTELhZpSAAAGHklEQVRoge1ai1LbRhRNAiHgwAYoGGq3SiBV1ZdIoqRKlaqVmixB2tX/f0/vXclGNtqzW3BapuMzGUaxzuzj7j33sfaDZo017gXEAm7PmRN9Jpz/58E/Xe4aa3wRBEu4LafP85mv++9aCH4QUQTN2rG+/EL+rxDfLmHAlj6cRZr1QG5w5kKQSkV33YynJwSJ11BerJUhRn4eiEjrrAkdYwiZuydKSscwToI3PKTbpO7JhM84d8XeN0vYux1niTXIGOJcC0Hru3teqFL+KzMoCFnh9wbCi7UyBEqn1pehkjEJIccWinKpdOGYJimkVtD3Eq3LIoZbj7IkyLImyRyhq3SfaKKVy8pkmtg5jihcgkqkqnK7pHqu+Vv953d3EMIiZXi2m5yVCiGkQ06bUGuVAVaq8HuDoNC6cpyzKCtHrOrO2N03NaUGQlB6BnDaeWUYFZolku0wwNKFISiJlpzpkjIUrRmbMcKLYQilHYPwME4KhS2toFpEbvZl39bedIaf67r+fTodEsJ0CUNCmJg3L1+/fmkeJkOTTRaHYU4rBGqf6YhSj04bIuQjzPmwYWDMPZRAg2DLsg4odkIlJFXcEjGNkNIZgXFmOgCVT0abqsitFJiF3E659EQrURVpqgJHkZRZWJZNhiM+hSXtSqqZFjFaTbuk1OUWQjrkzWoq4gxIanfulh/r+vJsOt1FnA4DnMa8eHtV11dvzePQZMvjNJ0QMkUg2xOsmxHzVh1YJaYT5KMuoOUEKwFW0+zjypWgShOA0WqUEVMgsZeHJvsDd8gy2laWcPDMbIpiH4+DCsfgnC1TQB0Y1SUhDrBBFFLz3oSgf4+rmXhRTAoor0S6RMsx0zkIwifRSfPXGid2J4SfzieT95QQLsaTya6F08cAZ4c/P/9Mg9Sfz/l5x8LpY2cmhHnqt+8lr2ZAgTo2Ec9lWWdOIB+H0zSte7N6pd0ZQpZlzEUWkF3EJbuE2b9zJ5MXbD4RVZwu8jwIQfKhaUST4ChBy6ZmmZYOHNinNEq7A4UNCZmGrwFwyAlR1ciY6QAZUZr9kAltBHby9/XHsx/Ig/84GXZyHyFs8+evaoNX/PzEwunjSSeEvM0I/NfqfvlcK8hD2fcc0b7xCPiFs3jiwKqytEJlpxFLRfWKAgfJeaWAKcMIQXbhwiaEpDLeEim0bgULpz4ot4Bo4tUjpG4dRDOx4NbcFdmitEs/eWqNArnJ3YXdzk9PT1kDV39RYfTilPB0kLOIAc4+f/6mFcIbft63cPrY74TAZQ85RIbKnswnI4RtbECO13Q6gBSRuZRQtB15UsH2tF0PHKkLZ9BfKNzrkiNBHNkMRBGAFZlrdAldOvueGagOczaoLjgLo4b9N81hJG88hNBVqfYowYMoXRUSdFmjk5PjD63/XhydEEaDnEUMcLb487NLHufyjJ+3LJw+tnq3RvDaxBNcautSudy8dDRWDFfxJKr2djVWFfLhwLmYVgnY6+bZEGQfbkQyqVxNS5V7fFsTFdRsgG15NcttuEcubHJGYhIdukzwEoKMUiiEWalmzVCj8Xh8+Cv774fjMWNICOMlDHA2+fOjd6SEy3dH/Lxp4fSxuWIhcIdWmj4B2l+5G+G2oYYu3g0R4juPsHTowIjFUbFwhWX+KdCQtJkFX/lSyedjZemoHL1Ko0TnESVMwCivW0M0UARvy7qRSqbBvYe5LOLCeqjGyae/XNafXlid3EcIzQG/OH5+cfHcCOpgaLKDxWGYMxdCUVV3FgJpoBSsBxxBSvvdVA+5F8sJh1AYges7dSHzyNwbQWWW1GJJPJtIpfsrFDKQwlcFUZoEadokKVp3ZF4iG4poDjSbKJxfdcdpTHtz3rI2XNJafGPnmHH4/acfvzJPx0O3PcdLGOA0G+YNVVdH5mFjaLKNxWGYs+LfGrUR01pJtxB+v+VYwS8+Vgevb5XQjdEM6PZ5zvk3ftPwH8HWT3dO/vUBcHIvITTbfcb28Gw3Oesf3a1xL7BztIQhIXhwyKW3rwnbFv++yVkLYY17gc3DRR8/vCWH8fhZ+/7ZY/t8y5y1ENa4H3g0WsCj23IYDx5ujUZbD6FzL3H+Br9pBrXlkaHIAAAAAElFTkSuQmCC", "content_type": "image/png"}, "tests/qunit.css": {"data": "LyoqIEZvbnQgRmFtaWx5IGFuZCBTaXplcyAqLwoKI3F1bml0LXRlc3RzLCAjcXVuaXQtaGVhZGVyLCAjcXVuaXQtYmFubmVyLCAjcXVuaXQtdGVzdHJ1bm5lci10b29sYmFyLCAjcXVuaXQtdXNlckFnZW50LCAjcXVuaXQtdGVzdHJlc3VsdCB7Cglmb250LWZhbWlseTogIkhlbHZldGljYSBOZXVlIExpZ2h0IiwgIkhlbHZldGljYU5ldWUtTGlnaHQiLCAiSGVsdmV0aWNhIE5ldWUiLCBDYWxpYnJpLCBIZWx2ZXRpY2EsIEFyaWFsOwp9CgojcXVuaXQtdGVzdHJ1bm5lci10b29sYmFyLCAjcXVuaXQtdXNlckFnZW50LCAjcXVuaXQtdGVzdHJlc3VsdCwgI3F1bml0LXRlc3RzIGxpIHsgZm9udC1zaXplOiBzbWFsbDsgfQojcXVuaXQtdGVzdHMgeyBmb250LXNpemU6IHNtYWxsZXI7IH0KCgovKiogUmVzZXRzICovCgojcXVuaXQtdGVzdHMsICNxdW5pdC10ZXN0cyBvbCwgI3F1bml0LWhlYWRlciwgI3F1bml0LWJhbm5lciwgI3F1bml0LXVzZXJBZ2VudCwgI3F1bml0LXRlc3RyZXN1bHQgewoJbWFyZ2luOiAwOwoJcGFkZGluZzogMDsKfQoKCi8qKiBIZWFkZXIgKi8KCiNxdW5pdC1oZWFkZXIgewoJcGFkZGluZzogMC41ZW0gMCAwLjVlbSAxZW07CgoJY29sb3I6ICM4Njk5YTQ7CgliYWNrZ3JvdW5kLWNvbG9yOiAjMGQzMzQ5OwoKCWZvbnQtc2l6ZTogMS41ZW07CglsaW5lLWhlaWdodDogMWVtOwoJZm9udC13ZWlnaHQ6IG5vcm1hbDsKCQoJYm9yZGVyLXJhZGl1czogMTVweCAxNXB4IDAgMDsKCS1tb3otYm9yZGVyLXJhZGl1czogMTVweCAxNXB4IDAgMDsKCS13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDE1cHg7Cgktd2Via2l0LWJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDE1cHg7Cn0KCiNxdW5pdC1oZWFkZXIgYSB7Cgl0ZXh0LWRlY29yYXRpb246IG5vbmU7Cgljb2xvcjogI2MyY2NkMTsKfQoKI3F1bml0LWhlYWRlciBhOmhvdmVyLAojcXVuaXQtaGVhZGVyIGE6Zm9jdXMgewoJY29sb3I6ICNmZmY7Cn0KCiNxdW5pdC1iYW5uZXIgewoJaGVpZ2h0OiA1cHg7Cn0KCiNxdW5pdC10ZXN0cnVubmVyLXRvb2xiYXIgewoJcGFkZGluZzogMGVtIDAgMC41ZW0gMmVtOwp9CgojcXVuaXQtdXNlckFnZW50IHsKCXBhZGRpbmc6IDAuNWVtIDAgMC41ZW0gMi41ZW07CgliYWNrZ3JvdW5kLWNvbG9yOiAjMmI4MWFmOwoJY29sb3I6ICNmZmY7Cgl0ZXh0LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjUpIDJweCAycHggMXB4Owp9CgoKLyoqIFRlc3RzOiBQYXNzL0ZhaWwgKi8KCiNxdW5pdC10ZXN0cyB7CglsaXN0LXN0eWxlLXBvc2l0aW9uOiBpbnNpZGU7Cn0KCiNxdW5pdC10ZXN0cyBsaSB7CglwYWRkaW5nOiAwLjRlbSAwLjVlbSAwLjRlbSAyLjVlbTsKCWJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmOwoJbGlzdC1zdHlsZS1wb3NpdGlvbjogaW5zaWRlOwp9CgojcXVuaXQtdGVzdHMgbGkgc3Ryb25nIHsKCWN1cnNvcjogcG9pbnRlcjsKfQoKI3F1bml0LXRlc3RzIG9sIHsKCW1hcmdpbi10b3A6IDAuNWVtOwoJcGFkZGluZzogMC41ZW07CgkKCWJhY2tncm91bmQtY29sb3I6ICNmZmY7CgkKCWJvcmRlci1yYWRpdXM6IDE1cHg7CgktbW96LWJvcmRlci1yYWRpdXM6IDE1cHg7Cgktd2Via2l0LWJvcmRlci1yYWRpdXM6IDE1cHg7CgkKCWJveC1zaGFkb3c6IGluc2V0IDBweCAycHggMTNweCAjOTk5OwoJLW1vei1ib3gtc2hhZG93OiBpbnNldCAwcHggMnB4IDEzcHggIzk5OTsKCS13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMHB4IDJweCAxM3B4ICM5OTk7Cn0KCiNxdW5pdC10ZXN0cyB0YWJsZSB7Cglib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwoJbWFyZ2luLXRvcDogLjJlbTsKfQoKI3F1bml0LXRlc3RzIHRoIHsKCXRleHQtYWxpZ246IHJpZ2h0OwoJdmVydGljYWwtYWxpZ246IHRvcDsKCXBhZGRpbmc6IDAgLjVlbSAwIDA7Cn0KCiNxdW5pdC10ZXN0cyB0ZCB7Cgl2ZXJ0aWNhbC1hbGlnbjogdG9wOwp9CgojcXVuaXQtdGVzdHMgcHJlIHsKCW1hcmdpbjogMDsKCXdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKCXdvcmQtd3JhcDogYnJlYWstd29yZDsKfQoKI3F1bml0LXRlc3RzIGRlbCB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZTBmMmJlOwoJY29sb3I6ICMzNzRlMGM7Cgl0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0KCiNxdW5pdC10ZXN0cyBpbnMgewoJYmFja2dyb3VuZC1jb2xvcjogI2ZmY2FjYTsKCWNvbG9yOiAjNTAwOwoJdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9CgovKioqIFRlc3QgQ291bnRzICovCgojcXVuaXQtdGVzdHMgYi5jb3VudHMgICAgICAgICAgICAgICAgICAgICAgIHsgY29sb3I6IGJsYWNrOyB9CiNxdW5pdC10ZXN0cyBiLnBhc3NlZCAgICAgICAgICAgICAgICAgICAgICAgeyBjb2xvcjogIzVFNzQwQjsgfQojcXVuaXQtdGVzdHMgYi5mYWlsZWQgICAgICAgICAgICAgICAgICAgICAgIHsgY29sb3I6ICM3MTA5MDk7IH0KCiNxdW5pdC10ZXN0cyBsaSBsaSB7CgltYXJnaW46IDAuNWVtOwoJcGFkZGluZzogMC40ZW0gMC41ZW0gMC40ZW0gMC41ZW07CgliYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwoJYm9yZGVyLWJvdHRvbTogbm9uZTsKCWxpc3Qtc3R5bGUtcG9zaXRpb246IGluc2lkZTsKfQoKLyoqKiBQYXNzaW5nIFN0eWxlcyAqLwoKI3F1bml0LXRlc3RzIGxpIGxpLnBhc3MgewoJY29sb3I6ICM1RTc0MEI7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwoJYm9yZGVyLWxlZnQ6IDI2cHggc29saWQgI0M2RTc0NjsKfQoKI3F1bml0LXRlc3RzIC5wYXNzICAgICAgICAgICAgICAgICAgICAgICAgICB7IGNvbG9yOiAjNTI4Q0UwOyBiYWNrZ3JvdW5kLWNvbG9yOiAjRDJFMEU2OyB9CiNxdW5pdC10ZXN0cyAucGFzcyAudGVzdC1uYW1lICAgICAgICAgICAgICAgeyBjb2xvcjogIzM2NjA5NzsgfQogCiNxdW5pdC10ZXN0cyAucGFzcyAudGVzdC1hY3R1YWwsCiNxdW5pdC10ZXN0cyAucGFzcyAudGVzdC1leHBlY3RlZCAgICAgICAgICAgeyBjb2xvcjogIzk5OTk5OTsgfQoKI3F1bml0LWJhbm5lci5xdW5pdC1wYXNzICAgICAgICAgICAgICAgICAgICB7IGJhY2tncm91bmQtY29sb3I6ICNDNkU3NDY7IH0KCi8qKiogRmFpbGluZyBTdHlsZXMgKi8KCiNxdW5pdC10ZXN0cyBsaSBsaS5mYWlsIHsKCWNvbG9yOiAjNzEwOTA5OwoJYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKCWJvcmRlci1sZWZ0OiAyNnB4IHNvbGlkICNFRTU3NTc7Cn0KCiNxdW5pdC10ZXN0cyAuZmFpbCAgICAgICAgICAgICAgICAgICAgICAgICAgeyBjb2xvcjogIzAwMDAwMDsgYmFja2dyb3VuZC1jb2xvcjogI0VFNTc1NzsgfQojcXVuaXQtdGVzdHMgLmZhaWwgLnRlc3QtbmFtZSwKI3F1bml0LXRlc3RzIC5mYWlsIC5tb2R1bGUtbmFtZSAgICAgICAgICAgICB7IGNvbG9yOiAjMDAwMDAwOyB9CgojcXVuaXQtdGVzdHMgLmZhaWwgLnRlc3QtYWN0dWFsICAgICAgICAgICAgIHsgY29sb3I6ICNFRTU3NTc7IH0KI3F1bml0LXRlc3RzIC5mYWlsIC50ZXN0LWV4cGVjdGVkICAgICAgICAgICB7IGNvbG9yOiBncmVlbjsgICB9CgojcXVuaXQtYmFubmVyLnF1bml0LWZhaWwsIAojcXVuaXQtdGVzdHJ1bm5lci10b29sYmFyICAgICAgICAgICAgICAgICAgIHsgYmFja2dyb3VuZC1jb2xvcjogI0VFNTc1NzsgfQoKCi8qKiBGb290ZXIgKi8KCiNxdW5pdC10ZXN0cmVzdWx0IHsKCXBhZGRpbmc6IDAuNWVtIDAuNWVtIDAuNWVtIDIuNWVtOwoKCWNvbG9yOiAjMmI4MWFmOwoJYmFja2dyb3VuZC1jb2xvcjogI0QyRTBFNjsKCglib3JkZXItcmFkaXVzOiAwIDAgMTVweCAxNXB4OwoJLW1vei1ib3JkZXItcmFkaXVzOiAwIDAgMTVweCAxNXB4OwoJLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTVweDsKCS13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTVweDsKfQoKLyoqIEZpeHR1cmUgKi8KCiNxdW5pdC1maXh0dXJlIHsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCXRvcDogLTEwMDAwcHg7CglsZWZ0OiAtMTAwMDBweDsKfQo=", "content_type": "text/css"}, "css.js": {"data": "LyoKVGhpcyBhcHByYW9jaCBhbGxvd3MgY29sb3JzIHRvIGJlIHN0b3JlZCBhcyBjb25zdGFudHMKKi8KdmFyIGJsdWUsIGZpcnN0X2NsaWNrX2NvbG9yLCByZWQsIHNlY29uZF9jbGlja19jb2xvciwgeWVsbG93OwpibHVlID0gIiM1RTg3QjAiOwp5ZWxsb3cgPSAiI0Y3Qzk0MiI7CmZpcnN0X2NsaWNrX2NvbG9yID0geWVsbG93OwpzZWNvbmRfY2xpY2tfY29sb3IgPSBibHVlOwpyZWQgPSAicmVkIjsKJCgiaGVhZCIpLmFwcGVuZCgiICA8c3R5bGU+ICAgIHNwYW4udGltZXItc2Vjb25kc3sgICAgICBmbG9hdDpyaWdodDsgICAgICBtYXJnaW4tcmlnaHQ6MTBweDsgICAgICBtYXJnaW4tdG9wOjVweDsgICAgICBmb250LXNpemU6IGxhcmdlOyAgICB9ICAgIC5jb250cm9scy5mbGFzaHsgICAgICBjb2xvcjogYmxhY2s7ICAgICAgYmFja2dyb3VuZC1jb2xvcjogIiArIHJlZCArICI7ICAgIH0gICAgLmZsYXNoIHsgICAgICBjb2xvcjogIiArIHJlZCArICI7ICAgIH0gICAgI0luaXRpYWxTb3VuZCAudWktY29udHJvbGdyb3VwLWxhYmVseyAgICAgIGZvbnQtc2l6ZTogeC1sYXJnZTsgICAgfSAgICAjUGhvbmVtZXMgbGVnZW5keyAgICAgIGZvbnQtc2l6ZTogeC1sYXJnZTsgICAgfSAgICAuZ3JpZHsgICAgICB0ZXh0LWFsaWduOiBjZW50ZXI7ICAgICAgZmxvYXQ6IGxlZnQ7ICAgICAgd2lkdGg6IDUwcHg7ICAgICAgaGVpZ2h0OiA1MHB4OyAgICAgIG1hcmdpbjogMTBweDsgICAgICBib3JkZXI6IDNweCBvdXRzZXQgZ3JheTsgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiBsaWdodGdyYXk7ICAgICAgY29sb3I6IGxpZ2h0Z3JheTsgICAgICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lOyAgICAgIC1raHRtbC11c2VyLXNlbGVjdDogbm9uZTsgICAgICAtbW96LXVzZXItc2VsZWN0OiBub25lOyAgICAgIC1vLXVzZXItc2VsZWN0OiBub25lOyAgICAgIHVzZXItc2VsZWN0OiBub25lOyAgICB9ICAgIC5ncmlkLnNob3d7ICAgICAgY29sb3I6IGJsYWNrOyAgICB9ICAgIC5ncmlkIHNwYW57ICAgICAgZm9udC1zaXplOiA1MHB4OyAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7ICAgIH0gICAgLmdyaWQuc2VsZWN0ZWR7ICAgICAgdGV4dC1kZWNvcmF0aW9uOiBsaW5lLXRocm91Z2g7ICAgICAgY29sb3I6IHdoaXRlOyAgICAgIGJhY2tncm91bmQtY29sb3I6ICIgKyBibHVlICsgIjsgICAgfSAgICAuZ3JpZC5sYXN0LWF0dGVtcHRlZHsgICAgICBjb2xvcjogcmVkOyAgICAgIGJvcmRlci1yaWdodC1jb2xvcjogcmVkOyAgICAgIGJvcmRlci10b3AtY29sb3I6IHJlZDsgICAgICBib3JkZXItYm90dG9tLWNvbG9yOiByZWQ7ICAgICAgYm9yZGVyLXN0eWxlOiBzb2xpZDsgICAgfSAgICBAbWVkaWEgc2NyZWVuIGFuZCAob3JpZW50YXRpb246cG9ydHJhaXQpeyAgICAgICAuZ3JpZC13aWR0aHsgICAgICAgIHdpZHRoOiA0NDBweDsgICAgICB9ICAgIH0gICAgQG1lZGlhIHNjcmVlbiBhbmQgKG9yaWVudGF0aW9uOmxhbmRzY2FwZSkgeyAgICAgIC5ncmlkLXdpZHRoeyAgICAgICAgd2lkdGg6IDgyMHB4OyAgICAgIH0gICAgICAudG9nZ2xlLXJvdy1wb3J0cmFpdHsgICAgICAgIGRpc3BsYXk6IG5vbmU7ICAgICAgfSAgICB9ICAgIC50b2dnbGUtcm93eyAgICAgIGJhY2tncm91bmQtY29sb3I6ICIgKyBibHVlICsgIjsgICAgICB3aWR0aDogMzBweDsgICAgICBoZWlnaHQ6IDMwcHg7ICAgICAgbWFyZ2luLXRvcDogMjJweDsgICAgfSAgICAgIDwvc3R5bGU+ICAiKTs=", "content_type": "application/javascript"}, "images/form-check-on.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAMAAAC6V+0/AAAAA3NCSVQICAjb4U/gAAAAYFBMVEX///////+np6cnKCchISEZGRmtra0SEhKZmZmMjIw6OjpBQkGDg4N8fHx0dHQzMzMuLi1mZmZ0dHRaWlpPT07MzMwZGRlOT098fHx0dHRra2tmZmZaWlozMzPDxMStra29j9XJAAAAIHRSTlMA/zMzMzMzMzMzMzMzMzMzMzPMMzN3mTNEREREVWZ3mfMwb8sAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBDUzVxteM2AAAAFXRFWHRDcmVhdGlvbiBUaW1lADgvMjAvMTBJWw4MAAAAjklEQVQYlXXR2RLCIAyFYbCuRSUItTt5/7fsIV2cKfa/YJJvcodS/7vtSnbJAp6zgEUW0FpLZEneqLkgApa/otaaqQSarWT6MxpgCKGuNJtQiX3HGui9TyvHxYIHOufkZr1zDvhGvFmPDfhCPa+WNuAz1bFYJwvwIbUMa+cZeJ9rhqFZRuAp6wjVddfBX0wKJgxe43wHTwAAAABJRU5ErkJggg==", "content_type": "image/png"}, "models/template.js": {"data": "IA==", "content_type": "application/javascript"}, "images/form-radio-off.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAMAAAC6V+0/AAAAA3NCSVQICAjb4U/gAAAAYFBMVEX////W1tbGxsa2trasrKypqKimpqaNjY2EhIR0dHRjY2NTU1NLS0uZmZmNjY2EhIR5eXlsbWxjY2NTU1NLS0s6OjotLS0uLS0tLi4tLS4uLS4hIiEYFxgODg4GBgcAAACMPEkKAAAAIHRSTlMAERERERERERERERERIiIiIiIiIiIiIiIiIiIiIiIiIuyElFgAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBDUzVxteM2AAAAFXRFWHRDcmVhdGlvbiBUaW1lADgvMjAvMTBJWw4MAAAAh0lEQVQYlXXOyRbDIAhA0YCoSUzn1qZj/v8vC8Ra9Zy+BYvLArrufwieAywJh2nhpgEzo1VStkmRwjsXaFUMr6KgCP2zqgfB8VE1Crp4jfP9xjPOUaYTvDQJ0rmJGM2pycghf6zyep0OVQT6qNsXObUOwO5yFlZkpW2KviaKZsMZ/FlaNND2AdUqEWmuCErqAAAAAElFTkSuQmCC", "content_type": "image/png"}, "js-libraries/jquery-mobile/jquery.mobile-1.0b2.min.css": {"data": "", "content_type": "text/css"}, "js-libraries/jquery-mobile/images/icons-18-white.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAAwgAAAASCAMAAADIfglFAAAAA3NCSVQICAjb4U/gAAABLFBMVEX////////X19e8vLytra17e3tTU1NJSUlCQkI6OjozMzMpKSkhISEZGRkQEBAICAgAAAD////u7u7MzMy2tratra2np6eVlZWLi4tpaWlbW1tTU1NJSUlCQkI6OjozMzMpKSkhISEZGRkQEBAICAgAAAD///8zMzMpKSkhISEZGRkQEBAICAj///9CQkIhISEZGRkQEBAICAj///86OjoQEBAICAj///8zMzMQEBAICAj///8zMzMpKSkQEBAICAj///+EhIQICAj///+EhIRzc3P////29vaZmZmVlZWLi4uEhIR7e3tJSUn////u7u7X19etra2np6dJSUn////X19eZmZlmZmb////IyMi8vLy2traEhIT////29vbo6OjX19f////29vbu7u6PGtkXAAAAZHRSTlMAERERERERERERERERERERESIiIiIiIiIiIiIiIiIiIiIiIiIiIjMzMzMzMzNERERERERVVVVVZmZmZnd3d3d3iIiImZmZqqqqqqqqqqq7u7u7u7vMzMzM3d3d3d3u7u7u////NZx34QAAAAlwSFlzAAAK6wAACusBgosNWgAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAAVdEVYdENyZWF0aW9uIFRpbWUAMy8yNS8xMQuFmlIAAAZKSURBVGiB7Vprd9tEENW2aWn6StWWQF+WbBf5FRHHwhFUDV1QqkIbxEuAeIiy4f//B2ZXcmLL2pklcVsOx/f0OB/2ntmVdu7M3VUta401/hO4tQADSjPnlGky4VkXu8Yabwgf1dBAuVWjaNMYifGvOGssgfm+bcB68wv5v2LrcQ1by5w65bE+1A6gOcjSdIucqMjTcz1ICV/92nhC2KFJKGbEWhk8bNBmvhAc5wBYFtMThSkRhiQYw0C6VmQwGTMJdE6cZubOZKLJYTMhbJUyKKWgUcKC7BY4XIjzC4FleQB/4gLPhyzndOlkRqyVwRO5rx8ssgCEEAtcm8zPRUJN5HNRoLkXiiIkktPnoc25FXL9khVSupZwkZMcuxABxfFSihJmRR7rFXWzW2Fn/wfx08fd7s1lTreOxkjd7mhnsg+Y7Iw0FEsfZiVCSIXIQ4sXAlVCBOOcCmUnAktNBZbmZqXKQHa5EPrZCjEDkqEshvGCyKuwkBwsr2I1T46mFRcpdCh43RydzKeTnBWCCKLikBwP4qCqY+VzZdqtmAlhNPkGeN+NziyEdnc0muwfHB0d7E9Go267mbOAec5KhBDLbU7gJ+cEjVRCBpGIGsNAdymmBJZkatjPScfC0b0OZzpA4rBM5JGsBNg0EZQImRHIqqH1FDxBtQLmiXtpanG84nvwDqmmGgsWFWQ1iSIijKdKBbYaEFMSYG/5Rgcw7HT2nv0lxPGnw86NZU6njqZAnc5ob//lMQR5ub830nEa44R5nssUht9Mt04Wz6B9FEkqayeRwpKGuyeZ4wXV11NVOpEtktPAJns5qrvAVtuEBOIc+gWXxZxzbdJwUAmIAbVGtlxPjK5ZJVVIFHPb9+DwbnnI+T3IZ+LFVuRBX/FpO2cTrdmrWibXUxKRqd9CR7je7gz3vvhk78nPEOhor9O+vsxp19EQZ7MNQjg4lss5PgAhtDebODVUHH7S+fVdwT55sWjJU0qgLA3dE1LKHMCCMmUyRIYkA4xnHhh3TJkBWHbcGFlVOqm+oKWlAtI7xltPKCL4SajyKg/LMebCTKxRVG0XeiCB9yyvAag8F3LdyPiJddQ/flki4BXqCNfbw+n34vWBNEa/ToftswrhcnswnL4ql/NqOhy0Lzdxaqg4vDjpCNriYCaEsiVQnoYu+AlpnlgiLQQvMNsJrQ5IGa5MuZQENT1KCFlVLxAhqD8cM5icPnSeUpE1G50RIloHocGWWqpforbZC6o4ka/di7IPln2hEdfc4XNZxaUxOhi6rnttmePW0RDnvgtCOCzXcwiCcu83cWqoONBmfciFFP5oXxsLTqCjWFVDoK2RTD60xjBOKUHpoDx8ItsYFNQRV9oZuWKsSvuyqaTS2wf6nU5U5rICSyoDFzJDLs59ZUYaI9kIRZDgnsaihVBNpa/2MkYh8iRDCg4I4cnvZZijsXt2IVxy3cGpNRq47qVGziLmOBx/Z2aQOsjVYRlVQkocrKpQqBJYXt6uRmB+EJpUQo5fRiol4MqNZ90Q6T6+lL+f4TkFw0b3XHaCtiijw7KPe12ranFKCPh52UQIsR+hQphZtT91m3HV6U+//ENSfpv2HcDVZY5TR0OcDcftj6dfycPy19PxwHU2mjg1zHFWIoTyqoeq5vL6lLzgVgdqLIPtqqV4eJoHeUGdWOyC2mfprtQ/LGFCwiVLwLkdzZYKPio5Q2sUQnKCN0QY6enZEN0Pn3osS/YUn3g0L86S4IVWCVcdpz9+9svf4vXTgXMOIVj3HWcwnj49PHwKOug7Dc5IceYxz1mJEFiqWgHHb0+tNDf5aBwbsUgY/M8IG7/GUV+MfXVvhIrOj9OYEh2LTC6pvQR/dD8K7SiywgibzleDWCBpiUsQPTOhvnVHsBK5IhovxLfNA5utVqs3/vzH1893nZZEw21Pq46mQBchTn93DNjt91qtixrOPOY5dhCs4MN+9S2eyGBG3iopmLHeEgw+Kq1hgkhTmKQQWr3d6WfjXutcQrC2Wy2n1wf0INJ282zb81E0nDXWeAe48kii1ev1HpW4ssx5VEdjJLZ9StjW9HoTzhprvANsPHi4gAcNnPcWKQ8/1MS6c68cv3dHP58JZ4013j4ufLCAC02c9xcod7Wx2O27MHwbLfU1zj9i0AKQCKOcsQAAAABJRU5ErkJggg==", "content_type": "image/png"}, "index.html": {"data": "PCFET0NUWVBFIGh0bWw+IAo8aHRtbD4gCgk8aGVhZD4gCiAgICA8dGl0bGU+VGFuZ2VyaW5lPC90aXRsZT4gCiAgICA8bWV0YSBuYW1lPSJ2aWV3cG9ydCIgY29udGVudD0id2lkdGg9ZGV2aWNlLXdpZHRoLCB1c2VyLXNjYWxhYmxlPW5vIj4gCiAgICA8bGluayByZWw9ImFwcGxlLXRvdWNoLWljb24tcHJlY29tcG9zZWQiIGhyZWY9Ii9lZ3JhL19kZXNpZ24vYXBwL2ltYWdlcy9UYW5nZXJpbmVJY29uLnBuZyIvPiAKICAgIDxsaW5rIHJlbD0ic3R5bGVzaGVldCIgaHJlZj0ianMtbGlicmFyaWVzL2pxdWVyeS1tb2JpbGUvanF1ZXJ5Lm1vYmlsZS0xLjBiMy5taW4uY3NzIiB0eXBlPSJ0ZXh0L2NzcyIvPgoKICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImpzLWxpYnJhcmllcy9qcXVlcnktMS42LjIubWluLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImpzLWxpYnJhcmllcy9qcXVlcnkuY291Y2guanMiPjwvc2NyaXB0PgogICAgPCEtLSBUT0RPIHN3aXRjaCBhbGwgbXVzdGFjaGUgdG8gaGFuZGxlYmFycyAtLT4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImNzcy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJqcy1saWJyYXJpZXMvbXVzdGFjaGUuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ianMtbGlicmFyaWVzL3VuZGVyc2NvcmUuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ianMtbGlicmFyaWVzL2hhbmRsZWJhcnMuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ianMtbGlicmFyaWVzL2luZmxlY3Rpb24uanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ibW9kZWxzL3RlbXBsYXRlLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Im1vZGVscy9hc3Nlc3NtZW50LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Im1vZGVscy9qcXVlcnlNb2JpbGVQYWdlLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Im1vZGVscy9zY29yZXIuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ibW9kZWxzL3RpbWVyLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9ImVncmEuanMiPjwvc2NyaXB0PgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0ianMtbGlicmFyaWVzL2pxdWVyeS1tb2JpbGUvanF1ZXJ5Lm1vYmlsZS0xLjBiMy5taW4uanMiPjwvc2NyaXB0PgogICAgPCEtLSBDYW4gcmVwbGFjZSBhYm92ZSBqcyByZWZzIHdpdGg6IC0tPgogICAgPCEtLQogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2phdmFzY3JpcHQiIHNyYz0iY29tYmluZWQtamF2YXNjcmlwdC9lZ3JhLm1pbi5qcyI+PC9zY3JpcHQ+CiAgICAtLT4KICAgIDwhLS0gKiogLS0+CiAgPC9oZWFkPiAKICA8Ym9keT4KICA8L2JvZHk+CjwvaHRtbD4KCgo=", "content_type": "text/html"}, "js-libraries/jquery-mobile/images/icons-36-white.png": {"data": "iVBORw0KGgoAAAANSUhEUgAABgwAAAAkCAMAAABi4eHNAAABgFBMVEUAAAAAAAAICAgQEBAZGRkhISEpKSkzMzM6OjpCQkJSUlJra2t5eXmZmZmsrKy1tbXExMTW1tb///8AAAAICAgQEBAZGRkhISEpKSkzMzM6OjpCQkJLS0tSUlJbW1tmZmZra2t5eXmEhISMjIyVlZWmpqasrKy+vr7MzMze3t7v7+////8ICAgQEBAZGRkhISEpKSkzMzM6OjqZmZnExMT///8ICAgQEBAZGRkhISGZmZmsrKz///8ICAgQEBAZGRn///8AAAAICAgQEBApKSlbW1v///8ICAgQEBApKSlLS0t0dHT///8AAAAICAghISEpKSk6OjpCQkJbW1tmZmZ5eXn///8AAAAzMzNSUlJra2t0dHSEhISMjIyZmZn///8ZGRlLS0tra2uEhISVlZWZmZmmpqb///+MjIyZmZmmpqasrKy1tbW+vr7///+MjIympqa1tbW+vr7ExMT////MzMzW1tbe3t7////W1tbe3t7m5ubv7+/////39/f////EapqXAAAAfnRSTlMAERERERERERERERERERERERERIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIjMzMzMzMzMzMzNEREREREREVVVVVWZmZmZmZnd3d3d3d4iIiIiIiIiIiIiZmZmZmZmZmZmqqqqqqqqqqru7u7u7u7vMzMzMzMzd3d3d7u7u7u6bhVvfAAANZUlEQVR42u2d/ZvUSBHHh13gAF/ujLDL7gIHeIcH2dkXvNlZvMzsOKsZ0IiKGsWXCyo6nofRgwABLuRft1/SmWRek6rambj094eF4WHqqe5016erujtbq2lpaWlpaWlpaWlpSZ347jSdmLOZrEVp8sQJbAOJ7GhpaWm9sywoHMaJzEywd4KoeZoHWlpaWuN1fpbmaibR0sjXl0CNo7KjpaWldcy1NDZybzKVCp9LM2GwhHRqiahxmgZa75IMU/eBFjxebiZaFAwynoBziynZyrSvNCwmQw8LLYhiLpfElBc1aFgQoA15sa0f7bsKg83Nvb1Wa28vocHcYTCEpEGOQsOCaXasKGSyqveYUBPaDOiaZPhh5/jOBhfcz0YnAwMD3UVeHJPQwAjQhpgrlaNBh2YMNkKfYuFnWI3jMfyXLwzr/OZeq/uPJz/i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", "content_type": "image/png"}, "js-libraries/jquery-mobile/images/ajax-loader.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAACMAAAAjBAMAAADs965qAAAAA3NCSVQICAjb4U/gAAAAMFBMVEX////x8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHvvEhiAAAAEHRSTlMAESIzRFVmd4iZqrvM3e7/dpUBFQAAAAlwSFlzAAAK6wAACusBgosNWgAAABx0RVh0U29mdHdhcmUAQWRvYmUgRmlyZXdvcmtzIENTNXG14zYAAAEaSURBVCiRY2AgATCapaUqoIiIzN5z5syZJiQRltW7gUJ3705C6OraDRG6GwATkli1evdusNBTuKJVq3c4MjBX3733DqqMfdWqFWDbau+9ewIRspy5KgHMYL737g1EX+fMaVAjbN+9KwDLzZxZAHPMu3cXwEbNnAl397p3YDslOmD6GBjs/v8AURodzXAh3v+/QZRHRyNciPP/f4hQA1yIHVMICtzLC9CFzMuL0IXEy0vQhdjK0+BsRqgv0tIMYEKCggJgmbS0QJgiQUEIwy0tVQCmCCokmhYaCFMElWMKDQ01BIkoKcKEGFRDQ1yMlISUgEIwe5iAQi7GxkpKSjBFwMh2cXEGCSkiOVcFLIQswsAgZGxshCpCBgAA0FNYp5zwDegAAAAASUVORK5CYII=", "content_type": "image/png"}, "tests/testData/Assessment.TEST EGRA Prototype.Login": {"data": "eyJwYWdlSWQiOiJMb2dpbiIsInBhZ2VUeXBlIjoiSlF1ZXJ5TG9naW4ifQo=", "content_type": ""}, "google-spreadsheet-javascript/google-spreadsheet.coffee": {"data": "CiMjIwpVcGRhdGVkIHZlcnNpb25zIGNhbiBiZSBmb3VuZCBhdCBodHRwczovL2dpdGh1Yi5jb20vbWlrZXltY2theS9nb29nbGUtc3ByZWFkc2hlZXQtamF2YXNjcmlwdAojIyMKCgoKY2xhc3MgR29vZ2xlVXJsCiAgY29uc3RydWN0b3I6IChAc291cmNlSWRlbnRpZmllcikgLT4KICAgIGlmIChAc291cmNlSWRlbnRpZmllci5tYXRjaCgvaHR0cChzKSo6LykpCiAgICAgIEB1cmwgPSBAc291cmNlSWRlbnRpZmllcgogICAgICB0cnkKICAgICAgICBAa2V5ID0gQHVybC5tYXRjaCgva2V5PSguKj8pJi8pWzFdCiAgICAgIGNhdGNoIGVycm9yCiAgICAgICAgQGtleSA9IEB1cmwubWF0Y2goLyhjZWxsc3xsaXN0KVwvKC4qPylcLy8pWzJdCiAgICBlbHNlCiAgICAgIEBrZXkgPSBAc291cmNlSWRlbnRpZmllcgogICAgQGpzb25DZWxsc1VybCA9ICJodHRwOi8vc3ByZWFkc2hlZXRzLmdvb2dsZS5jb20vZmVlZHMvY2VsbHMvIiArIEBrZXkgKyAiL29kNi9wdWJsaWMvYmFzaWM/YWx0PWpzb24taW4tc2NyaXB0IgogICAgQGpzb25MaXN0VXJsID0gImh0dHA6Ly9zcHJlYWRzaGVldHMuZ29vZ2xlLmNvbS9mZWVkcy9saXN0LyIgKyBAa2V5ICsgIi9vZDYvcHVibGljL2Jhc2ljP2FsdD1qc29uLWluLXNjcmlwdCIKICAgIEBqc29uVXJsID0gQGpzb25DZWxsc1VybAoKY2xhc3MgR29vZ2xlU3ByZWFkc2hlZXQKICBsb2FkOiAoY2FsbGJhY2spIC0+CiAgICB1cmwgPSBAZ29vZ2xlVXJsLmpzb25DZWxsc1VybCArICImY2FsbGJhY2s9R29vZ2xlU3ByZWFkc2hlZXQuY2FsbGJhY2tDZWxscyIKICAgICQoJ2JvZHknKS5hcHBlbmQoIjxzY3JpcHQgc3JjPSciICt1cmwrICInLz4iKQogICAganNvblVybCA9IEBqc29uVXJsCiAgICBzYWZldHlDb3VudGVyID0gMAogICAgd2FpdFVudGlsTG9hZGVkID0gLT4KICAgICAgcmVzdWx0ID0gR29vZ2xlU3ByZWFkc2hlZXQuZmluZCh7anNvblVybDpqc29uVXJsfSkKICAgICAgaWYgc2FmZXR5Q291bnRlcisrID4gMzAgb3IgKHJlc3VsdD8gYW5kIHJlc3VsdC5kYXRhPykKICAgICAgICBjbGVhckludGVydmFsKGludGVydmFsSWQpCiAgICAgICAgY2FsbGJhY2socmVzdWx0KQogICAgaW50ZXJ2YWxJZCA9IHNldEludGVydmFsKCB3YWl0VW50aWxMb2FkZWQsIDIwMCkKICAgIHJlc3VsdCBpZiByZXN1bHQ/CgogIHVybDogKHVybCkgLT4KICAgIHRoaXMuZ29vZ2xlVXJsKG5ldyBHb29nbGVVcmwodXJsKSkKCiAgZ29vZ2xlVXJsOiAoZ29vZ2xlVXJsKSAtPgogICAgdGhyb3cgIkludmFsaWQgdXJsLCBleHBlY3Rpbmcgb2JqZWN0IG5vdCBzdHJpbmciIGlmIHR5cGVvZihnb29nbGVVcmwpID09ICJzdHJpbmciCiAgICBAdXJsID0gZ29vZ2xlVXJsLnVybAogICAgQGtleSA9IGdvb2dsZVVybC5rZXkKICAgIEBqc29uVXJsID0gZ29vZ2xlVXJsLmpzb25VcmwKICAgIEBnb29nbGVVcmwgPSBnb29nbGVVcmwKCiAgc2F2ZTogLT4KICAgIGxvY2FsU3RvcmFnZVsiR29vZ2xlU3ByZWFkc2hlZXQuIitAa2V5XSA9IEpTT04uc3RyaW5naWZ5KHRoaXMpCgpHb29nbGVTcHJlYWRzaGVldC5ibGVzcyA9IChvYmplY3QpIC0+CiAgcmVzdWx0ID0gbmV3IEdvb2dsZVNwcmVhZHNoZWV0KCkKICBmb3Iga2V5LHZhbHVlIG9mIG9iamVjdAogICAgcmVzdWx0W2tleV09dmFsdWUKICByZXN1bHQKCkdvb2dsZVNwcmVhZHNoZWV0LmZpbmQgPSAocGFyYW1zKSAtPgogIHRyeQogICAgZm9yIGl0ZW0gb2YgbG9jYWxTdG9yYWdlCiAgICAgIGlmIGl0ZW0ubWF0Y2goL15Hb29nbGVTcHJlYWRzaGVldFwuLykKICAgICAgICBpdGVtT2JqZWN0ID0gSlNPTi5wYXJzZShsb2NhbFN0b3JhZ2VbaXRlbV0pCiAgICAgICAgZm9yIGtleSx2YWx1ZSBvZiBwYXJhbXMKICAgICAgICAgIGlmIGl0ZW1PYmplY3Rba2V5XSA9PSB2YWx1ZQogICAgICAgICAgICByZXR1cm4gR29vZ2xlU3ByZWFkc2hlZXQuYmxlc3MoaXRlbU9iamVjdCkKIyBOZWVkIHRoaXMgdG8gaGFuZGxlIGRpZmZlcmVuY2VzIGluIGxvY2FsU3RvcmFnZSBiZXR3ZWVuIGNocm9tZSBhbmQgZmlyZWZveCBUT0RPIG1ha2UgZHJ5CiAgY2F0Y2ggZXJyb3IKICAgIGZvciBpdGVtIGluIGxvY2FsU3RvcmFnZQogICAgICBpZiBpdGVtLm1hdGNoKC9eR29vZ2xlU3ByZWFkc2hlZXRcLi8pCiAgICAgICAgaXRlbU9iamVjdCA9IEpTT04ucGFyc2UobG9jYWxTdG9yYWdlW2l0ZW1dKQogICAgICAgIGZvciBrZXksdmFsdWUgb2YgcGFyYW1zCiAgICAgICAgICBpZiBpdGVtT2JqZWN0W2tleV0gPT0gdmFsdWUKICAgICAgICAgICAgcmV0dXJuIEdvb2dsZVNwcmVhZHNoZWV0LmJsZXNzKGl0ZW1PYmplY3QpCiAgcmV0dXJuIG51bGwKCkdvb2dsZVNwcmVhZHNoZWV0LmNhbGxiYWNrQ2VsbHMgPSAoZGF0YSkgLT4KICBnb29nbGVVcmwgPSBuZXcgR29vZ2xlVXJsKGRhdGEuZmVlZC5pZC4kdCkKICBnb29nbGVTcHJlYWRzaGVldCA9IEdvb2dsZVNwcmVhZHNoZWV0LmZpbmQoe2pzb25Vcmw6Z29vZ2xlVXJsLmpzb25Vcmx9KQogIGlmIGdvb2dsZVNwcmVhZHNoZWV0ID09IG51bGwKICAgIGdvb2dsZVNwcmVhZHNoZWV0ID0gbmV3IEdvb2dsZVNwcmVhZHNoZWV0KCkKICAgIGdvb2dsZVNwcmVhZHNoZWV0Lmdvb2dsZVVybChnb29nbGVVcmwpCiAgZ29vZ2xlU3ByZWFkc2hlZXQuZGF0YSA9IChjZWxsLmNvbnRlbnQuJHQgZm9yIGNlbGwgaW4gZGF0YS5mZWVkLmVudHJ5KQogIGdvb2dsZVNwcmVhZHNoZWV0LnNhdmUoKQogIGdvb2dsZVNwcmVhZHNoZWV0CgoKIyMjIFRPRE8gKEhhbmRsZSByb3cgYmFzZWQgZGF0YSkKR29vZ2xlU3ByZWFkc2hlZXQuY2FsbGJhY2tMaXN0ID0gKGRhdGEpIC0+Cg==", "content_type": ""}, "google-spreadsheet-javascript/jquery-1.4.4.min.js": {"data": "", "content_type": "application/javascript"}, "google-spreadsheet-javascript/tests/qunit.css": {"data": "LyoqIEZvbnQgRmFtaWx5IGFuZCBTaXplcyAqLwoKI3F1bml0LXRlc3RzLCAjcXVuaXQtaGVhZGVyLCAjcXVuaXQtYmFubmVyLCAjcXVuaXQtdGVzdHJ1bm5lci10b29sYmFyLCAjcXVuaXQtdXNlckFnZW50LCAjcXVuaXQtdGVzdHJlc3VsdCB7Cglmb250LWZhbWlseTogIkhlbHZldGljYSBOZXVlIExpZ2h0IiwgIkhlbHZldGljYU5ldWUtTGlnaHQiLCAiSGVsdmV0aWNhIE5ldWUiLCBDYWxpYnJpLCBIZWx2ZXRpY2EsIEFyaWFsOwp9CgojcXVuaXQtdGVzdHJ1bm5lci10b29sYmFyLCAjcXVuaXQtdXNlckFnZW50LCAjcXVuaXQtdGVzdHJlc3VsdCwgI3F1bml0LXRlc3RzIGxpIHsgZm9udC1zaXplOiBzbWFsbDsgfQojcXVuaXQtdGVzdHMgeyBmb250LXNpemU6IHNtYWxsZXI7IH0KCgovKiogUmVzZXRzICovCgojcXVuaXQtdGVzdHMsICNxdW5pdC10ZXN0cyBvbCwgI3F1bml0LWhlYWRlciwgI3F1bml0LWJhbm5lciwgI3F1bml0LXVzZXJBZ2VudCwgI3F1bml0LXRlc3RyZXN1bHQgewoJbWFyZ2luOiAwOwoJcGFkZGluZzogMDsKfQoKCi8qKiBIZWFkZXIgKi8KCiNxdW5pdC1oZWFkZXIgewoJcGFkZGluZzogMC41ZW0gMCAwLjVlbSAxZW07CgoJY29sb3I6ICM4Njk5YTQ7CgliYWNrZ3JvdW5kLWNvbG9yOiAjMGQzMzQ5OwoKCWZvbnQtc2l6ZTogMS41ZW07CglsaW5lLWhlaWdodDogMWVtOwoJZm9udC13ZWlnaHQ6IG5vcm1hbDsKCQoJYm9yZGVyLXJhZGl1czogMTVweCAxNXB4IDAgMDsKCS1tb3otYm9yZGVyLXJhZGl1czogMTVweCAxNXB4IDAgMDsKCS13ZWJraXQtYm9yZGVyLXRvcC1yaWdodC1yYWRpdXM6IDE1cHg7Cgktd2Via2l0LWJvcmRlci10b3AtbGVmdC1yYWRpdXM6IDE1cHg7Cn0KCiNxdW5pdC1oZWFkZXIgYSB7Cgl0ZXh0LWRlY29yYXRpb246IG5vbmU7Cgljb2xvcjogI2MyY2NkMTsKfQoKI3F1bml0LWhlYWRlciBhOmhvdmVyLAojcXVuaXQtaGVhZGVyIGE6Zm9jdXMgewoJY29sb3I6ICNmZmY7Cn0KCiNxdW5pdC1iYW5uZXIgewoJaGVpZ2h0OiA1cHg7Cn0KCiNxdW5pdC10ZXN0cnVubmVyLXRvb2xiYXIgewoJcGFkZGluZzogMGVtIDAgMC41ZW0gMmVtOwp9CgojcXVuaXQtdXNlckFnZW50IHsKCXBhZGRpbmc6IDAuNWVtIDAgMC41ZW0gMi41ZW07CgliYWNrZ3JvdW5kLWNvbG9yOiAjMmI4MWFmOwoJY29sb3I6ICNmZmY7Cgl0ZXh0LXNoYWRvdzogcmdiYSgwLCAwLCAwLCAwLjUpIDJweCAycHggMXB4Owp9CgoKLyoqIFRlc3RzOiBQYXNzL0ZhaWwgKi8KCiNxdW5pdC10ZXN0cyB7CglsaXN0LXN0eWxlLXBvc2l0aW9uOiBpbnNpZGU7Cn0KCiNxdW5pdC10ZXN0cyBsaSB7CglwYWRkaW5nOiAwLjRlbSAwLjVlbSAwLjRlbSAyLjVlbTsKCWJvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZmZmOwoJbGlzdC1zdHlsZS1wb3NpdGlvbjogaW5zaWRlOwp9CgojcXVuaXQtdGVzdHMgbGkgc3Ryb25nIHsKCWN1cnNvcjogcG9pbnRlcjsKfQoKI3F1bml0LXRlc3RzIG9sIHsKCW1hcmdpbi10b3A6IDAuNWVtOwoJcGFkZGluZzogMC41ZW07CgkKCWJhY2tncm91bmQtY29sb3I6ICNmZmY7CgkKCWJvcmRlci1yYWRpdXM6IDE1cHg7CgktbW96LWJvcmRlci1yYWRpdXM6IDE1cHg7Cgktd2Via2l0LWJvcmRlci1yYWRpdXM6IDE1cHg7CgkKCWJveC1zaGFkb3c6IGluc2V0IDBweCAycHggMTNweCAjOTk5OwoJLW1vei1ib3gtc2hhZG93OiBpbnNldCAwcHggMnB4IDEzcHggIzk5OTsKCS13ZWJraXQtYm94LXNoYWRvdzogaW5zZXQgMHB4IDJweCAxM3B4ICM5OTk7Cn0KCiNxdW5pdC10ZXN0cyB0YWJsZSB7Cglib3JkZXItY29sbGFwc2U6IGNvbGxhcHNlOwoJbWFyZ2luLXRvcDogLjJlbTsKfQoKI3F1bml0LXRlc3RzIHRoIHsKCXRleHQtYWxpZ246IHJpZ2h0OwoJdmVydGljYWwtYWxpZ246IHRvcDsKCXBhZGRpbmc6IDAgLjVlbSAwIDA7Cn0KCiNxdW5pdC10ZXN0cyB0ZCB7Cgl2ZXJ0aWNhbC1hbGlnbjogdG9wOwp9CgojcXVuaXQtdGVzdHMgcHJlIHsKCW1hcmdpbjogMDsKCXdoaXRlLXNwYWNlOiBwcmUtd3JhcDsKCXdvcmQtd3JhcDogYnJlYWstd29yZDsKfQoKI3F1bml0LXRlc3RzIGRlbCB7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZTBmMmJlOwoJY29sb3I6ICMzNzRlMGM7Cgl0ZXh0LWRlY29yYXRpb246IG5vbmU7Cn0KCiNxdW5pdC10ZXN0cyBpbnMgewoJYmFja2dyb3VuZC1jb2xvcjogI2ZmY2FjYTsKCWNvbG9yOiAjNTAwOwoJdGV4dC1kZWNvcmF0aW9uOiBub25lOwp9CgovKioqIFRlc3QgQ291bnRzICovCgojcXVuaXQtdGVzdHMgYi5jb3VudHMgICAgICAgICAgICAgICAgICAgICAgIHsgY29sb3I6IGJsYWNrOyB9CiNxdW5pdC10ZXN0cyBiLnBhc3NlZCAgICAgICAgICAgICAgICAgICAgICAgeyBjb2xvcjogIzVFNzQwQjsgfQojcXVuaXQtdGVzdHMgYi5mYWlsZWQgICAgICAgICAgICAgICAgICAgICAgIHsgY29sb3I6ICM3MTA5MDk7IH0KCiNxdW5pdC10ZXN0cyBsaSBsaSB7CgltYXJnaW46IDAuNWVtOwoJcGFkZGluZzogMC40ZW0gMC41ZW0gMC40ZW0gMC41ZW07CgliYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwoJYm9yZGVyLWJvdHRvbTogbm9uZTsKCWxpc3Qtc3R5bGUtcG9zaXRpb246IGluc2lkZTsKfQoKLyoqKiBQYXNzaW5nIFN0eWxlcyAqLwoKI3F1bml0LXRlc3RzIGxpIGxpLnBhc3MgewoJY29sb3I6ICM1RTc0MEI7CgliYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOwoJYm9yZGVyLWxlZnQ6IDI2cHggc29saWQgI0M2RTc0NjsKfQoKI3F1bml0LXRlc3RzIC5wYXNzICAgICAgICAgICAgICAgICAgICAgICAgICB7IGNvbG9yOiAjNTI4Q0UwOyBiYWNrZ3JvdW5kLWNvbG9yOiAjRDJFMEU2OyB9CiNxdW5pdC10ZXN0cyAucGFzcyAudGVzdC1uYW1lICAgICAgICAgICAgICAgeyBjb2xvcjogIzM2NjA5NzsgfQogCiNxdW5pdC10ZXN0cyAucGFzcyAudGVzdC1hY3R1YWwsCiNxdW5pdC10ZXN0cyAucGFzcyAudGVzdC1leHBlY3RlZCAgICAgICAgICAgeyBjb2xvcjogIzk5OTk5OTsgfQoKI3F1bml0LWJhbm5lci5xdW5pdC1wYXNzICAgICAgICAgICAgICAgICAgICB7IGJhY2tncm91bmQtY29sb3I6ICNDNkU3NDY7IH0KCi8qKiogRmFpbGluZyBTdHlsZXMgKi8KCiNxdW5pdC10ZXN0cyBsaSBsaS5mYWlsIHsKCWNvbG9yOiAjNzEwOTA5OwoJYmFja2dyb3VuZC1jb2xvcjogI2ZmZjsKCWJvcmRlci1sZWZ0OiAyNnB4IHNvbGlkICNFRTU3NTc7Cn0KCiNxdW5pdC10ZXN0cyAuZmFpbCAgICAgICAgICAgICAgICAgICAgICAgICAgeyBjb2xvcjogIzAwMDAwMDsgYmFja2dyb3VuZC1jb2xvcjogI0VFNTc1NzsgfQojcXVuaXQtdGVzdHMgLmZhaWwgLnRlc3QtbmFtZSwKI3F1bml0LXRlc3RzIC5mYWlsIC5tb2R1bGUtbmFtZSAgICAgICAgICAgICB7IGNvbG9yOiAjMDAwMDAwOyB9CgojcXVuaXQtdGVzdHMgLmZhaWwgLnRlc3QtYWN0dWFsICAgICAgICAgICAgIHsgY29sb3I6ICNFRTU3NTc7IH0KI3F1bml0LXRlc3RzIC5mYWlsIC50ZXN0LWV4cGVjdGVkICAgICAgICAgICB7IGNvbG9yOiBncmVlbjsgICB9CgojcXVuaXQtYmFubmVyLnF1bml0LWZhaWwsIAojcXVuaXQtdGVzdHJ1bm5lci10b29sYmFyICAgICAgICAgICAgICAgICAgIHsgYmFja2dyb3VuZC1jb2xvcjogI0VFNTc1NzsgfQoKCi8qKiBGb290ZXIgKi8KCiNxdW5pdC10ZXN0cmVzdWx0IHsKCXBhZGRpbmc6IDAuNWVtIDAuNWVtIDAuNWVtIDIuNWVtOwoKCWNvbG9yOiAjMmI4MWFmOwoJYmFja2dyb3VuZC1jb2xvcjogI0QyRTBFNjsKCglib3JkZXItcmFkaXVzOiAwIDAgMTVweCAxNXB4OwoJLW1vei1ib3JkZXItcmFkaXVzOiAwIDAgMTVweCAxNXB4OwoJLXdlYmtpdC1ib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMTVweDsKCS13ZWJraXQtYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMTVweDsKfQoKLyoqIEZpeHR1cmUgKi8KCiNxdW5pdC1maXh0dXJlIHsKCXBvc2l0aW9uOiBhYnNvbHV0ZTsKCXRvcDogLTEwMDAwcHg7CglsZWZ0OiAtMTAwMDBweDsKfQo=", "content_type": "text/css"}, "tests/index.html": {"data": "PCFET0NUWVBFIEhUTUwgUFVCTElDICItLy9XM0MvL0RURCBIVE1MIDQuMDEgVHJhbnNpdGlvbmFsLy9FTiIKICAgICAgImh0dHA6Ly93d3cudzMub3JnL1RSL2h0bWw0L2xvb3NlLmR0ZCI+CjxodG1sPgogIDxoZWFkPgogICAgPGxpbmsgcmVsPSJzdHlsZXNoZWV0IiBocmVmPSJxdW5pdC5jc3MiIHR5cGU9InRleHQvY3NzIi8+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9qcXVlcnktMS41Lm1pbi5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9tdXN0YWNoZS5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgY2hhcnNldD0idXRmLTgiIHNyYz0iLi4vZ29vZ2xlLXNwcmVhZHNoZWV0LWphdmFzY3JpcHQvZ29vZ2xlLXNwcmVhZHNoZWV0LmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uL21vZGVscy90ZW1wbGF0ZS5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9tb2RlbHMvYXNzZXNzbWVudC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9tb2RlbHMvanF1ZXJ5TW9iaWxlUGFnZS5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSIuLi9tb2RlbHMvc2NvcmVyLmpzIj48L3NjcmlwdD4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0IiBzcmM9Ii4uL21vZGVscy90aW1lci5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJxdW5pdC5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCIgc3JjPSJ0ZXN0cy5qcyI+PC9zY3JpcHQ+CiAgICA8c2NyaXB0IHR5cGU9InRleHQvamF2YXNjcmlwdCI+CiAgICA8L3NjcmlwdD4KICAgIDx0aXRsZT5FR1JBIFVuaXQgVGVzdHM8L3RpdGxlPgogIDwvaGVhZD4KICA8Ym9keT4KICAgIDxoMSBpZD0icXVuaXQtaGVhZGVyIj5FR1JBIFVuaXQgVGVzdHM8L2gxPgogICAgPGgyIGlkPSJxdW5pdC1iYW5uZXIiPjwvaDI+CiAgICA8aDIgaWQ9InF1bml0LXVzZXJBZ2VudCI+PC9oMj4KICAgIDxvbCBpZD0icXVuaXQtdGVzdHMiPgogICAgPC9vbD4KICA8L2JvZHk+CjwvaHRtbD4K", "content_type": "text/html"}, "egra.js": {"data": "", "content_type": "application/javascript"}, "js-libraries/mustache.js": {"data": "", "content_type": "application/javascript"}, "js-libraries/underscore.js": {"data": "Ly8gICAgIFVuZGVyc2NvcmUuanMgMS4xLjcKLy8gICAgIChjKSAyMDExIEplcmVteSBBc2hrZW5hcywgRG9jdW1lbnRDbG91ZCBJbmMuCi8vICAgICBVbmRlcnNjb3JlIGlzIGZyZWVseSBkaXN0cmlidXRhYmxlIHVuZGVyIHRoZSBNSVQgbGljZW5zZS4KLy8gICAgIFBvcnRpb25zIG9mIFVuZGVyc2NvcmUgYXJlIGluc3BpcmVkIG9yIGJvcnJvd2VkIGZyb20gUHJvdG90eXBlLAovLyAgICAgT2xpdmVyIFN0ZWVsZSdzIEZ1bmN0aW9uYWwsIGFuZCBKb2huIFJlc2lnJ3MgTWljcm8tVGVtcGxhdGluZy4KLy8gICAgIEZvciBhbGwgZGV0YWlscyBhbmQgZG9jdW1lbnRhdGlvbjoKLy8gICAgIGh0dHA6Ly9kb2N1bWVudGNsb3VkLmdpdGh1Yi5jb20vdW5kZXJzY29yZQoKKGZ1bmN0aW9uKCkgewoKICAvLyBCYXNlbGluZSBzZXR1cAogIC8vIC0tLS0tLS0tLS0tLS0tCgogIC8vIEVzdGFibGlzaCB0aGUgcm9vdCBvYmplY3QsIGB3aW5kb3dgIGluIHRoZSBicm93c2VyLCBvciBgZ2xvYmFsYCBvbiB0aGUgc2VydmVyLgogIHZhciByb290ID0gdGhpczsKCiAgLy8gU2F2ZSB0aGUgcHJldmlvdXMgdmFsdWUgb2YgdGhlIGBfYCB2YXJpYWJsZS4KICB2YXIgcHJldmlvdXNVbmRlcnNjb3JlID0gcm9vdC5fOwoKICAvLyBFc3RhYmxpc2ggdGhlIG9iamVjdCB0aGF0IGdldHMgcmV0dXJuZWQgdG8gYnJlYWsgb3V0IG9mIGEgbG9vcCBpdGVyYXRpb24uCiAgdmFyIGJyZWFrZXIgPSB7fTsKCiAgLy8gU2F2ZSBieXRlcyBpbiB0aGUgbWluaWZpZWQgKGJ1dCBub3QgZ3ppcHBlZCkgdmVyc2lvbjoKICB2YXIgQXJyYXlQcm90byA9IEFycmF5LnByb3RvdHlwZSwgT2JqUHJvdG8gPSBPYmplY3QucHJvdG90eXBlLCBGdW5jUHJvdG8gPSBGdW5jdGlvbi5wcm90b3R5cGU7CgogIC8vIENyZWF0ZSBxdWljayByZWZlcmVuY2UgdmFyaWFibGVzIGZvciBzcGVlZCBhY2Nlc3MgdG8gY29yZSBwcm90b3R5cGVzLgogIHZhciBzbGljZSAgICAgICAgICAgID0gQXJyYXlQcm90by5zbGljZSwKICAgICAgdW5zaGlmdCAgICAgICAgICA9IEFycmF5UHJvdG8udW5zaGlmdCwKICAgICAgdG9TdHJpbmcgICAgICAgICA9IE9ialByb3RvLnRvU3RyaW5nLAogICAgICBoYXNPd25Qcm9wZXJ0eSAgID0gT2JqUHJvdG8uaGFzT3duUHJvcGVydHk7CgogIC8vIEFsbCAqKkVDTUFTY3JpcHQgNSoqIG5hdGl2ZSBmdW5jdGlvbiBpbXBsZW1lbnRhdGlvbnMgdGhhdCB3ZSBob3BlIHRvIHVzZQogIC8vIGFyZSBkZWNsYXJlZCBoZXJlLgogIHZhcgogICAgbmF0aXZlRm9yRWFjaCAgICAgID0gQXJyYXlQcm90by5mb3JFYWNoLAogICAgbmF0aXZlTWFwICAgICAgICAgID0gQXJyYXlQcm90by5tYXAsCiAgICBuYXRpdmVSZWR1Y2UgICAgICAgPSBBcnJheVByb3RvLnJlZHVjZSwKICAgIG5hdGl2ZVJlZHVjZVJpZ2h0ICA9IEFycmF5UHJvdG8ucmVkdWNlUmlnaHQsCiAgICBuYXRpdmVGaWx0ZXIgICAgICAgPSBBcnJheVByb3RvLmZpbHRlciwKICAgIG5hdGl2ZUV2ZXJ5ICAgICAgICA9IEFycmF5UHJvdG8uZXZlcnksCiAgICBuYXRpdmVTb21lICAgICAgICAgPSBBcnJheVByb3RvLnNvbWUsCiAgICBuYXRpdmVJbmRleE9mICAgICAgPSBBcnJheVByb3RvLmluZGV4T2YsCiAgICBuYXRpdmVMYXN0SW5kZXhPZiAgPSBBcnJheVByb3RvLmxhc3RJbmRleE9mLAogICAgbmF0aXZlSXNBcnJheSAgICAgID0gQXJyYXkuaXNBcnJheSwKICAgIG5hdGl2ZUtleXMgICAgICAgICA9IE9iamVjdC5rZXlzLAogICAgbmF0aXZlQmluZCAgICAgICAgID0gRnVuY1Byb3RvLmJpbmQ7CgogIC8vIENyZWF0ZSBhIHNhZmUgcmVmZXJlbmNlIHRvIHRoZSBVbmRlcnNjb3JlIG9iamVjdCBmb3IgdXNlIGJlbG93LgogIHZhciBfID0gZnVuY3Rpb24ob2JqKSB7IHJldHVybiBuZXcgd3JhcHBlcihvYmopOyB9OwoKICAvLyBFeHBvcnQgdGhlIFVuZGVyc2NvcmUgb2JqZWN0IGZvciAqKkNvbW1vbkpTKiosIHdpdGggYmFja3dhcmRzLWNvbXBhdGliaWxpdHkKICAvLyBmb3IgdGhlIG9sZCBgcmVxdWlyZSgpYCBBUEkuIElmIHdlJ3JlIG5vdCBpbiBDb21tb25KUywgYWRkIGBfYCB0byB0aGUKICAvLyBnbG9iYWwgb2JqZWN0LgogIGlmICh0eXBlb2YgbW9kdWxlICE9PSAndW5kZWZpbmVkJyAmJiBtb2R1bGUuZXhwb3J0cykgewogICAgbW9kdWxlLmV4cG9ydHMgPSBfOwogICAgXy5fID0gXzsKICB9IGVsc2UgewogICAgLy8gRXhwb3J0ZWQgYXMgYSBzdHJpbmcsIGZvciBDbG9zdXJlIENvbXBpbGVyICJhZHZhbmNlZCIgbW9kZS4KICAgIHJvb3RbJ18nXSA9IF87CiAgfQoKICAvLyBDdXJyZW50IHZlcnNpb24uCiAgXy5WRVJTSU9OID0gJzEuMS43JzsKCiAgLy8gQ29sbGVjdGlvbiBGdW5jdGlvbnMKICAvLyAtLS0tLS0tLS0tLS0tLS0tLS0tLQoKICAvLyBUaGUgY29ybmVyc3RvbmUsIGFuIGBlYWNoYCBpbXBsZW1lbnRhdGlvbiwgYWthIGBmb3JFYWNoYC4KICAvLyBIYW5kbGVzIG9iamVjdHMgd2l0aCB0aGUgYnVpbHQtaW4gYGZvckVhY2hgLCBhcnJheXMsIGFuZCByYXcgb2JqZWN0cy4KICAvLyBEZWxlZ2F0ZXMgdG8gKipFQ01BU2NyaXB0IDUqKidzIG5hdGl2ZSBgZm9yRWFjaGAgaWYgYXZhaWxhYmxlLgogIHZhciBlYWNoID0gXy5lYWNoID0gXy5mb3JFYWNoID0gZnVuY3Rpb24ob2JqLCBpdGVyYXRvciwgY29udGV4dCkgewogICAgaWYgKG9iaiA9PSBudWxsKSByZXR1cm47CiAgICBpZiAobmF0aXZlRm9yRWFjaCAmJiBvYmouZm9yRWFjaCA9PT0gbmF0aXZlRm9yRWFjaCkgewogICAgICBvYmouZm9yRWFjaChpdGVyYXRvciwgY29udGV4dCk7CiAgICB9IGVsc2UgaWYgKG9iai5sZW5ndGggPT09ICtvYmoubGVuZ3RoKSB7CiAgICAgIGZvciAodmFyIGkgPSAwLCBsID0gb2JqLmxlbmd0aDsgaSA8IGw7IGkrKykgewogICAgICAgIGlmIChpIGluIG9iaiAmJiBpdGVyYXRvci5jYWxsKGNvbnRleHQsIG9ialtpXSwgaSwgb2JqKSA9PT0gYnJlYWtlcikgcmV0dXJuOwogICAgICB9CiAgICB9IGVsc2UgewogICAgICBmb3IgKHZhciBrZXkgaW4gb2JqKSB7CiAgICAgICAgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSB7CiAgICAgICAgICBpZiAoaXRlcmF0b3IuY2FsbChjb250ZXh0LCBvYmpba2V5XSwga2V5LCBvYmopID09PSBicmVha2VyKSByZXR1cm47CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfTsKCiAgLy8gUmV0dXJuIHRoZSByZXN1bHRzIG9mIGFwcGx5aW5nIHRoZSBpdGVyYXRvciB0byBlYWNoIGVsZW1lbnQuCiAgLy8gRGVsZWdhdGVzIHRvICoqRUNNQVNjcmlwdCA1KioncyBuYXRpdmUgYG1hcGAgaWYgYXZhaWxhYmxlLgogIF8ubWFwID0gZnVuY3Rpb24ob2JqLCBpdGVyYXRvciwgY29udGV4dCkgewogICAgdmFyIHJlc3VsdHMgPSBbXTsKICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuIHJlc3VsdHM7CiAgICBpZiAobmF0aXZlTWFwICYmIG9iai5tYXAgPT09IG5hdGl2ZU1hcCkgcmV0dXJuIG9iai5tYXAoaXRlcmF0b3IsIGNvbnRleHQpOwogICAgZWFjaChvYmosIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgbGlzdCkgewogICAgICByZXN1bHRzW3Jlc3VsdHMubGVuZ3RoXSA9IGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4LCBsaXN0KTsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdHM7CiAgfTsKCiAgLy8gKipSZWR1Y2UqKiBidWlsZHMgdXAgYSBzaW5nbGUgcmVzdWx0IGZyb20gYSBsaXN0IG9mIHZhbHVlcywgYWthIGBpbmplY3RgLAogIC8vIG9yIGBmb2xkbGAuIERlbGVnYXRlcyB0byAqKkVDTUFTY3JpcHQgNSoqJ3MgbmF0aXZlIGByZWR1Y2VgIGlmIGF2YWlsYWJsZS4KICBfLnJlZHVjZSA9IF8uZm9sZGwgPSBfLmluamVjdCA9IGZ1bmN0aW9uKG9iaiwgaXRlcmF0b3IsIG1lbW8sIGNvbnRleHQpIHsKICAgIHZhciBpbml0aWFsID0gbWVtbyAhPT0gdm9pZCAwOwogICAgaWYgKG9iaiA9PSBudWxsKSBvYmogPSBbXTsKICAgIGlmIChuYXRpdmVSZWR1Y2UgJiYgb2JqLnJlZHVjZSA9PT0gbmF0aXZlUmVkdWNlKSB7CiAgICAgIGlmIChjb250ZXh0KSBpdGVyYXRvciA9IF8uYmluZChpdGVyYXRvciwgY29udGV4dCk7CiAgICAgIHJldHVybiBpbml0aWFsID8gb2JqLnJlZHVjZShpdGVyYXRvciwgbWVtbykgOiBvYmoucmVkdWNlKGl0ZXJhdG9yKTsKICAgIH0KICAgIGVhY2gob2JqLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGxpc3QpIHsKICAgICAgaWYgKCFpbml0aWFsKSB7CiAgICAgICAgbWVtbyA9IHZhbHVlOwogICAgICAgIGluaXRpYWwgPSB0cnVlOwogICAgICB9IGVsc2UgewogICAgICAgIG1lbW8gPSBpdGVyYXRvci5jYWxsKGNvbnRleHQsIG1lbW8sIHZhbHVlLCBpbmRleCwgbGlzdCk7CiAgICAgIH0KICAgIH0pOwogICAgaWYgKCFpbml0aWFsKSB0aHJvdyBuZXcgVHlwZUVycm9yKCJSZWR1Y2Ugb2YgZW1wdHkgYXJyYXkgd2l0aCBubyBpbml0aWFsIHZhbHVlIik7CiAgICByZXR1cm4gbWVtbzsKICB9OwoKICAvLyBUaGUgcmlnaHQtYXNzb2NpYXRpdmUgdmVyc2lvbiBvZiByZWR1Y2UsIGFsc28ga25vd24gYXMgYGZvbGRyYC4KICAvLyBEZWxlZ2F0ZXMgdG8gKipFQ01BU2NyaXB0IDUqKidzIG5hdGl2ZSBgcmVkdWNlUmlnaHRgIGlmIGF2YWlsYWJsZS4KICBfLnJlZHVjZVJpZ2h0ID0gXy5mb2xkciA9IGZ1bmN0aW9uKG9iaiwgaXRlcmF0b3IsIG1lbW8sIGNvbnRleHQpIHsKICAgIGlmIChvYmogPT0gbnVsbCkgb2JqID0gW107CiAgICBpZiAobmF0aXZlUmVkdWNlUmlnaHQgJiYgb2JqLnJlZHVjZVJpZ2h0ID09PSBuYXRpdmVSZWR1Y2VSaWdodCkgewogICAgICBpZiAoY29udGV4dCkgaXRlcmF0b3IgPSBfLmJpbmQoaXRlcmF0b3IsIGNvbnRleHQpOwogICAgICByZXR1cm4gbWVtbyAhPT0gdm9pZCAwID8gb2JqLnJlZHVjZVJpZ2h0KGl0ZXJhdG9yLCBtZW1vKSA6IG9iai5yZWR1Y2VSaWdodChpdGVyYXRvcik7CiAgICB9CiAgICB2YXIgcmV2ZXJzZWQgPSAoXy5pc0FycmF5KG9iaikgPyBvYmouc2xpY2UoKSA6IF8udG9BcnJheShvYmopKS5yZXZlcnNlKCk7CiAgICByZXR1cm4gXy5yZWR1Y2UocmV2ZXJzZWQsIGl0ZXJhdG9yLCBtZW1vLCBjb250ZXh0KTsKICB9OwoKICAvLyBSZXR1cm4gdGhlIGZpcnN0IHZhbHVlIHdoaWNoIHBhc3NlcyBhIHRydXRoIHRlc3QuIEFsaWFzZWQgYXMgYGRldGVjdGAuCiAgXy5maW5kID0gXy5kZXRlY3QgPSBmdW5jdGlvbihvYmosIGl0ZXJhdG9yLCBjb250ZXh0KSB7CiAgICB2YXIgcmVzdWx0OwogICAgYW55KG9iaiwgZnVuY3Rpb24odmFsdWUsIGluZGV4LCBsaXN0KSB7CiAgICAgIGlmIChpdGVyYXRvci5jYWxsKGNvbnRleHQsIHZhbHVlLCBpbmRleCwgbGlzdCkpIHsKICAgICAgICByZXN1bHQgPSB2YWx1ZTsKICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gcmVzdWx0OwogIH07CgogIC8vIFJldHVybiBhbGwgdGhlIGVsZW1lbnRzIHRoYXQgcGFzcyBhIHRydXRoIHRlc3QuCiAgLy8gRGVsZWdhdGVzIHRvICoqRUNNQVNjcmlwdCA1KioncyBuYXRpdmUgYGZpbHRlcmAgaWYgYXZhaWxhYmxlLgogIC8vIEFsaWFzZWQgYXMgYHNlbGVjdGAuCiAgXy5maWx0ZXIgPSBfLnNlbGVjdCA9IGZ1bmN0aW9uKG9iaiwgaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIHZhciByZXN1bHRzID0gW107CiAgICBpZiAob2JqID09IG51bGwpIHJldHVybiByZXN1bHRzOwogICAgaWYgKG5hdGl2ZUZpbHRlciAmJiBvYmouZmlsdGVyID09PSBuYXRpdmVGaWx0ZXIpIHJldHVybiBvYmouZmlsdGVyKGl0ZXJhdG9yLCBjb250ZXh0KTsKICAgIGVhY2gob2JqLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGxpc3QpIHsKICAgICAgaWYgKGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4LCBsaXN0KSkgcmVzdWx0c1tyZXN1bHRzLmxlbmd0aF0gPSB2YWx1ZTsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdHM7CiAgfTsKCiAgLy8gUmV0dXJuIGFsbCB0aGUgZWxlbWVudHMgZm9yIHdoaWNoIGEgdHJ1dGggdGVzdCBmYWlscy4KICBfLnJlamVjdCA9IGZ1bmN0aW9uKG9iaiwgaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIHZhciByZXN1bHRzID0gW107CiAgICBpZiAob2JqID09IG51bGwpIHJldHVybiByZXN1bHRzOwogICAgZWFjaChvYmosIGZ1bmN0aW9uKHZhbHVlLCBpbmRleCwgbGlzdCkgewogICAgICBpZiAoIWl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4LCBsaXN0KSkgcmVzdWx0c1tyZXN1bHRzLmxlbmd0aF0gPSB2YWx1ZTsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdHM7CiAgfTsKCiAgLy8gRGV0ZXJtaW5lIHdoZXRoZXIgYWxsIG9mIHRoZSBlbGVtZW50cyBtYXRjaCBhIHRydXRoIHRlc3QuCiAgLy8gRGVsZWdhdGVzIHRvICoqRUNNQVNjcmlwdCA1KioncyBuYXRpdmUgYGV2ZXJ5YCBpZiBhdmFpbGFibGUuCiAgLy8gQWxpYXNlZCBhcyBgYWxsYC4KICBfLmV2ZXJ5ID0gXy5hbGwgPSBmdW5jdGlvbihvYmosIGl0ZXJhdG9yLCBjb250ZXh0KSB7CiAgICB2YXIgcmVzdWx0ID0gdHJ1ZTsKICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuIHJlc3VsdDsKICAgIGlmIChuYXRpdmVFdmVyeSAmJiBvYmouZXZlcnkgPT09IG5hdGl2ZUV2ZXJ5KSByZXR1cm4gb2JqLmV2ZXJ5KGl0ZXJhdG9yLCBjb250ZXh0KTsKICAgIGVhY2gob2JqLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGxpc3QpIHsKICAgICAgaWYgKCEocmVzdWx0ID0gcmVzdWx0ICYmIGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgdmFsdWUsIGluZGV4LCBsaXN0KSkpIHJldHVybiBicmVha2VyOwogICAgfSk7CiAgICByZXR1cm4gcmVzdWx0OwogIH07CgogIC8vIERldGVybWluZSBpZiBhdCBsZWFzdCBvbmUgZWxlbWVudCBpbiB0aGUgb2JqZWN0IG1hdGNoZXMgYSB0cnV0aCB0ZXN0LgogIC8vIERlbGVnYXRlcyB0byAqKkVDTUFTY3JpcHQgNSoqJ3MgbmF0aXZlIGBzb21lYCBpZiBhdmFpbGFibGUuCiAgLy8gQWxpYXNlZCBhcyBgYW55YC4KICB2YXIgYW55ID0gXy5zb21lID0gXy5hbnkgPSBmdW5jdGlvbihvYmosIGl0ZXJhdG9yLCBjb250ZXh0KSB7CiAgICBpdGVyYXRvciA9IGl0ZXJhdG9yIHx8IF8uaWRlbnRpdHk7CiAgICB2YXIgcmVzdWx0ID0gZmFsc2U7CiAgICBpZiAob2JqID09IG51bGwpIHJldHVybiByZXN1bHQ7CiAgICBpZiAobmF0aXZlU29tZSAmJiBvYmouc29tZSA9PT0gbmF0aXZlU29tZSkgcmV0dXJuIG9iai5zb21lKGl0ZXJhdG9yLCBjb250ZXh0KTsKICAgIGVhY2gob2JqLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGxpc3QpIHsKICAgICAgaWYgKHJlc3VsdCB8PSBpdGVyYXRvci5jYWxsKGNvbnRleHQsIHZhbHVlLCBpbmRleCwgbGlzdCkpIHJldHVybiBicmVha2VyOwogICAgfSk7CiAgICByZXR1cm4gISFyZXN1bHQ7CiAgfTsKCiAgLy8gRGV0ZXJtaW5lIGlmIGEgZ2l2ZW4gdmFsdWUgaXMgaW5jbHVkZWQgaW4gdGhlIGFycmF5IG9yIG9iamVjdCB1c2luZyBgPT09YC4KICAvLyBBbGlhc2VkIGFzIGBjb250YWluc2AuCiAgXy5pbmNsdWRlID0gXy5jb250YWlucyA9IGZ1bmN0aW9uKG9iaiwgdGFyZ2V0KSB7CiAgICB2YXIgZm91bmQgPSBmYWxzZTsKICAgIGlmIChvYmogPT0gbnVsbCkgcmV0dXJuIGZvdW5kOwogICAgaWYgKG5hdGl2ZUluZGV4T2YgJiYgb2JqLmluZGV4T2YgPT09IG5hdGl2ZUluZGV4T2YpIHJldHVybiBvYmouaW5kZXhPZih0YXJnZXQpICE9IC0xOwogICAgYW55KG9iaiwgZnVuY3Rpb24odmFsdWUpIHsKICAgICAgaWYgKGZvdW5kID0gdmFsdWUgPT09IHRhcmdldCkgcmV0dXJuIHRydWU7CiAgICB9KTsKICAgIHJldHVybiBmb3VuZDsKICB9OwoKICAvLyBJbnZva2UgYSBtZXRob2QgKHdpdGggYXJndW1lbnRzKSBvbiBldmVyeSBpdGVtIGluIGEgY29sbGVjdGlvbi4KICBfLmludm9rZSA9IGZ1bmN0aW9uKG9iaiwgbWV0aG9kKSB7CiAgICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKTsKICAgIHJldHVybiBfLm1hcChvYmosIGZ1bmN0aW9uKHZhbHVlKSB7CiAgICAgIHJldHVybiAobWV0aG9kLmNhbGwgPyBtZXRob2QgfHwgdmFsdWUgOiB2YWx1ZVttZXRob2RdKS5hcHBseSh2YWx1ZSwgYXJncyk7CiAgICB9KTsKICB9OwoKICAvLyBDb252ZW5pZW5jZSB2ZXJzaW9uIG9mIGEgY29tbW9uIHVzZSBjYXNlIG9mIGBtYXBgOiBmZXRjaGluZyBhIHByb3BlcnR5LgogIF8ucGx1Y2sgPSBmdW5jdGlvbihvYmosIGtleSkgewogICAgcmV0dXJuIF8ubWFwKG9iaiwgZnVuY3Rpb24odmFsdWUpeyByZXR1cm4gdmFsdWVba2V5XTsgfSk7CiAgfTsKCiAgLy8gUmV0dXJuIHRoZSBtYXhpbXVtIGVsZW1lbnQgb3IgKGVsZW1lbnQtYmFzZWQgY29tcHV0YXRpb24pLgogIF8ubWF4ID0gZnVuY3Rpb24ob2JqLCBpdGVyYXRvciwgY29udGV4dCkgewogICAgaWYgKCFpdGVyYXRvciAmJiBfLmlzQXJyYXkob2JqKSkgcmV0dXJuIE1hdGgubWF4LmFwcGx5KE1hdGgsIG9iaik7CiAgICB2YXIgcmVzdWx0ID0ge2NvbXB1dGVkIDogLUluZmluaXR5fTsKICAgIGVhY2gob2JqLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGxpc3QpIHsKICAgICAgdmFyIGNvbXB1dGVkID0gaXRlcmF0b3IgPyBpdGVyYXRvci5jYWxsKGNvbnRleHQsIHZhbHVlLCBpbmRleCwgbGlzdCkgOiB2YWx1ZTsKICAgICAgY29tcHV0ZWQgPj0gcmVzdWx0LmNvbXB1dGVkICYmIChyZXN1bHQgPSB7dmFsdWUgOiB2YWx1ZSwgY29tcHV0ZWQgOiBjb21wdXRlZH0pOwogICAgfSk7CiAgICByZXR1cm4gcmVzdWx0LnZhbHVlOwogIH07CgogIC8vIFJldHVybiB0aGUgbWluaW11bSBlbGVtZW50IChvciBlbGVtZW50LWJhc2VkIGNvbXB1dGF0aW9uKS4KICBfLm1pbiA9IGZ1bmN0aW9uKG9iaiwgaXRlcmF0b3IsIGNvbnRleHQpIHsKICAgIGlmICghaXRlcmF0b3IgJiYgXy5pc0FycmF5KG9iaikpIHJldHVybiBNYXRoLm1pbi5hcHBseShNYXRoLCBvYmopOwogICAgdmFyIHJlc3VsdCA9IHtjb21wdXRlZCA6IEluZmluaXR5fTsKICAgIGVhY2gob2JqLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGxpc3QpIHsKICAgICAgdmFyIGNvbXB1dGVkID0gaXRlcmF0b3IgPyBpdGVyYXRvci5jYWxsKGNvbnRleHQsIHZhbHVlLCBpbmRleCwgbGlzdCkgOiB2YWx1ZTsKICAgICAgY29tcHV0ZWQgPCByZXN1bHQuY29tcHV0ZWQgJiYgKHJlc3VsdCA9IHt2YWx1ZSA6IHZhbHVlLCBjb21wdXRlZCA6IGNvbXB1dGVkfSk7CiAgICB9KTsKICAgIHJldHVybiByZXN1bHQudmFsdWU7CiAgfTsKCiAgLy8gU29ydCB0aGUgb2JqZWN0J3MgdmFsdWVzIGJ5IGEgY3JpdGVyaW9uIHByb2R1Y2VkIGJ5IGFuIGl0ZXJhdG9yLgogIF8uc29ydEJ5ID0gZnVuY3Rpb24ob2JqLCBpdGVyYXRvciwgY29udGV4dCkgewogICAgcmV0dXJuIF8ucGx1Y2soXy5tYXAob2JqLCBmdW5jdGlvbih2YWx1ZSwgaW5kZXgsIGxpc3QpIHsKICAgICAgcmV0dXJuIHsKICAgICAgICB2YWx1ZSA6IHZhbHVlLAogICAgICAgIGNyaXRlcmlhIDogaXRlcmF0b3IuY2FsbChjb250ZXh0LCB2YWx1ZSwgaW5kZXgsIGxpc3QpCiAgICAgIH07CiAgICB9KS5zb3J0KGZ1bmN0aW9uKGxlZnQsIHJpZ2h0KSB7CiAgICAgIHZhciBhID0gbGVmdC5jcml0ZXJpYSwgYiA9IHJpZ2h0LmNyaXRlcmlhOwogICAgICByZXR1cm4gYSA8IGIgPyAtMSA6IGEgPiBiID8gMSA6IDA7CiAgICB9KSwgJ3ZhbHVlJyk7CiAgfTsKCiAgLy8gR3JvdXBzIHRoZSBvYmplY3QncyB2YWx1ZXMgYnkgYSBjcml0ZXJpb24gcHJvZHVjZWQgYnkgYW4gaXRlcmF0b3IKICBfLmdyb3VwQnkgPSBmdW5jdGlvbihvYmosIGl0ZXJhdG9yKSB7CiAgICB2YXIgcmVzdWx0ID0ge307CiAgICBlYWNoKG9iaiwgZnVuY3Rpb24odmFsdWUsIGluZGV4KSB7CiAgICAgIHZhciBrZXkgPSBpdGVyYXRvcih2YWx1ZSwgaW5kZXgpOwogICAgICAocmVzdWx0W2tleV0gfHwgKHJlc3VsdFtrZXldID0gW10pKS5wdXNoKHZhbHVlKTsKICAgIH0pOwogICAgcmV0dXJuIHJlc3VsdDsKICB9OwoKICAvLyBVc2UgYSBjb21wYXJhdG9yIGZ1bmN0aW9uIHRvIGZpZ3VyZSBvdXQgYXQgd2hhdCBpbmRleCBhbiBvYmplY3Qgc2hvdWxkCiAgLy8gYmUgaW5zZXJ0ZWQgc28gYXMgdG8gbWFpbnRhaW4gb3JkZXIuIFVzZXMgYmluYXJ5IHNlYXJjaC4KICBfLnNvcnRlZEluZGV4ID0gZnVuY3Rpb24oYXJyYXksIG9iaiwgaXRlcmF0b3IpIHsKICAgIGl0ZXJhdG9yIHx8IChpdGVyYXRvciA9IF8uaWRlbnRpdHkpOwogICAgdmFyIGxvdyA9IDAsIGhpZ2ggPSBhcnJheS5sZW5ndGg7CiAgICB3aGlsZSAobG93IDwgaGlnaCkgewogICAgICB2YXIgbWlkID0gKGxvdyArIGhpZ2gpID4+IDE7CiAgICAgIGl0ZXJhdG9yKGFycmF5W21pZF0pIDwgaXRlcmF0b3Iob2JqKSA/IGxvdyA9IG1pZCArIDEgOiBoaWdoID0gbWlkOwogICAgfQogICAgcmV0dXJuIGxvdzsKICB9OwoKICAvLyBTYWZlbHkgY29udmVydCBhbnl0aGluZyBpdGVyYWJsZSBpbnRvIGEgcmVhbCwgbGl2ZSBhcnJheS4KICBfLnRvQXJyYXkgPSBmdW5jdGlvbihpdGVyYWJsZSkgewogICAgaWYgKCFpdGVyYWJsZSkgICAgICAgICAgICAgICAgcmV0dXJuIFtdOwogICAgaWYgKGl0ZXJhYmxlLnRvQXJyYXkpICAgICAgICAgcmV0dXJuIGl0ZXJhYmxlLnRvQXJyYXkoKTsKICAgIGlmIChfLmlzQXJyYXkoaXRlcmFibGUpKSAgICAgIHJldHVybiBzbGljZS5jYWxsKGl0ZXJhYmxlKTsKICAgIGlmIChfLmlzQXJndW1lbnRzKGl0ZXJhYmxlKSkgIHJldHVybiBzbGljZS5jYWxsKGl0ZXJhYmxlKTsKICAgIHJldHVybiBfLnZhbHVlcyhpdGVyYWJsZSk7CiAgfTsKCiAgLy8gUmV0dXJuIHRoZSBudW1iZXIgb2YgZWxlbWVudHMgaW4gYW4gb2JqZWN0LgogIF8uc2l6ZSA9IGZ1bmN0aW9uKG9iaikgewogICAgcmV0dXJuIF8udG9BcnJheShvYmopLmxlbmd0aDsKICB9OwoKICAvLyBBcnJheSBGdW5jdGlvbnMKICAvLyAtLS0tLS0tLS0tLS0tLS0KCiAgLy8gR2V0IHRoZSBmaXJzdCBlbGVtZW50IG9mIGFuIGFycmF5LiBQYXNzaW5nICoqbioqIHdpbGwgcmV0dXJuIHRoZSBmaXJzdCBOCiAgLy8gdmFsdWVzIGluIHRoZSBhcnJheS4gQWxpYXNlZCBhcyBgaGVhZGAuIFRoZSAqKmd1YXJkKiogY2hlY2sgYWxsb3dzIGl0IHRvIHdvcmsKICAvLyB3aXRoIGBfLm1hcGAuCiAgXy5maXJzdCA9IF8uaGVhZCA9IGZ1bmN0aW9uKGFycmF5LCBuLCBndWFyZCkgewogICAgcmV0dXJuIChuICE9IG51bGwpICYmICFndWFyZCA/IHNsaWNlLmNhbGwoYXJyYXksIDAsIG4pIDogYXJyYXlbMF07CiAgfTsKCiAgLy8gUmV0dXJucyBldmVyeXRoaW5nIGJ1dCB0aGUgZmlyc3QgZW50cnkgb2YgdGhlIGFycmF5LiBBbGlhc2VkIGFzIGB0YWlsYC4KICAvLyBFc3BlY2lhbGx5IHVzZWZ1bCBvbiB0aGUgYXJndW1lbnRzIG9iamVjdC4gUGFzc2luZyBhbiAqKmluZGV4Kiogd2lsbCByZXR1cm4KICAvLyB0aGUgcmVzdCBvZiB0aGUgdmFsdWVzIGluIHRoZSBhcnJheSBmcm9tIHRoYXQgaW5kZXggb253YXJkLiBUaGUgKipndWFyZCoqCiAgLy8gY2hlY2sgYWxsb3dzIGl0IHRvIHdvcmsgd2l0aCBgXy5tYXBgLgogIF8ucmVzdCA9IF8udGFpbCA9IGZ1bmN0aW9uKGFycmF5LCBpbmRleCwgZ3VhcmQpIHsKICAgIHJldHVybiBzbGljZS5jYWxsKGFycmF5LCAoaW5kZXggPT0gbnVsbCkgfHwgZ3VhcmQgPyAxIDogaW5kZXgpOwogIH07CgogIC8vIEdldCB0aGUgbGFzdCBlbGVtZW50IG9mIGFuIGFycmF5LgogIF8ubGFzdCA9IGZ1bmN0aW9uKGFycmF5KSB7CiAgICByZXR1cm4gYXJyYXlbYXJyYXkubGVuZ3RoIC0gMV07CiAgfTsKCiAgLy8gVHJpbSBvdXQgYWxsIGZhbHN5IHZhbHVlcyBmcm9tIGFuIGFycmF5LgogIF8uY29tcGFjdCA9IGZ1bmN0aW9uKGFycmF5KSB7CiAgICByZXR1cm4gXy5maWx0ZXIoYXJyYXksIGZ1bmN0aW9uKHZhbHVlKXsgcmV0dXJuICEhdmFsdWU7IH0pOwogIH07CgogIC8vIFJldHVybiBhIGNvbXBsZXRlbHkgZmxhdHRlbmVkIHZlcnNpb24gb2YgYW4gYXJyYXkuCiAgXy5mbGF0dGVuID0gZnVuY3Rpb24oYXJyYXkpIHsKICAgIHJldHVybiBfLnJlZHVjZShhcnJheSwgZnVuY3Rpb24obWVtbywgdmFsdWUpIHsKICAgICAgaWYgKF8uaXNBcnJheSh2YWx1ZSkpIHJldHVybiBtZW1vLmNvbmNhdChfLmZsYXR0ZW4odmFsdWUpKTsKICAgICAgbWVtb1ttZW1vLmxlbmd0aF0gPSB2YWx1ZTsKICAgICAgcmV0dXJuIG1lbW87CiAgICB9LCBbXSk7CiAgfTsKCiAgLy8gUmV0dXJuIGEgdmVyc2lvbiBvZiB0aGUgYXJyYXkgdGhhdCBkb2VzIG5vdCBjb250YWluIHRoZSBzcGVjaWZpZWQgdmFsdWUocykuCiAgXy53aXRob3V0ID0gZnVuY3Rpb24oYXJyYXkpIHsKICAgIHJldHVybiBfLmRpZmZlcmVuY2UoYXJyYXksIHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSk7CiAgfTsKCiAgLy8gUHJvZHVjZSBhIGR1cGxpY2F0ZS1mcmVlIHZlcnNpb24gb2YgdGhlIGFycmF5LiBJZiB0aGUgYXJyYXkgaGFzIGFscmVhZHkKICAvLyBiZWVuIHNvcnRlZCwgeW91IGhhdmUgdGhlIG9wdGlvbiBvZiB1c2luZyBhIGZhc3RlciBhbGdvcml0aG0uCiAgLy8gQWxpYXNlZCBhcyBgdW5pcXVlYC4KICBfLnVuaXEgPSBfLnVuaXF1ZSA9IGZ1bmN0aW9uKGFycmF5LCBpc1NvcnRlZCkgewogICAgcmV0dXJuIF8ucmVkdWNlKGFycmF5LCBmdW5jdGlvbihtZW1vLCBlbCwgaSkgewogICAgICBpZiAoMCA9PSBpIHx8IChpc1NvcnRlZCA9PT0gdHJ1ZSA/IF8ubGFzdChtZW1vKSAhPSBlbCA6ICFfLmluY2x1ZGUobWVtbywgZWwpKSkgbWVtb1ttZW1vLmxlbmd0aF0gPSBlbDsKICAgICAgcmV0dXJuIG1lbW87CiAgICB9LCBbXSk7CiAgfTsKCiAgLy8gUHJvZHVjZSBhbiBhcnJheSB0aGF0IGNvbnRhaW5zIHRoZSB1bmlvbjogZWFjaCBkaXN0aW5jdCBlbGVtZW50IGZyb20gYWxsIG9mCiAgLy8gdGhlIHBhc3NlZC1pbiBhcnJheXMuCiAgXy51bmlvbiA9IGZ1bmN0aW9uKCkgewogICAgcmV0dXJuIF8udW5pcShfLmZsYXR0ZW4oYXJndW1lbnRzKSk7CiAgfTsKCiAgLy8gUHJvZHVjZSBhbiBhcnJheSB0aGF0IGNvbnRhaW5zIGV2ZXJ5IGl0ZW0gc2hhcmVkIGJldHdlZW4gYWxsIHRoZQogIC8vIHBhc3NlZC1pbiBhcnJheXMuIChBbGlhc2VkIGFzICJpbnRlcnNlY3QiIGZvciBiYWNrLWNvbXBhdC4pCiAgXy5pbnRlcnNlY3Rpb24gPSBfLmludGVyc2VjdCA9IGZ1bmN0aW9uKGFycmF5KSB7CiAgICB2YXIgcmVzdCA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTsKICAgIHJldHVybiBfLmZpbHRlcihfLnVuaXEoYXJyYXkpLCBmdW5jdGlvbihpdGVtKSB7CiAgICAgIHJldHVybiBfLmV2ZXJ5KHJlc3QsIGZ1bmN0aW9uKG90aGVyKSB7CiAgICAgICAgcmV0dXJuIF8uaW5kZXhPZihvdGhlciwgaXRlbSkgPj0gMDsKICAgICAgfSk7CiAgICB9KTsKICB9OwoKICAvLyBUYWtlIHRoZSBkaWZmZXJlbmNlIGJldHdlZW4gb25lIGFycmF5IGFuZCBhbm90aGVyLgogIC8vIE9ubHkgdGhlIGVsZW1lbnRzIHByZXNlbnQgaW4ganVzdCB0aGUgZmlyc3QgYXJyYXkgd2lsbCByZW1haW4uCiAgXy5kaWZmZXJlbmNlID0gZnVuY3Rpb24oYXJyYXksIG90aGVyKSB7CiAgICByZXR1cm4gXy5maWx0ZXIoYXJyYXksIGZ1bmN0aW9uKHZhbHVlKXsgcmV0dXJuICFfLmluY2x1ZGUob3RoZXIsIHZhbHVlKTsgfSk7CiAgfTsKCiAgLy8gWmlwIHRvZ2V0aGVyIG11bHRpcGxlIGxpc3RzIGludG8gYSBzaW5nbGUgYXJyYXkgLS0gZWxlbWVudHMgdGhhdCBzaGFyZQogIC8vIGFuIGluZGV4IGdvIHRvZ2V0aGVyLgogIF8uemlwID0gZnVuY3Rpb24oKSB7CiAgICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKTsKICAgIHZhciBsZW5ndGggPSBfLm1heChfLnBsdWNrKGFyZ3MsICdsZW5ndGgnKSk7CiAgICB2YXIgcmVzdWx0cyA9IG5ldyBBcnJheShsZW5ndGgpOwogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW5ndGg7IGkrKykgcmVzdWx0c1tpXSA9IF8ucGx1Y2soYXJncywgIiIgKyBpKTsKICAgIHJldHVybiByZXN1bHRzOwogIH07CgogIC8vIElmIHRoZSBicm93c2VyIGRvZXNuJ3Qgc3VwcGx5IHVzIHdpdGggaW5kZXhPZiAoSSdtIGxvb2tpbmcgYXQgeW91LCAqKk1TSUUqKiksCiAgLy8gd2UgbmVlZCB0aGlzIGZ1bmN0aW9uLiBSZXR1cm4gdGhlIHBvc2l0aW9uIG9mIHRoZSBmaXJzdCBvY2N1cnJlbmNlIG9mIGFuCiAgLy8gaXRlbSBpbiBhbiBhcnJheSwgb3IgLTEgaWYgdGhlIGl0ZW0gaXMgbm90IGluY2x1ZGVkIGluIHRoZSBhcnJheS4KICAvLyBEZWxlZ2F0ZXMgdG8gKipFQ01BU2NyaXB0IDUqKidzIG5hdGl2ZSBgaW5kZXhPZmAgaWYgYXZhaWxhYmxlLgogIC8vIElmIHRoZSBhcnJheSBpcyBsYXJnZSBhbmQgYWxyZWFkeSBpbiBzb3J0IG9yZGVyLCBwYXNzIGB0cnVlYAogIC8vIGZvciAqKmlzU29ydGVkKiogdG8gdXNlIGJpbmFyeSBzZWFyY2guCiAgXy5pbmRleE9mID0gZnVuY3Rpb24oYXJyYXksIGl0ZW0sIGlzU29ydGVkKSB7CiAgICBpZiAoYXJyYXkgPT0gbnVsbCkgcmV0dXJuIC0xOwogICAgdmFyIGksIGw7CiAgICBpZiAoaXNTb3J0ZWQpIHsKICAgICAgaSA9IF8uc29ydGVkSW5kZXgoYXJyYXksIGl0ZW0pOwogICAgICByZXR1cm4gYXJyYXlbaV0gPT09IGl0ZW0gPyBpIDogLTE7CiAgICB9CiAgICBpZiAobmF0aXZlSW5kZXhPZiAmJiBhcnJheS5pbmRleE9mID09PSBuYXRpdmVJbmRleE9mKSByZXR1cm4gYXJyYXkuaW5kZXhPZihpdGVtKTsKICAgIGZvciAoaSA9IDAsIGwgPSBhcnJheS5sZW5ndGg7IGkgPCBsOyBpKyspIGlmIChhcnJheVtpXSA9PT0gaXRlbSkgcmV0dXJuIGk7CiAgICByZXR1cm4gLTE7CiAgfTsKCgogIC8vIERlbGVnYXRlcyB0byAqKkVDTUFTY3JpcHQgNSoqJ3MgbmF0aXZlIGBsYXN0SW5kZXhPZmAgaWYgYXZhaWxhYmxlLgogIF8ubGFzdEluZGV4T2YgPSBmdW5jdGlvbihhcnJheSwgaXRlbSkgewogICAgaWYgKGFycmF5ID09IG51bGwpIHJldHVybiAtMTsKICAgIGlmIChuYXRpdmVMYXN0SW5kZXhPZiAmJiBhcnJheS5sYXN0SW5kZXhPZiA9PT0gbmF0aXZlTGFzdEluZGV4T2YpIHJldHVybiBhcnJheS5sYXN0SW5kZXhPZihpdGVtKTsKICAgIHZhciBpID0gYXJyYXkubGVuZ3RoOwogICAgd2hpbGUgKGktLSkgaWYgKGFycmF5W2ldID09PSBpdGVtKSByZXR1cm4gaTsKICAgIHJldHVybiAtMTsKICB9OwoKICAvLyBHZW5lcmF0ZSBhbiBpbnRlZ2VyIEFycmF5IGNvbnRhaW5pbmcgYW4gYXJpdGhtZXRpYyBwcm9ncmVzc2lvbi4gQSBwb3J0IG9mCiAgLy8gdGhlIG5hdGl2ZSBQeXRob24gYHJhbmdlKClgIGZ1bmN0aW9uLiBTZWUKICAvLyBbdGhlIFB5dGhvbiBkb2N1bWVudGF0aW9uXShodHRwOi8vZG9jcy5weXRob24ub3JnL2xpYnJhcnkvZnVuY3Rpb25zLmh0bWwjcmFuZ2UpLgogIF8ucmFuZ2UgPSBmdW5jdGlvbihzdGFydCwgc3RvcCwgc3RlcCkgewogICAgaWYgKGFyZ3VtZW50cy5sZW5ndGggPD0gMSkgewogICAgICBzdG9wID0gc3RhcnQgfHwgMDsKICAgICAgc3RhcnQgPSAwOwogICAgfQogICAgc3RlcCA9IGFyZ3VtZW50c1syXSB8fCAxOwoKICAgIHZhciBsZW4gPSBNYXRoLm1heChNYXRoLmNlaWwoKHN0b3AgLSBzdGFydCkgLyBzdGVwKSwgMCk7CiAgICB2YXIgaWR4ID0gMDsKICAgIHZhciByYW5nZSA9IG5ldyBBcnJheShsZW4pOwoKICAgIHdoaWxlKGlkeCA8IGxlbikgewogICAgICByYW5nZVtpZHgrK10gPSBzdGFydDsKICAgICAgc3RhcnQgKz0gc3RlcDsKICAgIH0KCiAgICByZXR1cm4gcmFuZ2U7CiAgfTsKCiAgLy8gRnVuY3Rpb24gKGFoZW0pIEZ1bmN0aW9ucwogIC8vIC0tLS0tLS0tLS0tLS0tLS0tLQoKICAvLyBDcmVhdGUgYSBmdW5jdGlvbiBib3VuZCB0byBhIGdpdmVuIG9iamVjdCAoYXNzaWduaW5nIGB0aGlzYCwgYW5kIGFyZ3VtZW50cywKICAvLyBvcHRpb25hbGx5KS4gQmluZGluZyB3aXRoIGFyZ3VtZW50cyBpcyBhbHNvIGtub3duIGFzIGBjdXJyeWAuCiAgLy8gRGVsZWdhdGVzIHRvICoqRUNNQVNjcmlwdCA1KioncyBuYXRpdmUgYEZ1bmN0aW9uLmJpbmRgIGlmIGF2YWlsYWJsZS4KICAvLyBXZSBjaGVjayBmb3IgYGZ1bmMuYmluZGAgZmlyc3QsIHRvIGZhaWwgZmFzdCB3aGVuIGBmdW5jYCBpcyB1bmRlZmluZWQuCiAgXy5iaW5kID0gZnVuY3Rpb24oZnVuYywgb2JqKSB7CiAgICBpZiAoZnVuYy5iaW5kID09PSBuYXRpdmVCaW5kICYmIG5hdGl2ZUJpbmQpIHJldHVybiBuYXRpdmVCaW5kLmFwcGx5KGZ1bmMsIHNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKSk7CiAgICB2YXIgYXJncyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzLCAyKTsKICAgIHJldHVybiBmdW5jdGlvbigpIHsKICAgICAgcmV0dXJuIGZ1bmMuYXBwbHkob2JqLCBhcmdzLmNvbmNhdChzbGljZS5jYWxsKGFyZ3VtZW50cykpKTsKICAgIH07CiAgfTsKCiAgLy8gQmluZCBhbGwgb2YgYW4gb2JqZWN0J3MgbWV0aG9kcyB0byB0aGF0IG9iamVjdC4gVXNlZnVsIGZvciBlbnN1cmluZyB0aGF0CiAgLy8gYWxsIGNhbGxiYWNrcyBkZWZpbmVkIG9uIGFuIG9iamVjdCBiZWxvbmcgdG8gaXQuCiAgXy5iaW5kQWxsID0gZnVuY3Rpb24ob2JqKSB7CiAgICB2YXIgZnVuY3MgPSBzbGljZS5jYWxsKGFyZ3VtZW50cywgMSk7CiAgICBpZiAoZnVuY3MubGVuZ3RoID09IDApIGZ1bmNzID0gXy5mdW5jdGlvbnMob2JqKTsKICAgIGVhY2goZnVuY3MsIGZ1bmN0aW9uKGYpIHsgb2JqW2ZdID0gXy5iaW5kKG9ialtmXSwgb2JqKTsgfSk7CiAgICByZXR1cm4gb2JqOwogIH07CgogIC8vIE1lbW9pemUgYW4gZXhwZW5zaXZlIGZ1bmN0aW9uIGJ5IHN0b3JpbmcgaXRzIHJlc3VsdHMuCiAgXy5tZW1vaXplID0gZnVuY3Rpb24oZnVuYywgaGFzaGVyKSB7CiAgICB2YXIgbWVtbyA9IHt9OwogICAgaGFzaGVyIHx8IChoYXNoZXIgPSBfLmlkZW50aXR5KTsKICAgIHJldHVybiBmdW5jdGlvbigpIHsKICAgICAgdmFyIGtleSA9IGhhc2hlci5hcHBseSh0aGlzLCBhcmd1bWVudHMpOwogICAgICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChtZW1vLCBrZXkpID8gbWVtb1trZXldIDogKG1lbW9ba2V5XSA9IGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKSk7CiAgICB9OwogIH07CgogIC8vIERlbGF5cyBhIGZ1bmN0aW9uIGZvciB0aGUgZ2l2ZW4gbnVtYmVyIG9mIG1pbGxpc2Vjb25kcywgYW5kIHRoZW4gY2FsbHMKICAvLyBpdCB3aXRoIHRoZSBhcmd1bWVudHMgc3VwcGxpZWQuCiAgXy5kZWxheSA9IGZ1bmN0aW9uKGZ1bmMsIHdhaXQpIHsKICAgIHZhciBhcmdzID0gc2xpY2UuY2FsbChhcmd1bWVudHMsIDIpOwogICAgcmV0dXJuIHNldFRpbWVvdXQoZnVuY3Rpb24oKXsgcmV0dXJuIGZ1bmMuYXBwbHkoZnVuYywgYXJncyk7IH0sIHdhaXQpOwogIH07CgogIC8vIERlZmVycyBhIGZ1bmN0aW9uLCBzY2hlZHVsaW5nIGl0IHRvIHJ1biBhZnRlciB0aGUgY3VycmVudCBjYWxsIHN0YWNrIGhhcwogIC8vIGNsZWFyZWQuCiAgXy5kZWZlciA9IGZ1bmN0aW9uKGZ1bmMpIHsKICAgIHJldHVybiBfLmRlbGF5LmFwcGx5KF8sIFtmdW5jLCAxXS5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpKSk7CiAgfTsKCiAgLy8gSW50ZXJuYWwgZnVuY3Rpb24gdXNlZCB0byBpbXBsZW1lbnQgYF8udGhyb3R0bGVgIGFuZCBgXy5kZWJvdW5jZWAuCiAgdmFyIGxpbWl0ID0gZnVuY3Rpb24oZnVuYywgd2FpdCwgZGVib3VuY2UpIHsKICAgIHZhciB0aW1lb3V0OwogICAgcmV0dXJuIGZ1bmN0aW9uKCkgewogICAgICB2YXIgY29udGV4dCA9IHRoaXMsIGFyZ3MgPSBhcmd1bWVudHM7CiAgICAgIHZhciB0aHJvdHRsZXIgPSBmdW5jdGlvbigpIHsKICAgICAgICB0aW1lb3V0ID0gbnVsbDsKICAgICAgICBmdW5jLmFwcGx5KGNvbnRleHQsIGFyZ3MpOwogICAgICB9OwogICAgICBpZiAoZGVib3VuY2UpIGNsZWFyVGltZW91dCh0aW1lb3V0KTsKICAgICAgaWYgKGRlYm91bmNlIHx8ICF0aW1lb3V0KSB0aW1lb3V0ID0gc2V0VGltZW91dCh0aHJvdHRsZXIsIHdhaXQpOwogICAgfTsKICB9OwoKICAvLyBSZXR1cm5zIGEgZnVuY3Rpb24sIHRoYXQsIHdoZW4gaW52b2tlZCwgd2lsbCBvbmx5IGJlIHRyaWdnZXJlZCBhdCBtb3N0IG9uY2UKICAvLyBkdXJpbmcgYSBnaXZlbiB3aW5kb3cgb2YgdGltZS4KICBfLnRocm90dGxlID0gZnVuY3Rpb24oZnVuYywgd2FpdCkgewogICAgcmV0dXJuIGxpbWl0KGZ1bmMsIHdhaXQsIGZhbHNlKTsKICB9OwoKICAvLyBSZXR1cm5zIGEgZnVuY3Rpb24sIHRoYXQsIGFzIGxvbmcgYXMgaXQgY29udGludWVzIHRvIGJlIGludm9rZWQsIHdpbGwgbm90CiAgLy8gYmUgdHJpZ2dlcmVkLiBUaGUgZnVuY3Rpb24gd2lsbCBiZSBjYWxsZWQgYWZ0ZXIgaXQgc3RvcHMgYmVpbmcgY2FsbGVkIGZvcgogIC8vIE4gbWlsbGlzZWNvbmRzLgogIF8uZGVib3VuY2UgPSBmdW5jdGlvbihmdW5jLCB3YWl0KSB7CiAgICByZXR1cm4gbGltaXQoZnVuYywgd2FpdCwgdHJ1ZSk7CiAgfTsKCiAgLy8gUmV0dXJucyBhIGZ1bmN0aW9uIHRoYXQgd2lsbCBiZSBleGVjdXRlZCBhdCBtb3N0IG9uZSB0aW1lLCBubyBtYXR0ZXIgaG93CiAgLy8gb2Z0ZW4geW91IGNhbGwgaXQuIFVzZWZ1bCBmb3IgbGF6eSBpbml0aWFsaXphdGlvbi4KICBfLm9uY2UgPSBmdW5jdGlvbihmdW5jKSB7CiAgICB2YXIgcmFuID0gZmFsc2UsIG1lbW87CiAgICByZXR1cm4gZnVuY3Rpb24oKSB7CiAgICAgIGlmIChyYW4pIHJldHVybiBtZW1vOwogICAgICByYW4gPSB0cnVlOwogICAgICByZXR1cm4gbWVtbyA9IGZ1bmMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgIH07CiAgfTsKCiAgLy8gUmV0dXJucyB0aGUgZmlyc3QgZnVuY3Rpb24gcGFzc2VkIGFzIGFuIGFyZ3VtZW50IHRvIHRoZSBzZWNvbmQsCiAgLy8gYWxsb3dpbmcgeW91IHRvIGFkanVzdCBhcmd1bWVudHMsIHJ1biBjb2RlIGJlZm9yZSBhbmQgYWZ0ZXIsIGFuZAogIC8vIGNvbmRpdGlvbmFsbHkgZXhlY3V0ZSB0aGUgb3JpZ2luYWwgZnVuY3Rpb24uCiAgXy53cmFwID0gZnVuY3Rpb24oZnVuYywgd3JhcHBlcikgewogICAgcmV0dXJuIGZ1bmN0aW9uKCkgewogICAgICB2YXIgYXJncyA9IFtmdW5jXS5jb25jYXQoc2xpY2UuY2FsbChhcmd1bWVudHMpKTsKICAgICAgcmV0dXJuIHdyYXBwZXIuYXBwbHkodGhpcywgYXJncyk7CiAgICB9OwogIH07CgogIC8vIFJldHVybnMgYSBmdW5jdGlvbiB0aGF0IGlzIHRoZSBjb21wb3NpdGlvbiBvZiBhIGxpc3Qgb2YgZnVuY3Rpb25zLCBlYWNoCiAgLy8gY29uc3VtaW5nIHRoZSByZXR1cm4gdmFsdWUgb2YgdGhlIGZ1bmN0aW9uIHRoYXQgZm9sbG93cy4KICBfLmNvbXBvc2UgPSBmdW5jdGlvbigpIHsKICAgIHZhciBmdW5jcyA9IHNsaWNlLmNhbGwoYXJndW1lbnRzKTsKICAgIHJldHVybiBmdW5jdGlvbigpIHsKICAgICAgdmFyIGFyZ3MgPSBzbGljZS5jYWxsKGFyZ3VtZW50cyk7CiAgICAgIGZvciAodmFyIGkgPSBmdW5jcy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgewogICAgICAgIGFyZ3MgPSBbZnVuY3NbaV0uYXBwbHkodGhpcywgYXJncyldOwogICAgICB9CiAgICAgIHJldHVybiBhcmdzWzBdOwogICAgfTsKICB9OwoKICAvLyBSZXR1cm5zIGEgZnVuY3Rpb24gdGhhdCB3aWxsIG9ubHkgYmUgZXhlY3V0ZWQgYWZ0ZXIgYmVpbmcgY2FsbGVkIE4gdGltZXMuCiAgXy5hZnRlciA9IGZ1bmN0aW9uKHRpbWVzLCBmdW5jKSB7CiAgICByZXR1cm4gZnVuY3Rpb24oKSB7CiAgICAgIGlmICgtLXRpbWVzIDwgMSkgeyByZXR1cm4gZnVuYy5hcHBseSh0aGlzLCBhcmd1bWVudHMpOyB9CiAgICB9OwogIH07CgoKICAvLyBPYmplY3QgRnVuY3Rpb25zCiAgLy8gLS0tLS0tLS0tLS0tLS0tLQoKICAvLyBSZXRyaWV2ZSB0aGUgbmFtZXMgb2YgYW4gb2JqZWN0J3MgcHJvcGVydGllcy4KICAvLyBEZWxlZ2F0ZXMgdG8gKipFQ01BU2NyaXB0IDUqKidzIG5hdGl2ZSBgT2JqZWN0LmtleXNgCiAgXy5rZXlzID0gbmF0aXZlS2V5cyB8fCBmdW5jdGlvbihvYmopIHsKICAgIGlmIChvYmogIT09IE9iamVjdChvYmopKSB0aHJvdyBuZXcgVHlwZUVycm9yKCdJbnZhbGlkIG9iamVjdCcpOwogICAgdmFyIGtleXMgPSBbXTsKICAgIGZvciAodmFyIGtleSBpbiBvYmopIGlmIChoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwga2V5KSkga2V5c1trZXlzLmxlbmd0aF0gPSBrZXk7CiAgICByZXR1cm4ga2V5czsKICB9OwoKICAvLyBSZXRyaWV2ZSB0aGUgdmFsdWVzIG9mIGFuIG9iamVjdCdzIHByb3BlcnRpZXMuCiAgXy52YWx1ZXMgPSBmdW5jdGlvbihvYmopIHsKICAgIHJldHVybiBfLm1hcChvYmosIF8uaWRlbnRpdHkpOwogIH07CgogIC8vIFJldHVybiBhIHNvcnRlZCBsaXN0IG9mIHRoZSBmdW5jdGlvbiBuYW1lcyBhdmFpbGFibGUgb24gdGhlIG9iamVjdC4KICAvLyBBbGlhc2VkIGFzIGBtZXRob2RzYAogIF8uZnVuY3Rpb25zID0gXy5tZXRob2RzID0gZnVuY3Rpb24ob2JqKSB7CiAgICB2YXIgbmFtZXMgPSBbXTsKICAgIGZvciAodmFyIGtleSBpbiBvYmopIHsKICAgICAgaWYgKF8uaXNGdW5jdGlvbihvYmpba2V5XSkpIG5hbWVzLnB1c2goa2V5KTsKICAgIH0KICAgIHJldHVybiBuYW1lcy5zb3J0KCk7CiAgfTsKCiAgLy8gRXh0ZW5kIGEgZ2l2ZW4gb2JqZWN0IHdpdGggYWxsIHRoZSBwcm9wZXJ0aWVzIGluIHBhc3NlZC1pbiBvYmplY3QocykuCiAgXy5leHRlbmQgPSBmdW5jdGlvbihvYmopIHsKICAgIGVhY2goc2xpY2UuY2FsbChhcmd1bWVudHMsIDEpLCBmdW5jdGlvbihzb3VyY2UpIHsKICAgICAgZm9yICh2YXIgcHJvcCBpbiBzb3VyY2UpIHsKICAgICAgICBpZiAoc291cmNlW3Byb3BdICE9PSB2b2lkIDApIG9ialtwcm9wXSA9IHNvdXJjZVtwcm9wXTsKICAgICAgfQogICAgfSk7CiAgICByZXR1cm4gb2JqOwogIH07CgogIC8vIEZpbGwgaW4gYSBnaXZlbiBvYmplY3Qgd2l0aCBkZWZhdWx0IHByb3BlcnRpZXMuCiAgXy5kZWZhdWx0cyA9IGZ1bmN0aW9uKG9iaikgewogICAgZWFjaChzbGljZS5jYWxsKGFyZ3VtZW50cywgMSksIGZ1bmN0aW9uKHNvdXJjZSkgewogICAgICBmb3IgKHZhciBwcm9wIGluIHNvdXJjZSkgewogICAgICAgIGlmIChvYmpbcHJvcF0gPT0gbnVsbCkgb2JqW3Byb3BdID0gc291cmNlW3Byb3BdOwogICAgICB9CiAgICB9KTsKICAgIHJldHVybiBvYmo7CiAgfTsKCiAgLy8gQ3JlYXRlIGEgKHNoYWxsb3ctY2xvbmVkKSBkdXBsaWNhdGUgb2YgYW4gb2JqZWN0LgogIF8uY2xvbmUgPSBmdW5jdGlvbihvYmopIHsKICAgIHJldHVybiBfLmlzQXJyYXkob2JqKSA/IG9iai5zbGljZSgpIDogXy5leHRlbmQoe30sIG9iaik7CiAgfTsKCiAgLy8gSW52b2tlcyBpbnRlcmNlcHRvciB3aXRoIHRoZSBvYmosIGFuZCB0aGVuIHJldHVybnMgb2JqLgogIC8vIFRoZSBwcmltYXJ5IHB1cnBvc2Ugb2YgdGhpcyBtZXRob2QgaXMgdG8gInRhcCBpbnRvIiBhIG1ldGhvZCBjaGFpbiwgaW4KICAvLyBvcmRlciB0byBwZXJmb3JtIG9wZXJhdGlvbnMgb24gaW50ZXJtZWRpYXRlIHJlc3VsdHMgd2l0aGluIHRoZSBjaGFpbi4KICBfLnRhcCA9IGZ1bmN0aW9uKG9iaiwgaW50ZXJjZXB0b3IpIHsKICAgIGludGVyY2VwdG9yKG9iaik7CiAgICByZXR1cm4gb2JqOwogIH07CgogIC8vIFBlcmZvcm0gYSBkZWVwIGNvbXBhcmlzb24gdG8gY2hlY2sgaWYgdHdvIG9iamVjdHMgYXJlIGVxdWFsLgogIF8uaXNFcXVhbCA9IGZ1bmN0aW9uKGEsIGIpIHsKICAgIC8vIENoZWNrIG9iamVjdCBpZGVudGl0eS4KICAgIGlmIChhID09PSBiKSByZXR1cm4gdHJ1ZTsKICAgIC8vIERpZmZlcmVudCB0eXBlcz8KICAgIHZhciBhdHlwZSA9IHR5cGVvZihhKSwgYnR5cGUgPSB0eXBlb2YoYik7CiAgICBpZiAoYXR5cGUgIT0gYnR5cGUpIHJldHVybiBmYWxzZTsKICAgIC8vIEJhc2ljIGVxdWFsaXR5IHRlc3QgKHdhdGNoIG91dCBmb3IgY29lcmNpb25zKS4KICAgIGlmIChhID09IGIpIHJldHVybiB0cnVlOwogICAgLy8gT25lIGlzIGZhbHN5IGFuZCB0aGUgb3RoZXIgdHJ1dGh5LgogICAgaWYgKCghYSAmJiBiKSB8fCAoYSAmJiAhYikpIHJldHVybiBmYWxzZTsKICAgIC8vIFVud3JhcCBhbnkgd3JhcHBlZCBvYmplY3RzLgogICAgaWYgKGEuX2NoYWluKSBhID0gYS5fd3JhcHBlZDsKICAgIGlmIChiLl9jaGFpbikgYiA9IGIuX3dyYXBwZWQ7CiAgICAvLyBPbmUgb2YgdGhlbSBpbXBsZW1lbnRzIGFuIGlzRXF1YWwoKT8KICAgIGlmIChhLmlzRXF1YWwpIHJldHVybiBhLmlzRXF1YWwoYik7CiAgICBpZiAoYi5pc0VxdWFsKSByZXR1cm4gYi5pc0VxdWFsKGEpOwogICAgLy8gQ2hlY2sgZGF0ZXMnIGludGVnZXIgdmFsdWVzLgogICAgaWYgKF8uaXNEYXRlKGEpICYmIF8uaXNEYXRlKGIpKSByZXR1cm4gYS5nZXRUaW1lKCkgPT09IGIuZ2V0VGltZSgpOwogICAgLy8gQm90aCBhcmUgTmFOPwogICAgaWYgKF8uaXNOYU4oYSkgJiYgXy5pc05hTihiKSkgcmV0dXJuIGZhbHNlOwogICAgLy8gQ29tcGFyZSByZWd1bGFyIGV4cHJlc3Npb25zLgogICAgaWYgKF8uaXNSZWdFeHAoYSkgJiYgXy5pc1JlZ0V4cChiKSkKICAgICAgcmV0dXJuIGEuc291cmNlICAgICA9PT0gYi5zb3VyY2UgJiYKICAgICAgICAgICAgIGEuZ2xvYmFsICAgICA9PT0gYi5nbG9iYWwgJiYKICAgICAgICAgICAgIGEuaWdub3JlQ2FzZSA9PT0gYi5pZ25vcmVDYXNlICYmCiAgICAgICAgICAgICBhLm11bHRpbGluZSAgPT09IGIubXVsdGlsaW5lOwogICAgLy8gSWYgYSBpcyBub3QgYW4gb2JqZWN0IGJ5IHRoaXMgcG9pbnQsIHdlIGNhbid0IGhhbmRsZSBpdC4KICAgIGlmIChhdHlwZSAhPT0gJ29iamVjdCcpIHJldHVybiBmYWxzZTsKICAgIC8vIENoZWNrIGZvciBkaWZmZXJlbnQgYXJyYXkgbGVuZ3RocyBiZWZvcmUgY29tcGFyaW5nIGNvbnRlbnRzLgogICAgaWYgKGEubGVuZ3RoICYmIChhLmxlbmd0aCAhPT0gYi5sZW5ndGgpKSByZXR1cm4gZmFsc2U7CiAgICAvLyBOb3RoaW5nIGVsc2Ugd29ya2VkLCBkZWVwIGNvbXBhcmUgdGhlIGNvbnRlbnRzLgogICAgdmFyIGFLZXlzID0gXy5rZXlzKGEpLCBiS2V5cyA9IF8ua2V5cyhiKTsKICAgIC8vIERpZmZlcmVudCBvYmplY3Qgc2l6ZXM/CiAgICBpZiAoYUtleXMubGVuZ3RoICE9IGJLZXlzLmxlbmd0aCkgcmV0dXJuIGZhbHNlOwogICAgLy8gUmVjdXJzaXZlIGNvbXBhcmlzb24gb2YgY29udGVudHMuCiAgICBmb3IgKHZhciBrZXkgaW4gYSkgaWYgKCEoa2V5IGluIGIpIHx8ICFfLmlzRXF1YWwoYVtrZXldLCBiW2tleV0pKSByZXR1cm4gZmFsc2U7CiAgICByZXR1cm4gdHJ1ZTsKICB9OwoKICAvLyBJcyBhIGdpdmVuIGFycmF5IG9yIG9iamVjdCBlbXB0eT8KICBfLmlzRW1wdHkgPSBmdW5jdGlvbihvYmopIHsKICAgIGlmIChfLmlzQXJyYXkob2JqKSB8fCBfLmlzU3RyaW5nKG9iaikpIHJldHVybiBvYmoubGVuZ3RoID09PSAwOwogICAgZm9yICh2YXIga2V5IGluIG9iaikgaWYgKGhhc093blByb3BlcnR5LmNhbGwob2JqLCBrZXkpKSByZXR1cm4gZmFsc2U7CiAgICByZXR1cm4gdHJ1ZTsKICB9OwoKICAvLyBJcyBhIGdpdmVuIHZhbHVlIGEgRE9NIGVsZW1lbnQ/CiAgXy5pc0VsZW1lbnQgPSBmdW5jdGlvbihvYmopIHsKICAgIHJldHVybiAhIShvYmogJiYgb2JqLm5vZGVUeXBlID09IDEpOwogIH07CgogIC8vIElzIGEgZ2l2ZW4gdmFsdWUgYW4gYXJyYXk/CiAgLy8gRGVsZWdhdGVzIHRvIEVDTUE1J3MgbmF0aXZlIEFycmF5LmlzQXJyYXkKICBfLmlzQXJyYXkgPSBuYXRpdmVJc0FycmF5IHx8IGZ1bmN0aW9uKG9iaikgewogICAgcmV0dXJuIHRvU3RyaW5nLmNhbGwob2JqKSA9PT0gJ1tvYmplY3QgQXJyYXldJzsKICB9OwoKICAvLyBJcyBhIGdpdmVuIHZhcmlhYmxlIGFuIG9iamVjdD8KICBfLmlzT2JqZWN0ID0gZnVuY3Rpb24ob2JqKSB7CiAgICByZXR1cm4gb2JqID09PSBPYmplY3Qob2JqKTsKICB9OwoKICAvLyBJcyBhIGdpdmVuIHZhcmlhYmxlIGFuIGFyZ3VtZW50cyBvYmplY3Q/CiAgXy5pc0FyZ3VtZW50cyA9IGZ1bmN0aW9uKG9iaikgewogICAgcmV0dXJuICEhKG9iaiAmJiBoYXNPd25Qcm9wZXJ0eS5jYWxsKG9iaiwgJ2NhbGxlZScpKTsKICB9OwoKICAvLyBJcyBhIGdpdmVuIHZhbHVlIGEgZnVuY3Rpb24/CiAgXy5pc0Z1bmN0aW9uID0gZnVuY3Rpb24ob2JqKSB7CiAgICByZXR1cm4gISEob2JqICYmIG9iai5jb25zdHJ1Y3RvciAmJiBvYmouY2FsbCAmJiBvYmouYXBwbHkpOwogIH07CgogIC8vIElzIGEgZ2l2ZW4gdmFsdWUgYSBzdHJpbmc/CiAgXy5pc1N0cmluZyA9IGZ1bmN0aW9uKG9iaikgewogICAgcmV0dXJuICEhKG9iaiA9PT0gJycgfHwgKG9iaiAmJiBvYmouY2hhckNvZGVBdCAmJiBvYmouc3Vic3RyKSk7CiAgfTsKCiAgLy8gSXMgYSBnaXZlbiB2YWx1ZSBhIG51bWJlcj8KICBfLmlzTnVtYmVyID0gZnVuY3Rpb24ob2JqKSB7CiAgICByZXR1cm4gISEob2JqID09PSAwIHx8IChvYmogJiYgb2JqLnRvRXhwb25lbnRpYWwgJiYgb2JqLnRvRml4ZWQpKTsKICB9OwoKICAvLyBJcyB0aGUgZ2l2ZW4gdmFsdWUgYE5hTmA/IGBOYU5gIGhhcHBlbnMgdG8gYmUgdGhlIG9ubHkgdmFsdWUgaW4gSmF2YVNjcmlwdAogIC8vIHRoYXQgZG9lcyBub3QgZXF1YWwgaXRzZWxmLgogIF8uaXNOYU4gPSBmdW5jdGlvbihvYmopIHsKICAgIHJldHVybiBvYmogIT09IG9iajsKICB9OwoKICAvLyBJcyBhIGdpdmVuIHZhbHVlIGEgYm9vbGVhbj8KICBfLmlzQm9vbGVhbiA9IGZ1bmN0aW9uKG9iaikgewogICAgcmV0dXJuIG9iaiA9PT0gdHJ1ZSB8fCBvYmogPT09IGZhbHNlOwogIH07CgogIC8vIElzIGEgZ2l2ZW4gdmFsdWUgYSBkYXRlPwogIF8uaXNEYXRlID0gZnVuY3Rpb24ob2JqKSB7CiAgICByZXR1cm4gISEob2JqICYmIG9iai5nZXRUaW1lem9uZU9mZnNldCAmJiBvYmouc2V0VVRDRnVsbFllYXIpOwogIH07CgogIC8vIElzIHRoZSBnaXZlbiB2YWx1ZSBhIHJlZ3VsYXIgZXhwcmVzc2lvbj8KICBfLmlzUmVnRXhwID0gZnVuY3Rpb24ob2JqKSB7CiAgICByZXR1cm4gISEob2JqICYmIG9iai50ZXN0ICYmIG9iai5leGVjICYmIChvYmouaWdub3JlQ2FzZSB8fCBvYmouaWdub3JlQ2FzZSA9PT0gZmFsc2UpKTsKICB9OwoKICAvLyBJcyBhIGdpdmVuIHZhbHVlIGVxdWFsIHRvIG51bGw/CiAgXy5pc051bGwgPSBmdW5jdGlvbihvYmopIHsKICAgIHJldHVybiBvYmogPT09IG51bGw7CiAgfTsKCiAgLy8gSXMgYSBnaXZlbiB2YXJpYWJsZSB1bmRlZmluZWQ/CiAgXy5pc1VuZGVmaW5lZCA9IGZ1bmN0aW9uKG9iaikgewogICAgcmV0dXJuIG9iaiA9PT0gdm9pZCAwOwogIH07CgogIC8vIFV0aWxpdHkgRnVuY3Rpb25zCiAgLy8gLS0tLS0tLS0tLS0tLS0tLS0KCiAgLy8gUnVuIFVuZGVyc2NvcmUuanMgaW4gKm5vQ29uZmxpY3QqIG1vZGUsIHJldHVybmluZyB0aGUgYF9gIHZhcmlhYmxlIHRvIGl0cwogIC8vIHByZXZpb3VzIG93bmVyLiBSZXR1cm5zIGEgcmVmZXJlbmNlIHRvIHRoZSBVbmRlcnNjb3JlIG9iamVjdC4KICBfLm5vQ29uZmxpY3QgPSBmdW5jdGlvbigpIHsKICAgIHJvb3QuXyA9IHByZXZpb3VzVW5kZXJzY29yZTsKICAgIHJldHVybiB0aGlzOwogIH07CgogIC8vIEtlZXAgdGhlIGlkZW50aXR5IGZ1bmN0aW9uIGFyb3VuZCBmb3IgZGVmYXVsdCBpdGVyYXRvcnMuCiAgXy5pZGVudGl0eSA9IGZ1bmN0aW9uKHZhbHVlKSB7CiAgICByZXR1cm4gdmFsdWU7CiAgfTsKCiAgLy8gUnVuIGEgZnVuY3Rpb24gKipuKiogdGltZXMuCiAgXy50aW1lcyA9IGZ1bmN0aW9uIChuLCBpdGVyYXRvciwgY29udGV4dCkgewogICAgZm9yICh2YXIgaSA9IDA7IGkgPCBuOyBpKyspIGl0ZXJhdG9yLmNhbGwoY29udGV4dCwgaSk7CiAgfTsKCiAgLy8gQWRkIHlvdXIgb3duIGN1c3RvbSBmdW5jdGlvbnMgdG8gdGhlIFVuZGVyc2NvcmUgb2JqZWN0LCBlbnN1cmluZyB0aGF0CiAgLy8gdGhleSdyZSBjb3JyZWN0bHkgYWRkZWQgdG8gdGhlIE9PUCB3cmFwcGVyIGFzIHdlbGwuCiAgXy5taXhpbiA9IGZ1bmN0aW9uKG9iaikgewogICAgZWFjaChfLmZ1bmN0aW9ucyhvYmopLCBmdW5jdGlvbihuYW1lKXsKICAgICAgYWRkVG9XcmFwcGVyKG5hbWUsIF9bbmFtZV0gPSBvYmpbbmFtZV0pOwogICAgfSk7CiAgfTsKCiAgLy8gR2VuZXJhdGUgYSB1bmlxdWUgaW50ZWdlciBpZCAodW5pcXVlIHdpdGhpbiB0aGUgZW50aXJlIGNsaWVudCBzZXNzaW9uKS4KICAvLyBVc2VmdWwgZm9yIHRlbXBvcmFyeSBET00gaWRzLgogIHZhciBpZENvdW50ZXIgPSAwOwogIF8udW5pcXVlSWQgPSBmdW5jdGlvbihwcmVmaXgpIHsKICAgIHZhciBpZCA9IGlkQ291bnRlcisrOwogICAgcmV0dXJuIHByZWZpeCA/IHByZWZpeCArIGlkIDogaWQ7CiAgfTsKCiAgLy8gQnkgZGVmYXVsdCwgVW5kZXJzY29yZSB1c2VzIEVSQi1zdHlsZSB0ZW1wbGF0ZSBkZWxpbWl0ZXJzLCBjaGFuZ2UgdGhlCiAgLy8gZm9sbG93aW5nIHRlbXBsYXRlIHNldHRpbmdzIHRvIHVzZSBhbHRlcm5hdGl2ZSBkZWxpbWl0ZXJzLgogIF8udGVtcGxhdGVTZXR0aW5ncyA9IHsKICAgIGV2YWx1YXRlICAgIDogLzwlKFtcc1xTXSs/KSU+L2csCiAgICBpbnRlcnBvbGF0ZSA6IC88JT0oW1xzXFNdKz8pJT4vZwogIH07CgogIC8vIEphdmFTY3JpcHQgbWljcm8tdGVtcGxhdGluZywgc2ltaWxhciB0byBKb2huIFJlc2lnJ3MgaW1wbGVtZW50YXRpb24uCiAgLy8gVW5kZXJzY29yZSB0ZW1wbGF0aW5nIGhhbmRsZXMgYXJiaXRyYXJ5IGRlbGltaXRlcnMsIHByZXNlcnZlcyB3aGl0ZXNwYWNlLAogIC8vIGFuZCBjb3JyZWN0bHkgZXNjYXBlcyBxdW90ZXMgd2l0aGluIGludGVycG9sYXRlZCBjb2RlLgogIF8udGVtcGxhdGUgPSBmdW5jdGlvbihzdHIsIGRhdGEpIHsKICAgIHZhciBjICA9IF8udGVtcGxhdGVTZXR0aW5nczsKICAgIHZhciB0bXBsID0gJ3ZhciBfX3A9W10scHJpbnQ9ZnVuY3Rpb24oKXtfX3AucHVzaC5hcHBseShfX3AsYXJndW1lbnRzKTt9OycgKwogICAgICAnd2l0aChvYmp8fHt9KXtfX3AucHVzaChcJycgKwogICAgICBzdHIucmVwbGFjZSgvXFwvZywgJ1xcXFwnKQogICAgICAgICAucmVwbGFjZSgvJy9nLCAiXFwnIikKICAgICAgICAgLnJlcGxhY2UoYy5pbnRlcnBvbGF0ZSwgZnVuY3Rpb24obWF0Y2gsIGNvZGUpIHsKICAgICAgICAgICByZXR1cm4gIicsIiArIGNvZGUucmVwbGFjZSgvXFwnL2csICInIikgKyAiLCciOwogICAgICAgICB9KQogICAgICAgICAucmVwbGFjZShjLmV2YWx1YXRlIHx8IG51bGwsIGZ1bmN0aW9uKG1hdGNoLCBjb2RlKSB7CiAgICAgICAgICAgcmV0dXJuICInKTsiICsgY29kZS5yZXBsYWNlKC9cXCcvZywgIiciKQogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAucmVwbGFjZSgvW1xyXG5cdF0vZywgJyAnKSArICJfX3AucHVzaCgnIjsKICAgICAgICAgfSkKICAgICAgICAgLnJlcGxhY2UoL1xyL2csICdcXHInKQogICAgICAgICAucmVwbGFjZSgvXG4vZywgJ1xcbicpCiAgICAgICAgIC5yZXBsYWNlKC9cdC9nLCAnXFx0JykKICAgICAgICAgKyAiJyk7fXJldHVybiBfX3Auam9pbignJyk7IjsKICAgIHZhciBmdW5jID0gbmV3IEZ1bmN0aW9uKCdvYmonLCB0bXBsKTsKICAgIHJldHVybiBkYXRhID8gZnVuYyhkYXRhKSA6IGZ1bmM7CiAgfTsKCiAgLy8gVGhlIE9PUCBXcmFwcGVyCiAgLy8gLS0tLS0tLS0tLS0tLS0tCgogIC8vIElmIFVuZGVyc2NvcmUgaXMgY2FsbGVkIGFzIGEgZnVuY3Rpb24sIGl0IHJldHVybnMgYSB3cmFwcGVkIG9iamVjdCB0aGF0CiAgLy8gY2FuIGJlIHVzZWQgT08tc3R5bGUuIFRoaXMgd3JhcHBlciBob2xkcyBhbHRlcmVkIHZlcnNpb25zIG9mIGFsbCB0aGUKICAvLyB1bmRlcnNjb3JlIGZ1bmN0aW9ucy4gV3JhcHBlZCBvYmplY3RzIG1heSBiZSBjaGFpbmVkLgogIHZhciB3cmFwcGVyID0gZnVuY3Rpb24ob2JqKSB7IHRoaXMuX3dyYXBwZWQgPSBvYmo7IH07CgogIC8vIEV4cG9zZSBgd3JhcHBlci5wcm90b3R5cGVgIGFzIGBfLnByb3RvdHlwZWAKICBfLnByb3RvdHlwZSA9IHdyYXBwZXIucHJvdG90eXBlOwoKICAvLyBIZWxwZXIgZnVuY3Rpb24gdG8gY29udGludWUgY2hhaW5pbmcgaW50ZXJtZWRpYXRlIHJlc3VsdHMuCiAgdmFyIHJlc3VsdCA9IGZ1bmN0aW9uKG9iaiwgY2hhaW4pIHsKICAgIHJldHVybiBjaGFpbiA/IF8ob2JqKS5jaGFpbigpIDogb2JqOwogIH07CgogIC8vIEEgbWV0aG9kIHRvIGVhc2lseSBhZGQgZnVuY3Rpb25zIHRvIHRoZSBPT1Agd3JhcHBlci4KICB2YXIgYWRkVG9XcmFwcGVyID0gZnVuY3Rpb24obmFtZSwgZnVuYykgewogICAgd3JhcHBlci5wcm90b3R5cGVbbmFtZV0gPSBmdW5jdGlvbigpIHsKICAgICAgdmFyIGFyZ3MgPSBzbGljZS5jYWxsKGFyZ3VtZW50cyk7CiAgICAgIHVuc2hpZnQuY2FsbChhcmdzLCB0aGlzLl93cmFwcGVkKTsKICAgICAgcmV0dXJuIHJlc3VsdChmdW5jLmFwcGx5KF8sIGFyZ3MpLCB0aGlzLl9jaGFpbik7CiAgICB9OwogIH07CgogIC8vIEFkZCBhbGwgb2YgdGhlIFVuZGVyc2NvcmUgZnVuY3Rpb25zIHRvIHRoZSB3cmFwcGVyIG9iamVjdC4KICBfLm1peGluKF8pOwoKICAvLyBBZGQgYWxsIG11dGF0b3IgQXJyYXkgZnVuY3Rpb25zIHRvIHRoZSB3cmFwcGVyLgogIGVhY2goWydwb3AnLCAncHVzaCcsICdyZXZlcnNlJywgJ3NoaWZ0JywgJ3NvcnQnLCAnc3BsaWNlJywgJ3Vuc2hpZnQnXSwgZnVuY3Rpb24obmFtZSkgewogICAgdmFyIG1ldGhvZCA9IEFycmF5UHJvdG9bbmFtZV07CiAgICB3cmFwcGVyLnByb3RvdHlwZVtuYW1lXSA9IGZ1bmN0aW9uKCkgewogICAgICBtZXRob2QuYXBwbHkodGhpcy5fd3JhcHBlZCwgYXJndW1lbnRzKTsKICAgICAgcmV0dXJuIHJlc3VsdCh0aGlzLl93cmFwcGVkLCB0aGlzLl9jaGFpbik7CiAgICB9OwogIH0pOwoKICAvLyBBZGQgYWxsIGFjY2Vzc29yIEFycmF5IGZ1bmN0aW9ucyB0byB0aGUgd3JhcHBlci4KICBlYWNoKFsnY29uY2F0JywgJ2pvaW4nLCAnc2xpY2UnXSwgZnVuY3Rpb24obmFtZSkgewogICAgdmFyIG1ldGhvZCA9IEFycmF5UHJvdG9bbmFtZV07CiAgICB3cmFwcGVyLnByb3RvdHlwZVtuYW1lXSA9IGZ1bmN0aW9uKCkgewogICAgICByZXR1cm4gcmVzdWx0KG1ldGhvZC5hcHBseSh0aGlzLl93cmFwcGVkLCBhcmd1bWVudHMpLCB0aGlzLl9jaGFpbik7CiAgICB9OwogIH0pOwoKICAvLyBTdGFydCBjaGFpbmluZyBhIHdyYXBwZWQgVW5kZXJzY29yZSBvYmplY3QuCiAgd3JhcHBlci5wcm90b3R5cGUuY2hhaW4gPSBmdW5jdGlvbigpIHsKICAgIHRoaXMuX2NoYWluID0gdHJ1ZTsKICAgIHJldHVybiB0aGlzOwogIH07CgogIC8vIEV4dHJhY3RzIHRoZSByZXN1bHQgZnJvbSBhIHdyYXBwZWQgYW5kIGNoYWluZWQgb2JqZWN0LgogIHdyYXBwZXIucHJvdG90eXBlLnZhbHVlID0gZnVuY3Rpb24oKSB7CiAgICByZXR1cm4gdGhpcy5fd3JhcHBlZDsKICB9OwoKfSkoKTsK", "content_type": "application/javascript"}, "google-spreadsheet-javascript/README.markdown": {"data": "R29vZ2xlLVNwcmVhZHNoZWV0LUphdmFzY3JpcHQKPT09PT09PT09PT09PT09PT09PT09PT09PT09PT0KClRoaXMgaXMgYSBzaW1wbGUganF1ZXJ5IHBsdWdpbiBzb3J0IG9mIHRoaW5neSB0aGF0IGFsbG93cyBqYXZhc2NyaXB0IGFwcGxpY2F0aW9ucyB0byBwdWxsIGRhdGEgZnJvbSBnb29nbGUgc3ByZWFkc2hlZXRzLgoKClNlZSBbc2FtcGxlLmh0bWxdKGh0dHBzOi8vZ2l0aHViLmNvbS9taWtleW1ja2F5L2dvb2dsZS1zcHJlYWRzaGVldC1qYXZhc2NyaXB0L2Jsb2IvbWFzdGVyL3NhbXBsZS5odG1sKSBmb3IgdGhlIG1vc3QgYmFzaWMgdXNhZ2UgKFtTZWUgaXQgaW4gYWN0aW9uIGhlcmVdKGh0dHA6Ly9taWtleW1ja2F5LmdpdGh1Yi5jb20vZ29vZ2xlLXNwcmVhZHNoZWV0LWphdmFzY3JpcHQvc2FtcGxlLmh0bWwpKS4KTG9vayBhdCB0aGUgW3F1bml0IHRlc3RzXShodHRwczovL2dpdGh1Yi5jb20vbWlrZXltY2theS9nb29nbGUtc3ByZWFkc2hlZXQtamF2YXNjcmlwdC9ibG9iL21hc3Rlci90ZXN0cykgdG8gc2VlIGFsbCBvZiB0aGUgdGhpbmdzIHRoYXQgdGhlIGxpYnJhcnkgY2FuIGRvLgoKClRPRE86CgoqIFVzZSBnb29nbGUgZm9ybXMgZm9yIHNhdmluZyBkYXRhCiogSW1wcm92ZSBjb252ZW50aW9ucyBmb3Igc2V0dGluZy9nZXR0aW5nIHByb3BlcnRpZXMKCk5PVEVTOgoKSSB3cm90ZSB0aGlzIGluIGNvZmZlZXNjcmlwdCwgc28gSSBoYXZlIGluY2x1ZGVkIHRoZSBvcmlnaW5hbCBjb2ZmZWUgc291cmNlIGZpbGVzLCBidXQgeW91IG9ubHkgbmVlZCB0aGUgamF2YXNjcmlwdCBmaWxlcyB0byB1c2UgaXQuCgo=", "content_type": ""}, "tests/testData/Assessment.TEST EGRA Prototype.Letters": {"data": "ewogICJwYWdlVHlwZSI6ICJMZXR0ZXJzUGFnZSIsCiAgInBhZ2VJZCI6ICJMZXR0ZXJzIiwKICAibGV0dGVycyI6IFsKICAgICLlvaIiLAogICAgImYiLAogICAgItirIiwKICAgICJ0IiwKICAgICLZgeKAjiIsCiAgICAiUSIsCiAgICAicyIsCiAgICAiZSIsCiAgICAidyIsCiAgICAidCIsCiAgICAiWSIsCiAgICAiUCIsCiAgICAiaCIsCiAgICAiYSIsCiAgICAidyIsCiAgICAiVyIsCiAgICAiZSIsCiAgICAiZiIsCiAgICAiVCIsCiAgICAiRyIsCiAgICAiaCIsCiAgICAiUSIsCiAgICAicyIsCiAgICAiZSIsCiAgICAidyIsCiAgICAidCIsCiAgICAiWSIsCiAgICAiUCIsCiAgICAiaCIsCiAgICAiYSIsCiAgICAidyIsCiAgICAiVyIsCiAgICAiZSIsCiAgICAiZiIsCiAgICAiVCIsCiAgICAiRyIsCiAgICAiaCIsCiAgICAiUSIsCiAgICAicyIsCiAgICAiZSIsCiAgICAidyIsCiAgICAidCIsCiAgICAiWSIsCiAgICAiUCIsCiAgICAiaCIsCiAgICAiYSIsCiAgICAidyIsCiAgICAiVyIsCiAgICAiUSIsCiAgICAicyIsCiAgICAiZSIsCiAgICAidyIsCiAgICAidCIsCiAgICAiWSIsCiAgICAiUCIsCiAgICAiaCIsCiAgICAiYSIsCiAgICAidyIsCiAgICAiVyIsCiAgICAiZSIsCiAgICAiZiIsCiAgICAiVCIsCiAgICAiRyIsCiAgICAiaCIsCiAgICAiUSIsCiAgICAicyIsCiAgICAiZSIsCiAgICAi2KsiLAogICAgInQiLAogICAgItmB4oCOIiwKICAgICJQIiwKICAgICJoIiwKICAgICJhIiwKICAgICJ3IiwKICAgICJXIiwKICAgICJRIiwKICAgICLigI7lvaIiLAogICAgImUiLAogICAgInciLAogICAgInQiLAogICAgIlkiLAogICAgIlAiLAogICAgImgiLAogICAgImEiLAogICAgInciLAogICAgIlciLAogICAgImUiLAogICAgImYiLAogICAgIlQiLAogICAgIkciLAogICAgImgiLAogICAgIlEiLAogICAgInMiLAogICAgImUiLAogICAgInciLAogICAgInQiLAogICAgIlkiLAogICAgIlAiLAogICAgIlMiLAogICAgImUiCiAgXQp9Cg==", "content_type": ""}, "egra.coffee": {"data": "", "content_type": ""}, "google-spreadsheet-javascript/tests/qunit.js": {"data": "", "content_type": "application/javascript"}, "js-libraries/coffee-script.js": {"data": "LyoqCiAqIENvZmZlZVNjcmlwdCBDb21waWxlciB2MS4xLjEKICogaHR0cDovL2NvZmZlZXNjcmlwdC5vcmcKICoKICogQ29weXJpZ2h0IDIwMTEsIEplcmVteSBBc2hrZW5hcwogKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIExpY2Vuc2UKICovCnRoaXMuQ29mZmVlU2NyaXB0PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gcmVxdWlyZShhKXtyZXR1cm4gcmVxdWlyZVthXX1yZXF1aXJlWyIuL2hlbHBlcnMiXT1uZXcgZnVuY3Rpb24oKXt2YXIgYT10aGlzOyhmdW5jdGlvbigpe3ZhciBiLGM7YS5zdGFydHM9ZnVuY3Rpb24oYSxiLGMpe3JldHVybiBiPT09YS5zdWJzdHIoYyxiLmxlbmd0aCl9LGEuZW5kcz1mdW5jdGlvbihhLGIsYyl7dmFyIGQ7ZD1iLmxlbmd0aDtyZXR1cm4gYj09PWEuc3Vic3RyKGEubGVuZ3RoLWQtKGN8fDApLGQpfSxhLmNvbXBhY3Q9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7ZT1bXTtmb3IoYz0wLGQ9YS5sZW5ndGg7YzxkO2MrKyliPWFbY10sYiYmZS5wdXNoKGIpO3JldHVybiBlfSxhLmNvdW50PWZ1bmN0aW9uKGEsYil7dmFyIGMsZDtjPWQ9MDtpZighYi5sZW5ndGgpcmV0dXJuIDEvMDt3aGlsZShkPTErYS5pbmRleE9mKGIsZCkpYysrO3JldHVybiBjfSxhLm1lcmdlPWZ1bmN0aW9uKGEsYyl7cmV0dXJuIGIoYih7fSxhKSxjKX0sYj1hLmV4dGVuZD1mdW5jdGlvbihhLGIpe3ZhciBjLGQ7Zm9yKGMgaW4gYilkPWJbY10sYVtjXT1kO3JldHVybiBhfSxhLmZsYXR0ZW49Yz1mdW5jdGlvbihhKXt2YXIgYixkLGUsZjtkPVtdO2ZvcihlPTAsZj1hLmxlbmd0aDtlPGY7ZSsrKWI9YVtlXSxiIGluc3RhbmNlb2YgQXJyYXk/ZD1kLmNvbmNhdChjKGIpKTpkLnB1c2goYik7cmV0dXJuIGR9LGEuZGVsPWZ1bmN0aW9uKGEsYil7dmFyIGM7Yz1hW2JdLGRlbGV0ZSBhW2JdO3JldHVybiBjfSxhLmxhc3Q9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gYVthLmxlbmd0aC0oYnx8MCktMV19fSkuY2FsbCh0aGlzKX0scmVxdWlyZVsiLi9yZXdyaXRlciJdPW5ldyBmdW5jdGlvbigpe3ZhciBhPXRoaXM7KGZ1bmN0aW9uKCl7dmFyIGIsYyxkLGUsZixnLGgsaSxqLGssbCxtLG4sbyxwLHEscixzLHQ9QXJyYXkucHJvdG90eXBlLmluZGV4T2Z8fGZ1bmN0aW9uKGEpe2Zvcih2YXIgYj0wLGM9dGhpcy5sZW5ndGg7YjxjO2IrKylpZih0aGlzW2JdPT09YSlyZXR1cm4gYjtyZXR1cm4tMX0sdT1BcnJheS5wcm90b3R5cGUuc2xpY2U7YS5SZXdyaXRlcj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoKXt9YS5wcm90b3R5cGUucmV3cml0ZT1mdW5jdGlvbihhKXt0aGlzLnRva2Vucz1hLHRoaXMucmVtb3ZlTGVhZGluZ05ld2xpbmVzKCksdGhpcy5yZW1vdmVNaWRFeHByZXNzaW9uTmV3bGluZXMoKSx0aGlzLmNsb3NlT3BlbkNhbGxzKCksdGhpcy5jbG9zZU9wZW5JbmRleGVzKCksdGhpcy5hZGRJbXBsaWNpdEluZGVudGF0aW9uKCksdGhpcy50YWdQb3N0Zml4Q29uZGl0aW9uYWxzKCksdGhpcy5hZGRJbXBsaWNpdEJyYWNlcygpLHRoaXMuYWRkSW1wbGljaXRQYXJlbnRoZXNlcygpLHRoaXMuZW5zdXJlQmFsYW5jZShiKSx0aGlzLnJld3JpdGVDbG9zaW5nUGFyZW5zKCk7cmV0dXJuIHRoaXMudG9rZW5zfSxhLnByb3RvdHlwZS5zY2FuVG9rZW5zPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZDtkPXRoaXMudG9rZW5zLGI9MDt3aGlsZShjPWRbYl0pYis9YS5jYWxsKHRoaXMsYyxiLGQpO3JldHVybiEwfSxhLnByb3RvdHlwZS5kZXRlY3RFbmQ9ZnVuY3Rpb24oYSxiLGMpe3ZhciBmLGcsaCxpLGo7aD10aGlzLnRva2VucyxmPTA7d2hpbGUoZz1oW2FdKXtpZihmPT09MCYmYi5jYWxsKHRoaXMsZyxhKSlyZXR1cm4gYy5jYWxsKHRoaXMsZyxhKTtpZighZ3x8ZjwwKXJldHVybiBjLmNhbGwodGhpcyxnLGEtMSk7aWYoaT1nWzBdLHQuY2FsbChlLGkpPj0wKWYrPTE7ZWxzZSBpZihqPWdbMF0sdC5jYWxsKGQsaik+PTApZi09MTthKz0xfXJldHVybiBhLTF9LGEucHJvdG90eXBlLnJlbW92ZUxlYWRpbmdOZXdsaW5lcz1mdW5jdGlvbigpe3ZhciBhLGIsYyxkO2Q9dGhpcy50b2tlbnM7Zm9yKGE9MCxjPWQubGVuZ3RoO2E8YzthKyspe2I9ZFthXVswXTtpZihiIT09IlRFUk1JTkFUT1IiKWJyZWFrfWlmKGEpcmV0dXJuIHRoaXMudG9rZW5zLnNwbGljZSgwLGEpfSxhLnByb3RvdHlwZS5yZW1vdmVNaWRFeHByZXNzaW9uTmV3bGluZXM9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zY2FuVG9rZW5zKGZ1bmN0aW9uKGEsYixkKXt2YXIgZTtpZighKGFbMF09PT0iVEVSTUlOQVRPUiImJihlPXRoaXMudGFnKGIrMSksdC5jYWxsKGMsZSk+PTApKSlyZXR1cm4gMTtkLnNwbGljZShiLDEpO3JldHVybiAwfSl9LGEucHJvdG90eXBlLmNsb3NlT3BlbkNhbGxzPWZ1bmN0aW9uKCl7dmFyIGEsYjtiPWZ1bmN0aW9uKGEsYil7dmFyIGM7cmV0dXJuKGM9YVswXSk9PT0iKSJ8fGM9PT0iQ0FMTF9FTkQifHxhWzBdPT09Ik9VVERFTlQiJiZ0aGlzLnRhZyhiLTEpPT09IikifSxhPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMudG9rZW5zW2FbMF09PT0iT1VUREVOVCI/Yi0xOmJdWzBdPSJDQUxMX0VORCJ9O3JldHVybiB0aGlzLnNjYW5Ub2tlbnMoZnVuY3Rpb24oYyxkKXtjWzBdPT09IkNBTExfU1RBUlQiJiZ0aGlzLmRldGVjdEVuZChkKzEsYixhKTtyZXR1cm4gMX0pfSxhLnByb3RvdHlwZS5jbG9zZU9wZW5JbmRleGVzPWZ1bmN0aW9uKCl7dmFyIGEsYjtiPWZ1bmN0aW9uKGEsYil7dmFyIGM7cmV0dXJuKGM9YVswXSk9PT0iXSJ8fGM9PT0iSU5ERVhfRU5EIn0sYT1mdW5jdGlvbihhLGIpe3JldHVybiBhWzBdPSJJTkRFWF9FTkQifTtyZXR1cm4gdGhpcy5zY2FuVG9rZW5zKGZ1bmN0aW9uKGMsZCl7Y1swXT09PSJJTkRFWF9TVEFSVCImJnRoaXMuZGV0ZWN0RW5kKGQrMSxiLGEpO3JldHVybiAxfSl9LGEucHJvdG90eXBlLmFkZEltcGxpY2l0QnJhY2VzPWZ1bmN0aW9uKCl7dmFyIGEsYixjLGYsZztjPVtdLGY9bnVsbCxnPTAsYj1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGcsaDtnPXRoaXMudG9rZW5zLnNsaWNlKGIrMSxiKzMrMXx8OWU5KSxjPWdbMF0sZj1nWzFdLGU9Z1syXTtpZigiSEVSRUNPTU1FTlQiPT09KGMhPW51bGw/Y1swXTp2b2lkIDApKXJldHVybiExO2Q9YVswXTtyZXR1cm4oZD09PSJURVJNSU5BVE9SInx8ZD09PSJPVVRERU5UIikmJihmIT1udWxsP2ZbMF06dm9pZCAwKSE9PSI6IiYmKChjIT1udWxsP2NbMF06dm9pZCAwKSE9PSJAInx8KGUhPW51bGw/ZVswXTp2b2lkIDApIT09IjoiKXx8ZD09PSIsIiYmYyYmKGg9Y1swXSkhPT0iSURFTlRJRklFUiImJmghPT0iTlVNQkVSIiYmaCE9PSJTVFJJTkciJiZoIT09IkAiJiZoIT09IlRFUk1JTkFUT1IiJiZoIT09Ik9VVERFTlQifSxhPWZ1bmN0aW9uKGEsYil7dmFyIGM7Yz1bIn0iLCJ9IixhWzJdXSxjLmdlbmVyYXRlZD0hMDtyZXR1cm4gdGhpcy50b2tlbnMuc3BsaWNlKGIsMCxjKX07cmV0dXJuIHRoaXMuc2NhblRva2VucyhmdW5jdGlvbihnLGgsaSl7dmFyIGosayxsLG0sbixvLHA7aWYobz1sPWdbMF0sdC5jYWxsKGUsbyk+PTApe2MucHVzaChbbD09PSJJTkRFTlQiJiZ0aGlzLnRhZyhoLTEpPT09InsiPyJ7IjpsLGhdKTtyZXR1cm4gMX1pZih0LmNhbGwoZCxsKT49MCl7Zj1jLnBvcCgpO3JldHVybiAxfWlmKGwhPT0iOiJ8fChqPXRoaXMudGFnKGgtMikpIT09IjoiJiYoKHA9Y1tjLmxlbmd0aC0xXSkhPW51bGw/cFswXTp2b2lkIDApPT09InsiKXJldHVybiAxO2MucHVzaChbInsiXSksaz1qPT09IkAiP2gtMjpoLTE7d2hpbGUodGhpcy50YWcoay0yKT09PSJIRVJFQ09NTUVOVCIpay09MjtuPW5ldyBTdHJpbmcoInsiKSxuLmdlbmVyYXRlZD0hMCxtPVsieyIsbixnWzJdXSxtLmdlbmVyYXRlZD0hMCxpLnNwbGljZShrLDAsbSksdGhpcy5kZXRlY3RFbmQoaCsyLGIsYSk7cmV0dXJuIDJ9KX0sYS5wcm90b3R5cGUuYWRkSW1wbGljaXRQYXJlbnRoZXNlcz1mdW5jdGlvbigpe3ZhciBhLGI7Yj0hMSxhPWZ1bmN0aW9uKGEsYil7dmFyIGM7Yz1hWzBdPT09Ik9VVERFTlQiP2IrMTpiO3JldHVybiB0aGlzLnRva2Vucy5zcGxpY2UoYywwLFsiQ0FMTF9FTkQiLCIpIixhWzJdXSl9O3JldHVybiB0aGlzLnNjYW5Ub2tlbnMoZnVuY3Rpb24oYyxkLGUpe3ZhciBrLG0sbixvLHAscSxyLHMsdTtxPWNbMF07aWYocT09PSJDTEFTUyJ8fHE9PT0iSUYiKWI9ITA7cj1lLnNsaWNlKGQtMSxkKzErMXx8OWU5KSxvPXJbMF0sbT1yWzFdLG49clsyXSxrPSFiJiZxPT09IklOREVOVCImJm4mJm4uZ2VuZXJhdGVkJiZuWzBdPT09InsiJiZvJiYocz1vWzBdLHQuY2FsbChpLHMpPj0wKSxwPSExLHQuY2FsbChsLHEpPj0wJiYoYj0hMSksbyYmIW8uc3BhY2VkJiZxPT09Ij8iJiYoYy5jYWxsPSEwKTtpZihjLmZyb21UaGVuKXJldHVybiAxO2lmKCEoa3x8KG8hPW51bGw/by5zcGFjZWQ6dm9pZCAwKSYmKG8uY2FsbHx8KHU9b1swXSx0LmNhbGwoaSx1KT49MCkpJiYodC5jYWxsKGcscSk+PTB8fCFjLnNwYWNlZCYmIWMubmV3TGluZSYmdC5jYWxsKGoscSk+PTApKSlyZXR1cm4gMTtlLnNwbGljZShkLDAsWyJDQUxMX1NUQVJUIiwiKCIsY1syXV0pLHRoaXMuZGV0ZWN0RW5kKGQrMSxmdW5jdGlvbihhLGIpe3ZhciBjLGQ7cT1hWzBdO2lmKCFwJiZhLmZyb21UaGVuKXJldHVybiEwO2lmKHE9PT0iSUYifHxxPT09IkVMU0UifHxxPT09Ii0+Inx8cT09PSI9PiIpcD0hMDtpZigocT09PSIuInx8cT09PSI/LiJ8fHE9PT0iOjoiKSYmdGhpcy50YWcoYi0xKT09PSJPVVRERU5UIilyZXR1cm4hMDtyZXR1cm4hYS5nZW5lcmF0ZWQmJnRoaXMudGFnKGItMSkhPT0iLCImJnQuY2FsbChoLHEpPj0wJiYocSE9PSJJTkRFTlQifHx0aGlzLnRhZyhiLTIpIT09IkNMQVNTIiYmKGQ9dGhpcy50YWcoYi0xKSx0LmNhbGwoZixkKTwwKSYmKCEoYz10aGlzLnRva2Vuc1tiKzFdKXx8IWMuZ2VuZXJhdGVkfHxjWzBdIT09InsiKSl9LGEpLG9bMF09PT0iPyImJihvWzBdPSJGVU5DX0VYSVNUIik7cmV0dXJuIDJ9KX0sYS5wcm90b3R5cGUuYWRkSW1wbGljaXRJbmRlbnRhdGlvbj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnNjYW5Ub2tlbnMoZnVuY3Rpb24oYSxiLGMpe3ZhciBkLGUsZixnLGgsaSxqLGs7aT1hWzBdO2lmKGk9PT0iVEVSTUlOQVRPUiImJnRoaXMudGFnKGIrMSk9PT0iVEhFTiIpe2Muc3BsaWNlKGIsMSk7cmV0dXJuIDB9aWYoaT09PSJFTFNFIiYmdGhpcy50YWcoYi0xKSE9PSJPVVRERU5UIil7Yy5zcGxpY2UuYXBwbHkoYyxbYiwwXS5jb25jYXQodS5jYWxsKHRoaXMuaW5kZW50YXRpb24oYSkpKSk7cmV0dXJuIDJ9aWYoaT09PSJDQVRDSCImJigoaj10aGlzLnRhZyhiKzIpKT09PSJPVVRERU5UInx8aj09PSJURVJNSU5BVE9SInx8aj09PSJGSU5BTExZIikpe2Muc3BsaWNlLmFwcGx5KGMsW2IrMiwwXS5jb25jYXQodS5jYWxsKHRoaXMuaW5kZW50YXRpb24oYSkpKSk7cmV0dXJuIDR9aWYodC5jYWxsKG4saSk+PTAmJnRoaXMudGFnKGIrMSkhPT0iSU5ERU5UIiYmKGkhPT0iRUxTRSJ8fHRoaXMudGFnKGIrMSkhPT0iSUYiKSl7aD1pLGs9dGhpcy5pbmRlbnRhdGlvbihhKSxmPWtbMF0sZz1rWzFdLGg9PT0iVEhFTiImJihmLmZyb21UaGVuPSEwKSxmLmdlbmVyYXRlZD1nLmdlbmVyYXRlZD0hMCxjLnNwbGljZShiKzEsMCxmKSxlPWZ1bmN0aW9uKGEsYil7dmFyIGM7cmV0dXJuIGFbMV0hPT0iOyImJihjPWFbMF0sdC5jYWxsKG0sYyk+PTApJiYoYVswXSE9PSJFTFNFInx8aD09PSJJRiJ8fGg9PT0iVEhFTiIpfSxkPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHRoaXMudG9rZW5zLnNwbGljZSh0aGlzLnRhZyhiLTEpPT09IiwiP2ItMTpiLDAsZyl9LHRoaXMuZGV0ZWN0RW5kKGIrMixlLGQpLGk9PT0iVEhFTiImJmMuc3BsaWNlKGIsMSk7cmV0dXJuIDF9cmV0dXJuIDF9KX0sYS5wcm90b3R5cGUudGFnUG9zdGZpeENvbmRpdGlvbmFscz1mdW5jdGlvbigpe3ZhciBhO2E9ZnVuY3Rpb24oYSxiKXt2YXIgYztyZXR1cm4oYz1hWzBdKT09PSJURVJNSU5BVE9SInx8Yz09PSJJTkRFTlQifTtyZXR1cm4gdGhpcy5zY2FuVG9rZW5zKGZ1bmN0aW9uKGIsYyl7dmFyIGQ7aWYoYlswXSE9PSJJRiIpcmV0dXJuIDE7ZD1iLHRoaXMuZGV0ZWN0RW5kKGMrMSxhLGZ1bmN0aW9uKGEsYil7aWYoYVswXSE9PSJJTkRFTlQiKXJldHVybiBkWzBdPSJQT1NUXyIrZFswXX0pO3JldHVybiAxfSl9LGEucHJvdG90eXBlLmVuc3VyZUJhbGFuY2U9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGgsaSxqLGssbCxtLG47ZD17fSxmPXt9LG09dGhpcy50b2tlbnM7Zm9yKGk9MCxrPW0ubGVuZ3RoO2k8aztpKyspe2g9bVtpXSxnPWhbMF07Zm9yKGo9MCxsPWEubGVuZ3RoO2o8bDtqKyspe249YVtqXSxlPW5bMF0sYj1uWzFdLGRbZV18PTA7aWYoZz09PWUpZFtlXSsrPT09MCYmKGZbZV09aFsyXSk7ZWxzZSBpZihnPT09YiYmLS1kW2VdPDApdGhyb3cgRXJyb3IoInRvbyBtYW55ICIraFsxXSsiIG9uIGxpbmUgIisoaFsyXSsxKSl9fWZvcihlIGluIGQpe2M9ZFtlXTtpZihjPjApdGhyb3cgRXJyb3IoInVuY2xvc2VkICIrZSsiIG9uIGxpbmUgIisoZltlXSsxKSl9cmV0dXJuIHRoaXN9LGEucHJvdG90eXBlLnJld3JpdGVDbG9zaW5nUGFyZW5zPWZ1bmN0aW9uKCl7dmFyIGEsYixjO2M9W10sYT17fTtmb3IoYiBpbiBrKWFbYl09MDtyZXR1cm4gdGhpcy5zY2FuVG9rZW5zKGZ1bmN0aW9uKGIsZixnKXt2YXIgaCxpLGosbCxtLG4sbztpZihvPW09YlswXSx0LmNhbGwoZSxvKT49MCl7Yy5wdXNoKGIpO3JldHVybiAxfWlmKHQuY2FsbChkLG0pPDApcmV0dXJuIDE7aWYoYVtoPWtbbV1dPjApe2FbaF0tPTEsZy5zcGxpY2UoZiwxKTtyZXR1cm4gMH1pPWMucG9wKCksaj1pWzBdLGw9a1tqXTtpZihtPT09bClyZXR1cm4gMTthW2pdKz0xLG49W2wsaj09PSJJTkRFTlQiP2lbMV06bF0sdGhpcy50YWcoZisyKT09PWo/KGcuc3BsaWNlKGYrMywwLG4pLGMucHVzaChpKSk6Zy5zcGxpY2UoZiwwLG4pO3JldHVybiAxfSl9LGEucHJvdG90eXBlLmluZGVudGF0aW9uPWZ1bmN0aW9uKGEpe3JldHVybltbIklOREVOVCIsMixhWzJdXSxbIk9VVERFTlQiLDIsYVsyXV1dfSxhLnByb3RvdHlwZS50YWc9ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuKGI9dGhpcy50b2tlbnNbYV0pIT1udWxsP2JbMF06dm9pZCAwfTtyZXR1cm4gYX0oKSxiPVtbIigiLCIpIl0sWyJbIiwiXSJdLFsieyIsIn0iXSxbIklOREVOVCIsIk9VVERFTlQiXSxbIkNBTExfU1RBUlQiLCJDQUxMX0VORCJdLFsiUEFSQU1fU1RBUlQiLCJQQVJBTV9FTkQiXSxbIklOREVYX1NUQVJUIiwiSU5ERVhfRU5EIl1dLGs9e30sZT1bXSxkPVtdO2ZvcihxPTAscj1iLmxlbmd0aDtxPHI7cSsrKXM9YltxXSxvPXNbMF0scD1zWzFdLGUucHVzaChrW3BdPW8pLGQucHVzaChrW29dPXApO2M9WyJDQVRDSCIsIldIRU4iLCJFTFNFIiwiRklOQUxMWSJdLmNvbmNhdChkKSxpPVsiSURFTlRJRklFUiIsIlNVUEVSIiwiKSIsIkNBTExfRU5EIiwiXSIsIklOREVYX0VORCIsIkAiLCJUSElTIl0sZz1bIklERU5USUZJRVIiLCJOVU1CRVIiLCJTVFJJTkciLCJKUyIsIlJFR0VYIiwiTkVXIiwiUEFSQU1fU1RBUlQiLCJDTEFTUyIsIklGIiwiVFJZIiwiU1dJVENIIiwiVEhJUyIsIkJPT0wiLCJVTkFSWSIsIlNVUEVSIiwiQCIsIi0+IiwiPT4iLCJbIiwiKCIsInsiLCItLSIsIisrIl0saj1bIisiLCItIl0sZj1bIi0+IiwiPT4iLCJ7IiwiWyIsIiwiXSxoPVsiUE9TVF9JRiIsIkZPUiIsIldISUxFIiwiVU5USUwiLCJXSEVOIiwiQlkiLCJMT09QIiwiVEVSTUlOQVRPUiIsIklOREVOVCJdLG49WyJFTFNFIiwiLT4iLCI9PiIsIlRSWSIsIkZJTkFMTFkiLCJUSEVOIl0sbT1bIlRFUk1JTkFUT1IiLCJDQVRDSCIsIkZJTkFMTFkiLCJFTFNFIiwiT1VUREVOVCIsIkxFQURJTkdfV0hFTiJdLGw9WyJURVJNSU5BVE9SIiwiSU5ERU5UIiwiT1VUREVOVCJdfSkuY2FsbCh0aGlzKX0scmVxdWlyZVsiLi9sZXhlciJdPW5ldyBmdW5jdGlvbigpe3ZhciBhPXRoaXM7KGZ1bmN0aW9uKCl7dmFyIGIsYyxkLGUsZixnLGgsaSxqLGssbCxtLG4sbyxwLHEscixzLHQsdSx2LHcseCx5LHosQSxCLEMsRCxFLEYsRyxILEksSixLLEwsTSxOLE8sUCxRLFIsUyxULFUsVixXPUFycmF5LnByb3RvdHlwZS5pbmRleE9mfHxmdW5jdGlvbihhKXtmb3IodmFyIGI9MCxjPXRoaXMubGVuZ3RoO2I8YztiKyspaWYodGhpc1tiXT09PWEpcmV0dXJuIGI7cmV0dXJuLTF9O0s9cmVxdWlyZSgiLi9yZXdyaXRlciIpLlJld3JpdGVyLFY9cmVxdWlyZSgiLi9oZWxwZXJzIiksUj1WLmNvdW50LFU9Vi5zdGFydHMsUT1WLmNvbXBhY3QsVD1WLmxhc3QsYS5MZXhlcj15PWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe31hLnByb3RvdHlwZS50b2tlbml6ZT1mdW5jdGlvbihhLGIpe3ZhciBjO2I9PW51bGwmJihiPXt9KSxQLnRlc3QoYSkmJihhPSJcbiIrYSksYT1hLnJlcGxhY2UoL1xyL2csIiIpLnJlcGxhY2UoTiwiIiksdGhpcy5jb2RlPWEsdGhpcy5saW5lPWIubGluZXx8MCx0aGlzLmluZGVudD0wLHRoaXMuaW5kZWJ0PTAsdGhpcy5vdXRkZWJ0PTAsdGhpcy5pbmRlbnRzPVtdLHRoaXMudG9rZW5zPVtdLGM9MDt3aGlsZSh0aGlzLmNodW5rPWEuc2xpY2UoYykpYys9dGhpcy5pZGVudGlmaWVyVG9rZW4oKXx8dGhpcy5jb21tZW50VG9rZW4oKXx8dGhpcy53aGl0ZXNwYWNlVG9rZW4oKXx8dGhpcy5saW5lVG9rZW4oKXx8dGhpcy5oZXJlZG9jVG9rZW4oKXx8dGhpcy5zdHJpbmdUb2tlbigpfHx0aGlzLm51bWJlclRva2VuKCl8fHRoaXMucmVnZXhUb2tlbigpfHx0aGlzLmpzVG9rZW4oKXx8dGhpcy5saXRlcmFsVG9rZW4oKTt0aGlzLmNsb3NlSW5kZW50YXRpb24oKTtpZihiLnJld3JpdGU9PT0hMSlyZXR1cm4gdGhpcy50b2tlbnM7cmV0dXJuKG5ldyBLKS5yZXdyaXRlKHRoaXMudG9rZW5zKX0sYS5wcm90b3R5cGUuaWRlbnRpZmllclRva2VuPWZ1bmN0aW9uKCl7dmFyIGEsYixjLGQsZSxpLGosayxsO2lmKCEoZT1xLmV4ZWModGhpcy5jaHVuaykpKXJldHVybiAwO2Q9ZVswXSxjPWVbMV0sYT1lWzJdO2lmKGM9PT0ib3duIiYmdGhpcy50YWcoKT09PSJGT1IiKXt0aGlzLnRva2VuKCJPV04iLGMpO3JldHVybiBjLmxlbmd0aH1iPWF8fChpPVQodGhpcy50b2tlbnMpKSYmKChrPWlbMF0pPT09Ii4ifHxrPT09Ij8uInx8az09PSI6OiJ8fCFpLnNwYWNlZCYmaVswXT09PSJAIiksaj0iSURFTlRJRklFUiI7aWYoVy5jYWxsKHUsYyk+PTB8fCFiJiZXLmNhbGwoaCxjKT49MClqPWMudG9VcHBlckNhc2UoKSxqPT09IldIRU4iJiYobD10aGlzLnRhZygpLFcuY2FsbCh2LGwpPj0wKT9qPSJMRUFESU5HX1dIRU4iOmo9PT0iRk9SIj90aGlzLnNlZW5Gb3I9ITA6aj09PSJVTkxFU1MiP2o9IklGIjpXLmNhbGwoTyxqKT49MD9qPSJVTkFSWSI6Vy5jYWxsKEksaik+PTAmJihqIT09IklOU1RBTkNFT0YiJiZ0aGlzLnNlZW5Gb3I/KGo9IkZPUiIraix0aGlzLnNlZW5Gb3I9ITEpOihqPSJSRUxBVElPTiIsdGhpcy52YWx1ZSgpPT09IiEiJiYodGhpcy50b2tlbnMucG9wKCksYz0iISIrYykpKTtXLmNhbGwodCxjKT49MCYmKGI/KGo9IklERU5USUZJRVIiLGM9bmV3IFN0cmluZyhjKSxjLnJlc2VydmVkPSEwKTpXLmNhbGwoSixjKT49MCYmdGhpcy5pZGVudGlmaWVyRXJyb3IoYykpLGJ8fChXLmNhbGwoZixjKT49MCYmKGM9Z1tjXSksaj1mdW5jdGlvbigpe3N3aXRjaChjKXtjYXNlIiEiOnJldHVybiJVTkFSWSI7Y2FzZSI9PSI6Y2FzZSIhPSI6cmV0dXJuIkNPTVBBUkUiO2Nhc2UiJiYiOmNhc2UifHwiOnJldHVybiJMT0dJQyI7Y2FzZSJ0cnVlIjpjYXNlImZhbHNlIjpjYXNlIm51bGwiOmNhc2UidW5kZWZpbmVkIjpyZXR1cm4iQk9PTCI7Y2FzZSJicmVhayI6Y2FzZSJjb250aW51ZSI6Y2FzZSJkZWJ1Z2dlciI6cmV0dXJuIlNUQVRFTUVOVCI7ZGVmYXVsdDpyZXR1cm4gan19KCkpLHRoaXMudG9rZW4oaixjKSxhJiZ0aGlzLnRva2VuKCI6IiwiOiIpO3JldHVybiBkLmxlbmd0aH0sYS5wcm90b3R5cGUubnVtYmVyVG9rZW49ZnVuY3Rpb24oKXt2YXIgYSxiO2lmKCEoYT1GLmV4ZWModGhpcy5jaHVuaykpKXJldHVybiAwO2I9YVswXSx0aGlzLnRva2VuKCJOVU1CRVIiLGIpO3JldHVybiBiLmxlbmd0aH0sYS5wcm90b3R5cGUuc3RyaW5nVG9rZW49ZnVuY3Rpb24oKXt2YXIgYSxiO3N3aXRjaCh0aGlzLmNodW5rLmNoYXJBdCgwKSl7Y2FzZSInIjppZighKGE9TS5leGVjKHRoaXMuY2h1bmspKSlyZXR1cm4gMDt0aGlzLnRva2VuKCJTVFJJTkciLChiPWFbMF0pLnJlcGxhY2UoQSwiXFxcbiIpKTticmVhaztjYXNlJyInOmlmKCEoYj10aGlzLmJhbGFuY2VkU3RyaW5nKHRoaXMuY2h1bmssJyInKSkpcmV0dXJuIDA7MDxiLmluZGV4T2YoIiN7IiwxKT90aGlzLmludGVycG9sYXRlU3RyaW5nKGIuc2xpY2UoMSwtMSkpOnRoaXMudG9rZW4oIlNUUklORyIsdGhpcy5lc2NhcGVMaW5lcyhiKSk7YnJlYWs7ZGVmYXVsdDpyZXR1cm4gMH10aGlzLmxpbmUrPVIoYiwiXG4iKTtyZXR1cm4gYi5sZW5ndGh9LGEucHJvdG90eXBlLmhlcmVkb2NUb2tlbj1mdW5jdGlvbigpe3ZhciBhLGIsYyxkO2lmKCEoYz1sLmV4ZWModGhpcy5jaHVuaykpKXJldHVybiAwO2I9Y1swXSxkPWIuY2hhckF0KDApLGE9dGhpcy5zYW5pdGl6ZUhlcmVkb2MoY1syXSx7cXVvdGU6ZCxpbmRlbnQ6bnVsbH0pLGQ9PT0nIicmJjA8PWEuaW5kZXhPZigiI3siKT90aGlzLmludGVycG9sYXRlU3RyaW5nKGEse2hlcmVkb2M6ITB9KTp0aGlzLnRva2VuKCJTVFJJTkciLHRoaXMubWFrZVN0cmluZyhhLGQsITApKSx0aGlzLmxpbmUrPVIoYiwiXG4iKTtyZXR1cm4gYi5sZW5ndGh9LGEucHJvdG90eXBlLmNvbW1lbnRUb2tlbj1mdW5jdGlvbigpe3ZhciBhLGIsYztpZighKGM9dGhpcy5jaHVuay5tYXRjaChpKSkpcmV0dXJuIDA7YT1jWzBdLGI9Y1sxXSxiJiYodGhpcy50b2tlbigiSEVSRUNPTU1FTlQiLHRoaXMuc2FuaXRpemVIZXJlZG9jKGIse2hlcmVjb21tZW50OiEwLGluZGVudDpBcnJheSh0aGlzLmluZGVudCsxKS5qb2luKCIgIil9KSksdGhpcy50b2tlbigiVEVSTUlOQVRPUiIsIlxuIikpLHRoaXMubGluZSs9UihhLCJcbiIpO3JldHVybiBhLmxlbmd0aH0sYS5wcm90b3R5cGUuanNUb2tlbj1mdW5jdGlvbigpe3ZhciBhLGI7aWYodGhpcy5jaHVuay5jaGFyQXQoMCkhPT0iYCJ8fCEoYT1zLmV4ZWModGhpcy5jaHVuaykpKXJldHVybiAwO3RoaXMudG9rZW4oIkpTIiwoYj1hWzBdKS5zbGljZSgxLC0xKSk7cmV0dXJuIGIubGVuZ3RofSxhLnByb3RvdHlwZS5yZWdleFRva2VuPWZ1bmN0aW9uKCl7dmFyIGEsYixjLGQ7aWYodGhpcy5jaHVuay5jaGFyQXQoMCkhPT0iLyIpcmV0dXJuIDA7aWYoYT1vLmV4ZWModGhpcy5jaHVuaykpcmV0dXJuIHRoaXMuaGVyZWdleFRva2VuKGEpO2I9VCh0aGlzLnRva2Vucyk7aWYoYiYmKGQ9YlswXSxXLmNhbGwoYi5zcGFjZWQ/QzpELGQpPj0wKSlyZXR1cm4gMDtpZighKGE9SC5leGVjKHRoaXMuY2h1bmspKSlyZXR1cm4gMDtjPWFbMF0sdGhpcy50b2tlbigiUkVHRVgiLGM9PT0iLy8iPyIvKD86KS8iOmMpO3JldHVybiBjLmxlbmd0aH0sYS5wcm90b3R5cGUuaGVyZWdleFRva2VuPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoLGksaixrLGwsbSxuO2Q9YVswXSxiPWFbMV0sYz1hWzJdO2lmKDA+Yi5pbmRleE9mKCIjeyIpKXtlPWIucmVwbGFjZShwLCIiKS5yZXBsYWNlKC9cLy9nLCJcXC8iKSx0aGlzLnRva2VuKCJSRUdFWCIsIi8iKyhlfHwiKD86KSIpKyIvIitjKTtyZXR1cm4gZC5sZW5ndGh9dGhpcy50b2tlbigiSURFTlRJRklFUiIsIlJlZ0V4cCIpLHRoaXMudG9rZW5zLnB1c2goWyJDQUxMX1NUQVJUIiwiKCJdKSxnPVtdLGs9dGhpcy5pbnRlcnBvbGF0ZVN0cmluZyhiLHtyZWdleDohMH0pO2ZvcihpPTAsaj1rLmxlbmd0aDtpPGo7aSsrKXtsPWtbaV0sZj1sWzBdLGg9bFsxXTtpZihmPT09IlRPS0VOUyIpZy5wdXNoLmFwcGx5KGcsaCk7ZWxzZXtpZighKGg9aC5yZXBsYWNlKHAsIiIpKSljb250aW51ZTtoPWgucmVwbGFjZSgvXFwvZywiXFxcXCIpLGcucHVzaChbIlNUUklORyIsdGhpcy5tYWtlU3RyaW5nKGgsJyInLCEwKV0pfWcucHVzaChbIisiLCIrIl0pfWcucG9wKCksKChtPWdbMF0pIT1udWxsP21bMF06dm9pZCAwKSE9PSJTVFJJTkciJiZ0aGlzLnRva2Vucy5wdXNoKFsiU1RSSU5HIiwnIiInXSxbIisiLCIrIl0pLChuPXRoaXMudG9rZW5zKS5wdXNoLmFwcGx5KG4sZyksYyYmdGhpcy50b2tlbnMucHVzaChbIiwiLCIsIl0sWyJTVFJJTkciLCciJytjKyciJ10pLHRoaXMudG9rZW4oIikiLCIpIik7cmV0dXJuIGQubGVuZ3RofSxhLnByb3RvdHlwZS5saW5lVG9rZW49ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZCxlLGY7aWYoIShjPUIuZXhlYyh0aGlzLmNodW5rKSkpcmV0dXJuIDA7Yj1jWzBdLHRoaXMubGluZSs9UihiLCJcbiIpLGU9VCh0aGlzLnRva2VucywxKSxmPWIubGVuZ3RoLTEtYi5sYXN0SW5kZXhPZigiXG4iKSxkPXRoaXMudW5maW5pc2hlZCgpO2lmKGYtdGhpcy5pbmRlYnQ9PT10aGlzLmluZGVudCl7ZD90aGlzLnN1cHByZXNzTmV3bGluZXMoKTp0aGlzLm5ld2xpbmVUb2tlbigpO3JldHVybiBiLmxlbmd0aH1pZihmPnRoaXMuaW5kZW50KXtpZihkKXt0aGlzLmluZGVidD1mLXRoaXMuaW5kZW50LHRoaXMuc3VwcHJlc3NOZXdsaW5lcygpO3JldHVybiBiLmxlbmd0aH1hPWYtdGhpcy5pbmRlbnQrdGhpcy5vdXRkZWJ0LHRoaXMudG9rZW4oIklOREVOVCIsYSksdGhpcy5pbmRlbnRzLnB1c2goYSksdGhpcy5vdXRkZWJ0PXRoaXMuaW5kZWJ0PTB9ZWxzZSB0aGlzLmluZGVidD0wLHRoaXMub3V0ZGVudFRva2VuKHRoaXMuaW5kZW50LWYsZCk7dGhpcy5pbmRlbnQ9ZjtyZXR1cm4gYi5sZW5ndGh9LGEucHJvdG90eXBlLm91dGRlbnRUb2tlbj1mdW5jdGlvbihhLGIsYyl7dmFyIGQsZTt3aGlsZShhPjApZT10aGlzLmluZGVudHMubGVuZ3RoLTEsdGhpcy5pbmRlbnRzW2VdPT09dm9pZCAwP2E9MDp0aGlzLmluZGVudHNbZV09PT10aGlzLm91dGRlYnQ/KGEtPXRoaXMub3V0ZGVidCx0aGlzLm91dGRlYnQ9MCk6dGhpcy5pbmRlbnRzW2VdPHRoaXMub3V0ZGVidD8odGhpcy5vdXRkZWJ0LT10aGlzLmluZGVudHNbZV0sYS09dGhpcy5pbmRlbnRzW2VdKTooZD10aGlzLmluZGVudHMucG9wKCktdGhpcy5vdXRkZWJ0LGEtPWQsdGhpcy5vdXRkZWJ0PTAsdGhpcy50b2tlbigiT1VUREVOVCIsZCkpO2QmJih0aGlzLm91dGRlYnQtPWEpLHRoaXMudGFnKCkhPT0iVEVSTUlOQVRPUiImJiFiJiZ0aGlzLnRva2VuKCJURVJNSU5BVE9SIiwiXG4iKTtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUud2hpdGVzcGFjZVRva2VuPWZ1bmN0aW9uKCl7dmFyIGEsYixjO2lmKCEoYT1QLmV4ZWModGhpcy5jaHVuaykpJiYhKGI9dGhpcy5jaHVuay5jaGFyQXQoMCk9PT0iXG4iKSlyZXR1cm4gMDtjPVQodGhpcy50b2tlbnMpLGMmJihjW2E/InNwYWNlZCI6Im5ld0xpbmUiXT0hMCk7cmV0dXJuIGE/YVswXS5sZW5ndGg6MH0sYS5wcm90b3R5cGUubmV3bGluZVRva2VuPWZ1bmN0aW9uKCl7dGhpcy50YWcoKSE9PSJURVJNSU5BVE9SIiYmdGhpcy50b2tlbigiVEVSTUlOQVRPUiIsIlxuIik7cmV0dXJuIHRoaXN9LGEucHJvdG90eXBlLnN1cHByZXNzTmV3bGluZXM9ZnVuY3Rpb24oKXt0aGlzLnZhbHVlKCk9PT0iXFwiJiZ0aGlzLnRva2Vucy5wb3AoKTtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUubGl0ZXJhbFRva2VuPWZ1bmN0aW9uKCl7dmFyIGEsYixjLGYsZyxoLGksbDsoYT1HLmV4ZWModGhpcy5jaHVuaykpPyhmPWFbMF0sZS50ZXN0KGYpJiZ0aGlzLnRhZ1BhcmFtZXRlcnMoKSk6Zj10aGlzLmNodW5rLmNoYXJBdCgwKSxjPWYsYj1UKHRoaXMudG9rZW5zKTtpZihmPT09Ij0iJiZiKXshYlsxXS5yZXNlcnZlZCYmKGc9YlsxXSxXLmNhbGwodCxnKT49MCkmJnRoaXMuYXNzaWdubWVudEVycm9yKCk7aWYoKGg9YlsxXSk9PT0ifHwifHxoPT09IiYmIil7YlswXT0iQ09NUE9VTkRfQVNTSUdOIixiWzFdKz0iPSI7cmV0dXJuIGYubGVuZ3RofX1pZihmPT09IjsiKWM9IlRFUk1JTkFUT1IiO2Vsc2UgaWYoVy5jYWxsKHosZik+PTApYz0iTUFUSCI7ZWxzZSBpZihXLmNhbGwoaixmKT49MCljPSJDT01QQVJFIjtlbHNlIGlmKFcuY2FsbChrLGYpPj0wKWM9IkNPTVBPVU5EX0FTU0lHTiI7ZWxzZSBpZihXLmNhbGwoTyxmKT49MCljPSJVTkFSWSI7ZWxzZSBpZihXLmNhbGwoTCxmKT49MCljPSJTSElGVCI7ZWxzZSBpZihXLmNhbGwoeCxmKT49MHx8Zj09PSI/IiYmKGIhPW51bGw/Yi5zcGFjZWQ6dm9pZCAwKSljPSJMT0dJQyI7ZWxzZSBpZihiJiYhYi5zcGFjZWQpaWYoZj09PSIoIiYmKGk9YlswXSxXLmNhbGwoZCxpKT49MCkpYlswXT09PSI/IiYmKGJbMF09IkZVTkNfRVhJU1QiKSxjPSJDQUxMX1NUQVJUIjtlbHNlIGlmKGY9PT0iWyImJihsPWJbMF0sVy5jYWxsKHIsbCk+PTApKXtjPSJJTkRFWF9TVEFSVCI7c3dpdGNoKGJbMF0pe2Nhc2UiPyI6YlswXT0iSU5ERVhfU09BSyI7YnJlYWs7Y2FzZSI6OiI6YlswXT0iSU5ERVhfUFJPVE8ifX10aGlzLnRva2VuKGMsZik7cmV0dXJuIGYubGVuZ3RofSxhLnByb3RvdHlwZS5zYW5pdGl6ZUhlcmVkb2M9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGUsZixnO2U9Yi5pbmRlbnQsZD1iLmhlcmVjb21tZW50O2lmKGQpe2lmKG0udGVzdChhKSl0aHJvdyBuZXcgRXJyb3IoJ2Jsb2NrIGNvbW1lbnQgY2Fubm90IGNvbnRhaW4gIiovIiwgc3RhcnRpbmcgb24gbGluZSAnKyh0aGlzLmxpbmUrMSkpO2lmKGEuaW5kZXhPZigiXG4iKTw9MClyZXR1cm4gYX1lbHNlIHdoaWxlKGY9bi5leGVjKGEpKXtjPWZbMV07aWYoZT09PW51bGx8fDA8KGc9Yy5sZW5ndGgpJiZnPGUubGVuZ3RoKWU9Y31lJiYoYT1hLnJlcGxhY2UoUmVnRXhwKCJcXG4iK2UsImciKSwiXG4iKSksZHx8KGE9YS5yZXBsYWNlKC9eXG4vLCIiKSk7cmV0dXJuIGF9LGEucHJvdG90eXBlLnRhZ1BhcmFtZXRlcnM9ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZDtpZih0aGlzLnRhZygpIT09IikiKXJldHVybiB0aGlzO2I9W10sZD10aGlzLnRva2VucyxhPWQubGVuZ3RoLGRbLS1hXVswXT0iUEFSQU1fRU5EIjt3aGlsZShjPWRbLS1hXSlzd2l0Y2goY1swXSl7Y2FzZSIpIjpiLnB1c2goYyk7YnJlYWs7Y2FzZSIoIjpjYXNlIkNBTExfU1RBUlQiOmlmKGIubGVuZ3RoKWIucG9wKCk7ZWxzZSBpZihjWzBdPT09IigiKXtjWzBdPSJQQVJBTV9TVEFSVCI7cmV0dXJuIHRoaXN9fXJldHVybiB0aGlzfSxhLnByb3RvdHlwZS5jbG9zZUluZGVudGF0aW9uPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMub3V0ZGVudFRva2VuKHRoaXMuaW5kZW50KX0sYS5wcm90b3R5cGUuaWRlbnRpZmllckVycm9yPWZ1bmN0aW9uKGEpe3Rocm93IFN5bnRheEVycm9yKCdSZXNlcnZlZCB3b3JkICInK2ErJyIgb24gbGluZSAnKyh0aGlzLmxpbmUrMSkpfSxhLnByb3RvdHlwZS5hc3NpZ25tZW50RXJyb3I9ZnVuY3Rpb24oKXt0aHJvdyBTeW50YXhFcnJvcignUmVzZXJ2ZWQgd29yZCAiJyt0aGlzLnZhbHVlKCkrJyIgb24gbGluZSAnKyh0aGlzLmxpbmUrMSkrIiBjYW4ndCBiZSBhc3NpZ25lZCIpfSxhLnByb3RvdHlwZS5iYWxhbmNlZFN0cmluZz1mdW5jdGlvbihhLGIpe3ZhciBjLGQsZSxmLGc7Zj1bYl07Zm9yKGM9MSxnPWEubGVuZ3RoOzE8PWc/YzxnOmM+ZzsxPD1nP2MrKzpjLS0pe3N3aXRjaChkPWEuY2hhckF0KGMpKXtjYXNlIlxcIjpjKys7Y29udGludWU7Y2FzZSBiOmYucG9wKCk7aWYoIWYubGVuZ3RoKXJldHVybiBhLnNsaWNlKDAsYysxKTtiPWZbZi5sZW5ndGgtMV07Y29udGludWV9YiE9PSJ9Inx8ZCE9PSciJyYmZCE9PSInIj9iPT09In0iJiZkPT09InsiP2YucHVzaChiPSJ9Iik6Yj09PSciJyYmZT09PSIjIiYmZD09PSJ7IiYmZi5wdXNoKGI9In0iKTpmLnB1c2goYj1kKSxlPWR9dGhyb3cgbmV3IEVycm9yKCJtaXNzaW5nICIrZi5wb3AoKSsiLCBzdGFydGluZyBvbiBsaW5lICIrKHRoaXMubGluZSsxKSl9LGEucHJvdG90eXBlLmludGVycG9sYXRlU3RyaW5nPWZ1bmN0aW9uKGIsYyl7dmFyIGQsZSxmLGcsaCxpLGosayxsLG0sbixvLHAscSxyLHMsdDtjPT1udWxsJiYoYz17fSksZT1jLmhlcmVkb2MsbT1jLnJlZ2V4LG89W10sbD0wLGY9LTE7d2hpbGUoaj1iLmNoYXJBdChmKz0xKSl7aWYoaj09PSJcXCIpe2YrPTE7Y29udGludWV9aWYoaiE9PSIjInx8Yi5jaGFyQXQoZisxKSE9PSJ7Inx8IShkPXRoaXMuYmFsYW5jZWRTdHJpbmcoYi5zbGljZShmKzEpLCJ9IikpKWNvbnRpbnVlO2w8ZiYmby5wdXNoKFsiTkVPU1RSSU5HIixiLnNsaWNlKGwsZildKSxnPWQuc2xpY2UoMSwtMSk7aWYoZy5sZW5ndGgpe2s9KG5ldyBhKS50b2tlbml6ZShnLHtsaW5lOnRoaXMubGluZSxyZXdyaXRlOiExfSksay5wb3AoKSwoKHI9a1swXSkhPW51bGw/clswXTp2b2lkIDApPT09IlRFUk1JTkFUT1IiJiZrLnNoaWZ0KCk7aWYoaT1rLmxlbmd0aClpPjEmJihrLnVuc2hpZnQoWyIoIiwiKCJdKSxrLnB1c2goWyIpIiwiKSJdKSksby5wdXNoKFsiVE9LRU5TIixrXSl9Zis9ZC5sZW5ndGgsbD1mKzF9Zj5sJiZsPGIubGVuZ3RoJiZvLnB1c2goWyJORU9TVFJJTkciLGIuc2xpY2UobCldKTtpZihtKXJldHVybiBvO2lmKCFvLmxlbmd0aClyZXR1cm4gdGhpcy50b2tlbigiU1RSSU5HIiwnIiInKTtvWzBdWzBdIT09Ik5FT1NUUklORyImJm8udW5zaGlmdChbIiIsIiJdKSwoaD1vLmxlbmd0aD4xKSYmdGhpcy50b2tlbigiKCIsIigiKTtmb3IoZj0wLHE9by5sZW5ndGg7ZjxxO2YrKylzPW9bZl0sbj1zWzBdLHA9c1sxXSxmJiZ0aGlzLnRva2VuKCIrIiwiKyIpLG49PT0iVE9LRU5TIj8odD10aGlzLnRva2VucykucHVzaC5hcHBseSh0LHApOnRoaXMudG9rZW4oIlNUUklORyIsdGhpcy5tYWtlU3RyaW5nKHAsJyInLGUpKTtoJiZ0aGlzLnRva2VuKCIpIiwiKSIpO3JldHVybiBvfSxhLnByb3RvdHlwZS50b2tlbj1mdW5jdGlvbihhLGIpe3JldHVybiB0aGlzLnRva2Vucy5wdXNoKFthLGIsdGhpcy5saW5lXSl9LGEucHJvdG90eXBlLnRhZz1mdW5jdGlvbihhLGIpe3ZhciBjO3JldHVybihjPVQodGhpcy50b2tlbnMsYSkpJiYoYj9jWzBdPWI6Y1swXSl9LGEucHJvdG90eXBlLnZhbHVlPWZ1bmN0aW9uKGEsYil7dmFyIGM7cmV0dXJuKGM9VCh0aGlzLnRva2VucyxhKSkmJihiP2NbMV09YjpjWzFdKX0sYS5wcm90b3R5cGUudW5maW5pc2hlZD1mdW5jdGlvbigpe3ZhciBhLGM7cmV0dXJuIHcudGVzdCh0aGlzLmNodW5rKXx8KGE9VCh0aGlzLnRva2VucywxKSkmJmFbMF0hPT0iLiImJihjPXRoaXMudmFsdWUoKSkmJiFjLnJlc2VydmVkJiZFLnRlc3QoYykmJiFlLnRlc3QoYykmJiFiLnRlc3QodGhpcy5jaHVuayl9LGEucHJvdG90eXBlLmVzY2FwZUxpbmVzPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGEucmVwbGFjZShBLGI/IlxcbiI6IiIpfSxhLnByb3RvdHlwZS5tYWtlU3RyaW5nPWZ1bmN0aW9uKGEsYixjKXtpZighYSlyZXR1cm4gYitiO2E9YS5yZXBsYWNlKC9cXChbXHNcU10pL2csZnVuY3Rpb24oYSxjKXtyZXR1cm4gYz09PSJcbiJ8fGM9PT1iP2M6YX0pLGE9YS5yZXBsYWNlKFJlZ0V4cCgiIitiLCJnIiksIlxcJCYiKTtyZXR1cm4gYit0aGlzLmVzY2FwZUxpbmVzKGEsYykrYn07cmV0dXJuIGF9KCksdT1bInRydWUiLCJmYWxzZSIsIm51bGwiLCJ0aGlzIiwibmV3IiwiZGVsZXRlIiwidHlwZW9mIiwiaW4iLCJpbnN0YW5jZW9mIiwicmV0dXJuIiwidGhyb3ciLCJicmVhayIsImNvbnRpbnVlIiwiZGVidWdnZXIiLCJpZiIsImVsc2UiLCJzd2l0Y2giLCJmb3IiLCJ3aGlsZSIsImRvIiwidHJ5IiwiY2F0Y2giLCJmaW5hbGx5IiwiY2xhc3MiLCJleHRlbmRzIiwic3VwZXIiXSxoPVsidW5kZWZpbmVkIiwidGhlbiIsInVubGVzcyIsInVudGlsIiwibG9vcCIsIm9mIiwiYnkiLCJ3aGVuIl0sZz17YW5kOiImJiIsb3I6Inx8IixpczoiPT0iLGlzbnQ6IiE9Iixub3Q6IiEiLHllczoidHJ1ZSIsbm86ImZhbHNlIixvbjoidHJ1ZSIsb2ZmOiJmYWxzZSJ9LGY9ZnVuY3Rpb24oKXt2YXIgYTthPVtdO2ZvcihTIGluIGcpYS5wdXNoKFMpO3JldHVybiBhfSgpLGg9aC5jb25jYXQoZiksSj1bImNhc2UiLCJkZWZhdWx0IiwiZnVuY3Rpb24iLCJ2YXIiLCJ2b2lkIiwid2l0aCIsImNvbnN0IiwibGV0IiwiZW51bSIsImV4cG9ydCIsImltcG9ydCIsIm5hdGl2ZSIsIl9faGFzUHJvcCIsIl9fZXh0ZW5kcyIsIl9fc2xpY2UiLCJfX2JpbmQiLCJfX2luZGV4T2YiXSx0PXUuY29uY2F0KEopLGEuUkVTRVJWRUQ9Si5jb25jYXQodSkuY29uY2F0KGgpLHE9L14oWyRBLVphLXpfXHg3Zi1cdWZmZmZdWyRcd1x4N2YtXHVmZmZmXSopKFteXG5cU10qOig/ITopKT8vLEY9L14weFtcZGEtZl0rfF4oPzpcZCsoXC5cZCspP3xcLlxkKykoPzplWystXT9cZCspPy9pLGw9L14oIiIifCcnJykoW1xzXFNdKj8pKD86XG5bXlxuXFNdKik/XDEvLEc9L14oPzpbLT1dPnxbLSsqXC8lPD4mfF4hPz1dPXw+Pj49P3woWy0rOl0pXDF8KFsmfDw+XSlcMj0/fFw/XC58XC57MiwzfSkvLFA9L15bXlxuXFNdKy8saT0vXiMjIyhbXiNdW1xzXFNdKj8pKD86IyMjW15cblxTXSp8KD86IyMjKT8kKXxeKD86XHMqIyg/ISMjW14jXSkuKikrLyxlPS9eWy09XT4vLEI9L14oPzpcblteXG5cU10qKSsvLE09L14nW15cXCddKig/OlxcLlteXFwnXSopKicvLHM9L15gW15cXGBdKig/OlxcLlteXFxgXSopKmAvLEg9L15cLyg/IVtccz1dKVteW1wvXG5cXF0qKD86KD86XFxbXHNcU118XFtbXlxdXG5cXF0qKD86XFxbXHNcU11bXlxdXG5cXF0qKSpdKVteW1wvXG5cXF0qKSpcL1tpbWd5XXswLDR9KD8hXHcpLyxvPS9eXC97M30oW1xzXFNdKz8pXC97M30oW2ltZ3ldezAsNH0pKD8hXHcpLyxwPS9ccysoPzojLiopPy9nLEE9L1xuL2csbj0vXG4rKFteXG5cU10qKS9nLG09L1wqXC8vLGI9L15ccypAPyhbJEEtWmEtel9dWyRcd1x4N2YtXHVmZmZmXSp8WyciXS4qWyciXSlbXlxuXFNdKj9bOj1dW146PT5dLyx3PS9eXHMqKD86LHxcPz9cLig/IVsuXGRdKXw6OikvLE49L1xzKyQvLEU9L14oPzpbLSsqJnxcLyU9PD4hLlxcXVs8Pj0mfF0qfGFuZHxvcnxpcyg/Om50KT98big/Om90fGV3KXxkZWxldGV8dHlwZW9mfGluc3RhbmNlb2YpJC8saz1bIi09IiwiKz0iLCIvPSIsIio9IiwiJT0iLCJ8fD0iLCImJj0iLCI/PSIsIjw8PSIsIj4+PSIsIj4+Pj0iLCImPSIsIl49IiwifD0iXSxPPVsiISIsIn4iLCJORVciLCJUWVBFT0YiLCJERUxFVEUiLCJETyJdLHg9WyImJiIsInx8IiwiJiIsInwiLCJeIl0sTD1bIjw8IiwiPj4iLCI+Pj4iXSxqPVsiPT0iLCIhPSIsIjwiLCI+IiwiPD0iLCI+PSJdLHo9WyIqIiwiLyIsIiUiXSxJPVsiSU4iLCJPRiIsIklOU1RBTkNFT0YiXSxjPVsiVFJVRSIsIkZBTFNFIiwiTlVMTCIsIlVOREVGSU5FRCJdLEM9WyJOVU1CRVIiLCJSRUdFWCIsIkJPT0wiLCIrKyIsIi0tIiwiXSJdLEQ9Qy5jb25jYXQoIikiLCJ9IiwiVEhJUyIsIklERU5USUZJRVIiLCJTVFJJTkciKSxkPVsiSURFTlRJRklFUiIsIlNUUklORyIsIlJFR0VYIiwiKSIsIl0iLCJ9IiwiPyIsIjo6IiwiQCIsIlRISVMiLCJTVVBFUiJdLHI9ZC5jb25jYXQoIk5VTUJFUiIsIkJPT0wiKSx2PVsiSU5ERU5UIiwiT1VUREVOVCIsIlRFUk1JTkFUT1IiXX0pLmNhbGwodGhpcyl9LHJlcXVpcmVbIi4vcGFyc2VyIl09bmV3IGZ1bmN0aW9uKCl7dmFyIGE9dGhpcyxiPWZ1bmN0aW9uKCl7dmFyIGE9e3RyYWNlOmZ1bmN0aW9uKCl7fSx5eTp7fSxzeW1ib2xzXzp7ZXJyb3I6MixSb290OjMsQm9keTo0LEJsb2NrOjUsVEVSTUlOQVRPUjo2LExpbmU6NyxFeHByZXNzaW9uOjgsU3RhdGVtZW50OjksUmV0dXJuOjEwLFRocm93OjExLENvbW1lbnQ6MTIsU1RBVEVNRU5UOjEzLFZhbHVlOjE0LEludm9jYXRpb246MTUsQ29kZToxNixPcGVyYXRpb246MTcsQXNzaWduOjE4LElmOjE5LFRyeToyMCxXaGlsZToyMSxGb3I6MjIsU3dpdGNoOjIzLENsYXNzOjI0LElOREVOVDoyNSxPVVRERU5UOjI2LElkZW50aWZpZXI6MjcsSURFTlRJRklFUjoyOCxBbHBoYU51bWVyaWM6MjksTlVNQkVSOjMwLFNUUklORzozMSxMaXRlcmFsOjMyLEpTOjMzLFJFR0VYOjM0LEJPT0w6MzUsQXNzaWduYWJsZTozNiwiPSI6MzcsQXNzaWduT2JqOjM4LE9iakFzc2lnbmFibGU6MzksIjoiOjQwLFRoaXNQcm9wZXJ0eTo0MSxSRVRVUk46NDIsSEVSRUNPTU1FTlQ6NDMsUEFSQU1fU1RBUlQ6NDQsUGFyYW1MaXN0OjQ1LFBBUkFNX0VORDo0NixGdW5jR2x5cGg6NDcsIi0+Ijo0OCwiPT4iOjQ5LE9wdENvbW1hOjUwLCIsIjo1MSxQYXJhbTo1MixQYXJhbVZhcjo1MywiLi4uIjo1NCxBcnJheTo1NSxPYmplY3Q6NTYsU3BsYXQ6NTcsU2ltcGxlQXNzaWduYWJsZTo1OCxBY2Nlc3Nvcjo1OSxQYXJlbnRoZXRpY2FsOjYwLFJhbmdlOjYxLFRoaXM6NjIsIi4iOjYzLCI/LiI6NjQsIjo6Ijo2NSxJbmRleDo2NixJTkRFWF9TVEFSVDo2NyxJbmRleFZhbHVlOjY4LElOREVYX0VORDo2OSxJTkRFWF9TT0FLOjcwLElOREVYX1BST1RPOjcxLFNsaWNlOjcyLCJ7Ijo3MyxBc3NpZ25MaXN0Ojc0LCJ9Ijo3NSxDTEFTUzo3NixFWFRFTkRTOjc3LE9wdEZ1bmNFeGlzdDo3OCxBcmd1bWVudHM6NzksU1VQRVI6ODAsRlVOQ19FWElTVDo4MSxDQUxMX1NUQVJUOjgyLENBTExfRU5EOjgzLEFyZ0xpc3Q6ODQsVEhJUzo4NSwiQCI6ODYsIlsiOjg3LCJdIjo4OCxSYW5nZURvdHM6ODksIi4uIjo5MCxBcmc6OTEsU2ltcGxlQXJnczo5MixUUlk6OTMsQ2F0Y2g6OTQsRklOQUxMWTo5NSxDQVRDSDo5NixUSFJPVzo5NywiKCI6OTgsIikiOjk5LFdoaWxlU291cmNlOjEwMCxXSElMRToxMDEsV0hFTjoxMDIsVU5USUw6MTAzLExvb3A6MTA0LExPT1A6MTA1LEZvckJvZHk6MTA2LEZPUjoxMDcsRm9yU3RhcnQ6MTA4LEZvclNvdXJjZToxMDksRm9yVmFyaWFibGVzOjExMCxPV046MTExLEZvclZhbHVlOjExMixGT1JJTjoxMTMsRk9ST0Y6MTE0LEJZOjExNSxTV0lUQ0g6MTE2LFdoZW5zOjExNyxFTFNFOjExOCxXaGVuOjExOSxMRUFESU5HX1dIRU46MTIwLElmQmxvY2s6MTIxLElGOjEyMixQT1NUX0lGOjEyMyxVTkFSWToxMjQsIi0iOjEyNSwiKyI6MTI2LCItLSI6MTI3LCIrKyI6MTI4LCI/IjoxMjksTUFUSDoxMzAsU0hJRlQ6MTMxLENPTVBBUkU6MTMyLExPR0lDOjEzMyxSRUxBVElPTjoxMzQsQ09NUE9VTkRfQVNTSUdOOjEzNSwkYWNjZXB0OjAsJGVuZDoxfSx0ZXJtaW5hbHNfOnsyOiJlcnJvciIsNjoiVEVSTUlOQVRPUiIsMTM6IlNUQVRFTUVOVCIsMjU6IklOREVOVCIsMjY6Ik9VVERFTlQiLDI4OiJJREVOVElGSUVSIiwzMDoiTlVNQkVSIiwzMToiU1RSSU5HIiwzMzoiSlMiLDM0OiJSRUdFWCIsMzU6IkJPT0wiLDM3OiI9Iiw0MDoiOiIsNDI6IlJFVFVSTiIsNDM6IkhFUkVDT01NRU5UIiw0NDoiUEFSQU1fU1RBUlQiLDQ2OiJQQVJBTV9FTkQiLDQ4OiItPiIsNDk6Ij0+Iiw1MToiLCIsNTQ6Ii4uLiIsNjM6Ii4iLDY0OiI/LiIsNjU6Ijo6Iiw2NzoiSU5ERVhfU1RBUlQiLDY5OiJJTkRFWF9FTkQiLDcwOiJJTkRFWF9TT0FLIiw3MToiSU5ERVhfUFJPVE8iLDczOiJ7Iiw3NToifSIsNzY6IkNMQVNTIiw3NzoiRVhURU5EUyIsODA6IlNVUEVSIiw4MToiRlVOQ19FWElTVCIsODI6IkNBTExfU1RBUlQiLDgzOiJDQUxMX0VORCIsODU6IlRISVMiLDg2OiJAIiw4NzoiWyIsODg6Il0iLDkwOiIuLiIsOTM6IlRSWSIsOTU6IkZJTkFMTFkiLDk2OiJDQVRDSCIsOTc6IlRIUk9XIiw5ODoiKCIsOTk6IikiLDEwMToiV0hJTEUiLDEwMjoiV0hFTiIsMTAzOiJVTlRJTCIsMTA1OiJMT09QIiwxMDc6IkZPUiIsMTExOiJPV04iLDExMzoiRk9SSU4iLDExNDoiRk9ST0YiLDExNToiQlkiLDExNjoiU1dJVENIIiwxMTg6IkVMU0UiLDEyMDoiTEVBRElOR19XSEVOIiwxMjI6IklGIiwxMjM6IlBPU1RfSUYiLDEyNDoiVU5BUlkiLDEyNToiLSIsMTI2OiIrIiwxMjc6Ii0tIiwxMjg6IisrIiwxMjk6Ij8iLDEzMDoiTUFUSCIsMTMxOiJTSElGVCIsMTMyOiJDT01QQVJFIiwxMzM6IkxPR0lDIiwxMzQ6IlJFTEFUSU9OIiwxMzU6IkNPTVBPVU5EX0FTU0lHTiJ9LHByb2R1Y3Rpb25zXzpbMCxbMywwXSxbMywxXSxbMywyXSxbNCwxXSxbNCwzXSxbNCwyXSxbNywxXSxbNywxXSxbOSwxXSxbOSwxXSxbOSwxXSxbOSwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbOCwxXSxbNSwyXSxbNSwzXSxbMjcsMV0sWzI5LDFdLFsyOSwxXSxbMzIsMV0sWzMyLDFdLFszMiwxXSxbMzIsMV0sWzE4LDNdLFsxOCw1XSxbMzgsMV0sWzM4LDNdLFszOCw1XSxbMzgsMV0sWzM5LDFdLFszOSwxXSxbMzksMV0sWzEwLDJdLFsxMCwxXSxbMTIsMV0sWzE2LDVdLFsxNiwyXSxbNDcsMV0sWzQ3LDFdLFs1MCwwXSxbNTAsMV0sWzQ1LDBdLFs0NSwxXSxbNDUsM10sWzUyLDFdLFs1MiwyXSxbNTIsM10sWzUzLDFdLFs1MywxXSxbNTMsMV0sWzUzLDFdLFs1NywyXSxbNTgsMV0sWzU4LDJdLFs1OCwyXSxbNTgsMV0sWzM2LDFdLFszNiwxXSxbMzYsMV0sWzE0LDFdLFsxNCwxXSxbMTQsMV0sWzE0LDFdLFsxNCwxXSxbNTksMl0sWzU5LDJdLFs1OSwyXSxbNTksMV0sWzU5LDFdLFs2NiwzXSxbNjYsMl0sWzY2LDJdLFs2OCwxXSxbNjgsMV0sWzU2LDRdLFs3NCwwXSxbNzQsMV0sWzc0LDNdLFs3NCw0XSxbNzQsNl0sWzI0LDFdLFsyNCwyXSxbMjQsM10sWzI0LDRdLFsyNCwyXSxbMjQsM10sWzI0LDRdLFsyNCw1XSxbMTUsM10sWzE1LDNdLFsxNSwxXSxbMTUsMl0sWzc4LDBdLFs3OCwxXSxbNzksMl0sWzc5LDRdLFs2MiwxXSxbNjIsMV0sWzQxLDJdLFs1NSwyXSxbNTUsNF0sWzg5LDFdLFs4OSwxXSxbNjEsNV0sWzcyLDNdLFs3MiwyXSxbNzIsMl0sWzg0LDFdLFs4NCwzXSxbODQsNF0sWzg0LDRdLFs4NCw2XSxbOTEsMV0sWzkxLDFdLFs5MiwxXSxbOTIsM10sWzIwLDJdLFsyMCwzXSxbMjAsNF0sWzIwLDVdLFs5NCwzXSxbMTEsMl0sWzYwLDNdLFs2MCw1XSxbMTAwLDJdLFsxMDAsNF0sWzEwMCwyXSxbMTAwLDRdLFsyMSwyXSxbMjEsMl0sWzIxLDJdLFsyMSwxXSxbMTA0LDJdLFsxMDQsMl0sWzIyLDJdLFsyMiwyXSxbMjIsMl0sWzEwNiwyXSxbMTA2LDJdLFsxMDgsMl0sWzEwOCwzXSxbMTEyLDFdLFsxMTIsMV0sWzExMiwxXSxbMTEwLDFdLFsxMTAsM10sWzEwOSwyXSxbMTA5LDJdLFsxMDksNF0sWzEwOSw0XSxbMTA5LDRdLFsxMDksNl0sWzEwOSw2XSxbMjMsNV0sWzIzLDddLFsyMyw0XSxbMjMsNl0sWzExNywxXSxbMTE3LDJdLFsxMTksM10sWzExOSw0XSxbMTIxLDNdLFsxMjEsNV0sWzE5LDFdLFsxOSwzXSxbMTksM10sWzE5LDNdLFsxNywyXSxbMTcsMl0sWzE3LDJdLFsxNywyXSxbMTcsMl0sWzE3LDJdLFsxNywyXSxbMTcsMl0sWzE3LDNdLFsxNywzXSxbMTcsM10sWzE3LDNdLFsxNywzXSxbMTcsM10sWzE3LDNdLFsxNywzXSxbMTcsNV0sWzE3LDNdXSxwZXJmb3JtQWN0aW9uOmZ1bmN0aW9uKGEsYixjLGQsZSxmLGcpe3ZhciBoPWYubGVuZ3RoLTE7c3dpdGNoKGUpe2Nhc2UgMTpyZXR1cm4gdGhpcy4kPW5ldyBkLkJsb2NrO2Nhc2UgMjpyZXR1cm4gdGhpcy4kPWZbaF07Y2FzZSAzOnJldHVybiB0aGlzLiQ9ZltoLTFdO2Nhc2UgNDp0aGlzLiQ9ZC5CbG9jay53cmFwKFtmW2hdXSk7YnJlYWs7Y2FzZSA1OnRoaXMuJD1mW2gtMl0ucHVzaChmW2hdKTticmVhaztjYXNlIDY6dGhpcy4kPWZbaC0xXTticmVhaztjYXNlIDc6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSA4OnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgOTp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDEwOnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgMTE6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSAxMjp0aGlzLiQ9bmV3IGQuTGl0ZXJhbChmW2hdKTticmVhaztjYXNlIDEzOnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgMTQ6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSAxNTp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDE2OnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgMTc6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSAxODp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDE5OnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgMjA6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSAyMTp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDIyOnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgMjM6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSAyNDp0aGlzLiQ9bmV3IGQuQmxvY2s7YnJlYWs7Y2FzZSAyNTp0aGlzLiQ9ZltoLTFdO2JyZWFrO2Nhc2UgMjY6dGhpcy4kPW5ldyBkLkxpdGVyYWwoZltoXSk7YnJlYWs7Y2FzZSAyNzp0aGlzLiQ9bmV3IGQuTGl0ZXJhbChmW2hdKTticmVhaztjYXNlIDI4OnRoaXMuJD1uZXcgZC5MaXRlcmFsKGZbaF0pO2JyZWFrO2Nhc2UgMjk6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSAzMDp0aGlzLiQ9bmV3IGQuTGl0ZXJhbChmW2hdKTticmVhaztjYXNlIDMxOnRoaXMuJD1uZXcgZC5MaXRlcmFsKGZbaF0pO2JyZWFrO2Nhc2UgMzI6dGhpcy4kPWZ1bmN0aW9uKCl7dmFyIGE7YT1uZXcgZC5MaXRlcmFsKGZbaF0pLGZbaF09PT0idW5kZWZpbmVkIiYmKGEuaXNVbmRlZmluZWQ9ITApO3JldHVybiBhfSgpO2JyZWFrO2Nhc2UgMzM6dGhpcy4kPW5ldyBkLkFzc2lnbihmW2gtMl0sZltoXSk7YnJlYWs7Y2FzZSAzNDp0aGlzLiQ9bmV3IGQuQXNzaWduKGZbaC00XSxmW2gtMV0pO2JyZWFrO2Nhc2UgMzU6dGhpcy4kPW5ldyBkLlZhbHVlKGZbaF0pO2JyZWFrO2Nhc2UgMzY6dGhpcy4kPW5ldyBkLkFzc2lnbihuZXcgZC5WYWx1ZShmW2gtMl0pLGZbaF0sIm9iamVjdCIpO2JyZWFrO2Nhc2UgMzc6dGhpcy4kPW5ldyBkLkFzc2lnbihuZXcgZC5WYWx1ZShmW2gtNF0pLGZbaC0xXSwib2JqZWN0Iik7YnJlYWs7Y2FzZSAzODp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDM5OnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgNDA6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSA0MTp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDQyOnRoaXMuJD1uZXcgZC5SZXR1cm4oZltoXSk7YnJlYWs7Y2FzZSA0Mzp0aGlzLiQ9bmV3IGQuUmV0dXJuO2JyZWFrO2Nhc2UgNDQ6dGhpcy4kPW5ldyBkLkNvbW1lbnQoZltoXSk7YnJlYWs7Y2FzZSA0NTp0aGlzLiQ9bmV3IGQuQ29kZShmW2gtM10sZltoXSxmW2gtMV0pO2JyZWFrO2Nhc2UgNDY6dGhpcy4kPW5ldyBkLkNvZGUoW10sZltoXSxmW2gtMV0pO2JyZWFrO2Nhc2UgNDc6dGhpcy4kPSJmdW5jIjticmVhaztjYXNlIDQ4OnRoaXMuJD0iYm91bmRmdW5jIjticmVhaztjYXNlIDQ5OnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgNTA6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSA1MTp0aGlzLiQ9W107YnJlYWs7Y2FzZSA1Mjp0aGlzLiQ9W2ZbaF1dO2JyZWFrO2Nhc2UgNTM6dGhpcy4kPWZbaC0yXS5jb25jYXQoZltoXSk7YnJlYWs7Y2FzZSA1NDp0aGlzLiQ9bmV3IGQuUGFyYW0oZltoXSk7YnJlYWs7Y2FzZSA1NTp0aGlzLiQ9bmV3IGQuUGFyYW0oZltoLTFdLG51bGwsITApO2JyZWFrO2Nhc2UgNTY6dGhpcy4kPW5ldyBkLlBhcmFtKGZbaC0yXSxmW2hdKTticmVhaztjYXNlIDU3OnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgNTg6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSA1OTp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDYwOnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgNjE6dGhpcy4kPW5ldyBkLlNwbGF0KGZbaC0xXSk7YnJlYWs7Y2FzZSA2Mjp0aGlzLiQ9bmV3IGQuVmFsdWUoZltoXSk7YnJlYWs7Y2FzZSA2Mzp0aGlzLiQ9ZltoLTFdLnB1c2goZltoXSk7YnJlYWs7Y2FzZSA2NDp0aGlzLiQ9bmV3IGQuVmFsdWUoZltoLTFdLFtmW2hdXSk7YnJlYWs7Y2FzZSA2NTp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDY2OnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgNjc6dGhpcy4kPW5ldyBkLlZhbHVlKGZbaF0pO2JyZWFrO2Nhc2UgNjg6dGhpcy4kPW5ldyBkLlZhbHVlKGZbaF0pO2JyZWFrO2Nhc2UgNjk6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSA3MDp0aGlzLiQ9bmV3IGQuVmFsdWUoZltoXSk7YnJlYWs7Y2FzZSA3MTp0aGlzLiQ9bmV3IGQuVmFsdWUoZltoXSk7YnJlYWs7Y2FzZSA3Mjp0aGlzLiQ9bmV3IGQuVmFsdWUoZltoXSk7YnJlYWs7Y2FzZSA3Mzp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDc0OnRoaXMuJD1uZXcgZC5BY2Nlc3MoZltoXSk7YnJlYWs7Y2FzZSA3NTp0aGlzLiQ9bmV3IGQuQWNjZXNzKGZbaF0sInNvYWsiKTticmVhaztjYXNlIDc2OnRoaXMuJD1uZXcgZC5BY2Nlc3MoZltoXSwicHJvdG8iKTticmVhaztjYXNlIDc3OnRoaXMuJD1uZXcgZC5BY2Nlc3MobmV3IGQuTGl0ZXJhbCgicHJvdG90eXBlIikpO2JyZWFrO2Nhc2UgNzg6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSA3OTp0aGlzLiQ9ZltoLTFdO2JyZWFrO2Nhc2UgODA6dGhpcy4kPWQuZXh0ZW5kKGZbaF0se3NvYWs6ITB9KTticmVhaztjYXNlIDgxOnRoaXMuJD1kLmV4dGVuZChmW2hdLHtwcm90bzohMH0pO2JyZWFrO2Nhc2UgODI6dGhpcy4kPW5ldyBkLkluZGV4KGZbaF0pO2JyZWFrO2Nhc2UgODM6dGhpcy4kPW5ldyBkLlNsaWNlKGZbaF0pO2JyZWFrO2Nhc2UgODQ6dGhpcy4kPW5ldyBkLk9iaihmW2gtMl0sZltoLTNdLmdlbmVyYXRlZCk7YnJlYWs7Y2FzZSA4NTp0aGlzLiQ9W107YnJlYWs7Y2FzZSA4Njp0aGlzLiQ9W2ZbaF1dO2JyZWFrO2Nhc2UgODc6dGhpcy4kPWZbaC0yXS5jb25jYXQoZltoXSk7YnJlYWs7Y2FzZSA4ODp0aGlzLiQ9ZltoLTNdLmNvbmNhdChmW2hdKTticmVhaztjYXNlIDg5OnRoaXMuJD1mW2gtNV0uY29uY2F0KGZbaC0yXSk7YnJlYWs7Y2FzZSA5MDp0aGlzLiQ9bmV3IGQuQ2xhc3M7YnJlYWs7Y2FzZSA5MTp0aGlzLiQ9bmV3IGQuQ2xhc3MobnVsbCxudWxsLGZbaF0pO2JyZWFrO2Nhc2UgOTI6dGhpcy4kPW5ldyBkLkNsYXNzKG51bGwsZltoXSk7YnJlYWs7Y2FzZSA5Mzp0aGlzLiQ9bmV3IGQuQ2xhc3MobnVsbCxmW2gtMV0sZltoXSk7YnJlYWs7Y2FzZSA5NDp0aGlzLiQ9bmV3IGQuQ2xhc3MoZltoXSk7YnJlYWs7Y2FzZSA5NTp0aGlzLiQ9bmV3IGQuQ2xhc3MoZltoLTFdLG51bGwsZltoXSk7YnJlYWs7Y2FzZSA5Njp0aGlzLiQ9bmV3IGQuQ2xhc3MoZltoLTJdLGZbaF0pO2JyZWFrO2Nhc2UgOTc6dGhpcy4kPW5ldyBkLkNsYXNzKGZbaC0zXSxmW2gtMV0sZltoXSk7YnJlYWs7Y2FzZSA5ODp0aGlzLiQ9bmV3IGQuQ2FsbChmW2gtMl0sZltoXSxmW2gtMV0pO2JyZWFrO2Nhc2UgOTk6dGhpcy4kPW5ldyBkLkNhbGwoZltoLTJdLGZbaF0sZltoLTFdKTticmVhaztjYXNlIDEwMDp0aGlzLiQ9bmV3IGQuQ2FsbCgic3VwZXIiLFtuZXcgZC5TcGxhdChuZXcgZC5MaXRlcmFsKCJhcmd1bWVudHMiKSldKTticmVhaztjYXNlIDEwMTp0aGlzLiQ9bmV3IGQuQ2FsbCgic3VwZXIiLGZbaF0pO2JyZWFrO2Nhc2UgMTAyOnRoaXMuJD0hMTticmVhaztjYXNlIDEwMzp0aGlzLiQ9ITA7YnJlYWs7Y2FzZSAxMDQ6dGhpcy4kPVtdO2JyZWFrO2Nhc2UgMTA1OnRoaXMuJD1mW2gtMl07YnJlYWs7Y2FzZSAxMDY6dGhpcy4kPW5ldyBkLlZhbHVlKG5ldyBkLkxpdGVyYWwoInRoaXMiKSk7YnJlYWs7Y2FzZSAxMDc6dGhpcy4kPW5ldyBkLlZhbHVlKG5ldyBkLkxpdGVyYWwoInRoaXMiKSk7YnJlYWs7Y2FzZSAxMDg6dGhpcy4kPW5ldyBkLlZhbHVlKG5ldyBkLkxpdGVyYWwoInRoaXMiKSxbbmV3IGQuQWNjZXNzKGZbaF0pXSwidGhpcyIpO2JyZWFrO2Nhc2UgMTA5OnRoaXMuJD1uZXcgZC5BcnIoW10pO2JyZWFrO2Nhc2UgMTEwOnRoaXMuJD1uZXcgZC5BcnIoZltoLTJdKTticmVhaztjYXNlIDExMTp0aGlzLiQ9ImluY2x1c2l2ZSI7YnJlYWs7Y2FzZSAxMTI6dGhpcy4kPSJleGNsdXNpdmUiO2JyZWFrO2Nhc2UgMTEzOnRoaXMuJD1uZXcgZC5SYW5nZShmW2gtM10sZltoLTFdLGZbaC0yXSk7YnJlYWs7Y2FzZSAxMTQ6dGhpcy4kPW5ldyBkLlJhbmdlKGZbaC0yXSxmW2hdLGZbaC0xXSk7YnJlYWs7Y2FzZSAxMTU6dGhpcy4kPW5ldyBkLlJhbmdlKGZbaC0xXSxudWxsLGZbaF0pO2JyZWFrO2Nhc2UgMTE2OnRoaXMuJD1uZXcgZC5SYW5nZShudWxsLGZbaF0sZltoLTFdKTticmVhaztjYXNlIDExNzp0aGlzLiQ9W2ZbaF1dO2JyZWFrO2Nhc2UgMTE4OnRoaXMuJD1mW2gtMl0uY29uY2F0KGZbaF0pO2JyZWFrO2Nhc2UgMTE5OnRoaXMuJD1mW2gtM10uY29uY2F0KGZbaF0pO2JyZWFrO2Nhc2UgMTIwOnRoaXMuJD1mW2gtMl07YnJlYWs7Y2FzZSAxMjE6dGhpcy4kPWZbaC01XS5jb25jYXQoZltoLTJdKTticmVhaztjYXNlIDEyMjp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDEyMzp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDEyNDp0aGlzLiQ9ZltoXTticmVhaztjYXNlIDEyNTp0aGlzLiQ9W10uY29uY2F0KGZbaC0yXSxmW2hdKTticmVhaztjYXNlIDEyNjp0aGlzLiQ9bmV3IGQuVHJ5KGZbaF0pO2JyZWFrO2Nhc2UgMTI3OnRoaXMuJD1uZXcgZC5UcnkoZltoLTFdLGZbaF1bMF0sZltoXVsxXSk7YnJlYWs7Y2FzZSAxMjg6dGhpcy4kPW5ldyBkLlRyeShmW2gtMl0sbnVsbCxudWxsLGZbaF0pO2JyZWFrO2Nhc2UgMTI5OnRoaXMuJD1uZXcgZC5UcnkoZltoLTNdLGZbaC0yXVswXSxmW2gtMl1bMV0sZltoXSk7YnJlYWs7Y2FzZSAxMzA6dGhpcy4kPVtmW2gtMV0sZltoXV07YnJlYWs7Y2FzZSAxMzE6dGhpcy4kPW5ldyBkLlRocm93KGZbaF0pO2JyZWFrO2Nhc2UgMTMyOnRoaXMuJD1uZXcgZC5QYXJlbnMoZltoLTFdKTticmVhaztjYXNlIDEzMzp0aGlzLiQ9bmV3IGQuUGFyZW5zKGZbaC0yXSk7YnJlYWs7Y2FzZSAxMzQ6dGhpcy4kPW5ldyBkLldoaWxlKGZbaF0pO2JyZWFrO2Nhc2UgMTM1OnRoaXMuJD1uZXcgZC5XaGlsZShmW2gtMl0se2d1YXJkOmZbaF19KTticmVhaztjYXNlIDEzNjp0aGlzLiQ9bmV3IGQuV2hpbGUoZltoXSx7aW52ZXJ0OiEwfSk7YnJlYWs7Y2FzZSAxMzc6dGhpcy4kPW5ldyBkLldoaWxlKGZbaC0yXSx7aW52ZXJ0OiEwLGd1YXJkOmZbaF19KTticmVhaztjYXNlIDEzODp0aGlzLiQ9ZltoLTFdLmFkZEJvZHkoZltoXSk7YnJlYWs7Y2FzZSAxMzk6dGhpcy4kPWZbaF0uYWRkQm9keShkLkJsb2NrLndyYXAoW2ZbaC0xXV0pKTticmVhaztjYXNlIDE0MDp0aGlzLiQ9ZltoXS5hZGRCb2R5KGQuQmxvY2sud3JhcChbZltoLTFdXSkpO2JyZWFrO2Nhc2UgMTQxOnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgMTQyOnRoaXMuJD0obmV3IGQuV2hpbGUobmV3IGQuTGl0ZXJhbCgidHJ1ZSIpKSkuYWRkQm9keShmW2hdKTticmVhaztjYXNlIDE0Mzp0aGlzLiQ9KG5ldyBkLldoaWxlKG5ldyBkLkxpdGVyYWwoInRydWUiKSkpLmFkZEJvZHkoZC5CbG9jay53cmFwKFtmW2hdXSkpO2JyZWFrO2Nhc2UgMTQ0OnRoaXMuJD1uZXcgZC5Gb3IoZltoLTFdLGZbaF0pO2JyZWFrO2Nhc2UgMTQ1OnRoaXMuJD1uZXcgZC5Gb3IoZltoLTFdLGZbaF0pO2JyZWFrO2Nhc2UgMTQ2OnRoaXMuJD1uZXcgZC5Gb3IoZltoXSxmW2gtMV0pO2JyZWFrO2Nhc2UgMTQ3OnRoaXMuJD17c291cmNlOm5ldyBkLlZhbHVlKGZbaF0pfTticmVhaztjYXNlIDE0ODp0aGlzLiQ9ZnVuY3Rpb24oKXtmW2hdLm93bj1mW2gtMV0ub3duLGZbaF0ubmFtZT1mW2gtMV1bMF0sZltoXS5pbmRleD1mW2gtMV1bMV07cmV0dXJuIGZbaF19KCk7YnJlYWs7Y2FzZSAxNDk6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSAxNTA6dGhpcy4kPWZ1bmN0aW9uKCl7ZltoXS5vd249ITA7cmV0dXJuIGZbaF19KCk7YnJlYWs7Y2FzZSAxNTE6dGhpcy4kPWZbaF07YnJlYWs7Y2FzZSAxNTI6dGhpcy4kPW5ldyBkLlZhbHVlKGZbaF0pO2JyZWFrO2Nhc2UgMTUzOnRoaXMuJD1uZXcgZC5WYWx1ZShmW2hdKTticmVhaztjYXNlIDE1NDp0aGlzLiQ9W2ZbaF1dO2JyZWFrO2Nhc2UgMTU1OnRoaXMuJD1bZltoLTJdLGZbaF1dO2JyZWFrO2Nhc2UgMTU2OnRoaXMuJD17c291cmNlOmZbaF19O2JyZWFrO2Nhc2UgMTU3OnRoaXMuJD17c291cmNlOmZbaF0sb2JqZWN0OiEwfTticmVhaztjYXNlIDE1ODp0aGlzLiQ9e3NvdXJjZTpmW2gtMl0sZ3VhcmQ6ZltoXX07YnJlYWs7Y2FzZSAxNTk6dGhpcy4kPXtzb3VyY2U6ZltoLTJdLGd1YXJkOmZbaF0sb2JqZWN0OiEwfTticmVhaztjYXNlIDE2MDp0aGlzLiQ9e3NvdXJjZTpmW2gtMl0sc3RlcDpmW2hdfTticmVhaztjYXNlIDE2MTp0aGlzLiQ9e3NvdXJjZTpmW2gtNF0sZ3VhcmQ6ZltoLTJdLHN0ZXA6ZltoXX07YnJlYWs7Y2FzZSAxNjI6dGhpcy4kPXtzb3VyY2U6ZltoLTRdLHN0ZXA6ZltoLTJdLGd1YXJkOmZbaF19O2JyZWFrO2Nhc2UgMTYzOnRoaXMuJD1uZXcgZC5Td2l0Y2goZltoLTNdLGZbaC0xXSk7YnJlYWs7Y2FzZSAxNjQ6dGhpcy4kPW5ldyBkLlN3aXRjaChmW2gtNV0sZltoLTNdLGZbaC0xXSk7YnJlYWs7Y2FzZSAxNjU6dGhpcy4kPW5ldyBkLlN3aXRjaChudWxsLGZbaC0xXSk7YnJlYWs7Y2FzZSAxNjY6dGhpcy4kPW5ldyBkLlN3aXRjaChudWxsLGZbaC0zXSxmW2gtMV0pO2JyZWFrO2Nhc2UgMTY3OnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgMTY4OnRoaXMuJD1mW2gtMV0uY29uY2F0KGZbaF0pO2JyZWFrO2Nhc2UgMTY5OnRoaXMuJD1bW2ZbaC0xXSxmW2hdXV07YnJlYWs7Y2FzZSAxNzA6dGhpcy4kPVtbZltoLTJdLGZbaC0xXV1dO2JyZWFrO2Nhc2UgMTcxOnRoaXMuJD1uZXcgZC5JZihmW2gtMV0sZltoXSx7dHlwZTpmW2gtMl19KTticmVhaztjYXNlIDE3Mjp0aGlzLiQ9ZltoLTRdLmFkZEVsc2UobmV3IGQuSWYoZltoLTFdLGZbaF0se3R5cGU6ZltoLTJdfSkpO2JyZWFrO2Nhc2UgMTczOnRoaXMuJD1mW2hdO2JyZWFrO2Nhc2UgMTc0OnRoaXMuJD1mW2gtMl0uYWRkRWxzZShmW2hdKTticmVhaztjYXNlIDE3NTp0aGlzLiQ9bmV3IGQuSWYoZltoXSxkLkJsb2NrLndyYXAoW2ZbaC0yXV0pLHt0eXBlOmZbaC0xXSxzdGF0ZW1lbnQ6ITB9KTticmVhaztjYXNlIDE3Njp0aGlzLiQ9bmV3IGQuSWYoZltoXSxkLkJsb2NrLndyYXAoW2ZbaC0yXV0pLHt0eXBlOmZbaC0xXSxzdGF0ZW1lbnQ6ITB9KTticmVhaztjYXNlIDE3Nzp0aGlzLiQ9bmV3IGQuT3AoZltoLTFdLGZbaF0pO2JyZWFrO2Nhc2UgMTc4OnRoaXMuJD1uZXcgZC5PcCgiLSIsZltoXSk7YnJlYWs7Y2FzZSAxNzk6dGhpcy4kPW5ldyBkLk9wKCIrIixmW2hdKTticmVhaztjYXNlIDE4MDp0aGlzLiQ9bmV3IGQuT3AoIi0tIixmW2hdKTticmVhaztjYXNlIDE4MTp0aGlzLiQ9bmV3IGQuT3AoIisrIixmW2hdKTticmVhaztjYXNlIDE4Mjp0aGlzLiQ9bmV3IGQuT3AoIi0tIixmW2gtMV0sbnVsbCwhMCk7YnJlYWs7Y2FzZSAxODM6dGhpcy4kPW5ldyBkLk9wKCIrKyIsZltoLTFdLG51bGwsITApO2JyZWFrO2Nhc2UgMTg0OnRoaXMuJD1uZXcgZC5FeGlzdGVuY2UoZltoLTFdKTticmVhaztjYXNlIDE4NTp0aGlzLiQ9bmV3IGQuT3AoIisiLGZbaC0yXSxmW2hdKTticmVhaztjYXNlIDE4Njp0aGlzLiQ9bmV3IGQuT3AoIi0iLGZbaC0yXSxmW2hdKTticmVhaztjYXNlIDE4Nzp0aGlzLiQ9bmV3IGQuT3AoZltoLTFdLGZbaC0yXSxmW2hdKTticmVhaztjYXNlIDE4ODp0aGlzLiQ9bmV3IGQuT3AoZltoLTFdLGZbaC0yXSxmW2hdKTticmVhaztjYXNlIDE4OTp0aGlzLiQ9bmV3IGQuT3AoZltoLTFdLGZbaC0yXSxmW2hdKTticmVhaztjYXNlIDE5MDp0aGlzLiQ9bmV3IGQuT3AoZltoLTFdLGZbaC0yXSxmW2hdKTticmVhaztjYXNlIDE5MTp0aGlzLiQ9ZnVuY3Rpb24oKXtyZXR1cm4gZltoLTFdLmNoYXJBdCgwKT09PSIhIj8obmV3IGQuT3AoZltoLTFdLnNsaWNlKDEpLGZbaC0yXSxmW2hdKSkuaW52ZXJ0KCk6bmV3IGQuT3AoZltoLTFdLGZbaC0yXSxmW2hdKX0oKTticmVhaztjYXNlIDE5Mjp0aGlzLiQ9bmV3IGQuQXNzaWduKGZbaC0yXSxmW2hdLGZbaC0xXSk7YnJlYWs7Y2FzZSAxOTM6dGhpcy4kPW5ldyBkLkFzc2lnbihmW2gtNF0sZltoLTFdLGZbaC0zXSk7YnJlYWs7Y2FzZSAxOTQ6dGhpcy4kPW5ldyBkLkV4dGVuZHMoZltoLTJdLGZbaF0pfX0sdGFibGU6W3sxOlsyLDFdLDM6MSw0OjIsNTozLDc6NCw4OjYsOTo3LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjU6WzEsNV0sMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MjMsNDE6NjAsNDI6WzEsNDRdLDQzOlsxLDQ2XSw0NDpbMSwyOV0sNDc6MzAsNDg6WzEsNTddLDQ5OlsxLDU4XSw1NTo0Nyw1Njo0OCw1ODozNiw2MDoyNSw2MToyNiw2MjoyNyw3MzpbMSw2N10sNzY6WzEsNDNdLDgwOlsxLDI4XSw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezE6WzNdfSx7MTpbMiwyXSw2OlsxLDcxXX0sezY6WzEsNzJdfSx7MTpbMiw0XSw2OlsyLDRdLDI2OlsyLDRdLDk5OlsyLDRdfSx7NDo3NCw3OjQsODo2LDk6NywxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI2OlsxLDczXSwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7MTpbMiw3XSw2OlsyLDddLDI2OlsyLDddLDk5OlsyLDddLDEwMDo4NCwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDEyMzpbMSw4M10sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7MTpbMiw4XSw2OlsyLDhdLDI2OlsyLDhdLDk5OlsyLDhdLDEwMDo4NywxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA2Ojg4LDEwNzpbMSw2NV0sMTA4OjY2LDEyMzpbMSw4Nl19LHsxOlsyLDEzXSw2OlsyLDEzXSwyNTpbMiwxM10sMjY6WzIsMTNdLDQ2OlsyLDEzXSw1MTpbMiwxM10sNTQ6WzIsMTNdLDU5OjkwLDYzOlsxLDkyXSw2NDpbMSw5M10sNjU6WzEsOTRdLDY2Ojk1LDY3OlsxLDk2XSw2OTpbMiwxM10sNzA6WzEsOTddLDcxOlsxLDk4XSw3NTpbMiwxM10sNzg6ODksODE6WzEsOTFdLDgyOlsyLDEwMl0sODM6WzIsMTNdLDg4OlsyLDEzXSw5MDpbMiwxM10sOTk6WzIsMTNdLDEwMTpbMiwxM10sMTAyOlsyLDEzXSwxMDM6WzIsMTNdLDEwNzpbMiwxM10sMTE1OlsyLDEzXSwxMjM6WzIsMTNdLDEyNTpbMiwxM10sMTI2OlsyLDEzXSwxMjk6WzIsMTNdLDEzMDpbMiwxM10sMTMxOlsyLDEzXSwxMzI6WzIsMTNdLDEzMzpbMiwxM10sMTM0OlsyLDEzXX0sezE6WzIsMTRdLDY6WzIsMTRdLDI1OlsyLDE0XSwyNjpbMiwxNF0sNDY6WzIsMTRdLDUxOlsyLDE0XSw1NDpbMiwxNF0sNTk6MTAwLDYzOlsxLDkyXSw2NDpbMSw5M10sNjU6WzEsOTRdLDY2Ojk1LDY3OlsxLDk2XSw2OTpbMiwxNF0sNzA6WzEsOTddLDcxOlsxLDk4XSw3NTpbMiwxNF0sNzg6OTksODE6WzEsOTFdLDgyOlsyLDEwMl0sODM6WzIsMTRdLDg4OlsyLDE0XSw5MDpbMiwxNF0sOTk6WzIsMTRdLDEwMTpbMiwxNF0sMTAyOlsyLDE0XSwxMDM6WzIsMTRdLDEwNzpbMiwxNF0sMTE1OlsyLDE0XSwxMjM6WzIsMTRdLDEyNTpbMiwxNF0sMTI2OlsyLDE0XSwxMjk6WzIsMTRdLDEzMDpbMiwxNF0sMTMxOlsyLDE0XSwxMzI6WzIsMTRdLDEzMzpbMiwxNF0sMTM0OlsyLDE0XX0sezE6WzIsMTVdLDY6WzIsMTVdLDI1OlsyLDE1XSwyNjpbMiwxNV0sNDY6WzIsMTVdLDUxOlsyLDE1XSw1NDpbMiwxNV0sNjk6WzIsMTVdLDc1OlsyLDE1XSw4MzpbMiwxNV0sODg6WzIsMTVdLDkwOlsyLDE1XSw5OTpbMiwxNV0sMTAxOlsyLDE1XSwxMDI6WzIsMTVdLDEwMzpbMiwxNV0sMTA3OlsyLDE1XSwxMTU6WzIsMTVdLDEyMzpbMiwxNV0sMTI1OlsyLDE1XSwxMjY6WzIsMTVdLDEyOTpbMiwxNV0sMTMwOlsyLDE1XSwxMzE6WzIsMTVdLDEzMjpbMiwxNV0sMTMzOlsyLDE1XSwxMzQ6WzIsMTVdfSx7MTpbMiwxNl0sNjpbMiwxNl0sMjU6WzIsMTZdLDI2OlsyLDE2XSw0NjpbMiwxNl0sNTE6WzIsMTZdLDU0OlsyLDE2XSw2OTpbMiwxNl0sNzU6WzIsMTZdLDgzOlsyLDE2XSw4ODpbMiwxNl0sOTA6WzIsMTZdLDk5OlsyLDE2XSwxMDE6WzIsMTZdLDEwMjpbMiwxNl0sMTAzOlsyLDE2XSwxMDc6WzIsMTZdLDExNTpbMiwxNl0sMTIzOlsyLDE2XSwxMjU6WzIsMTZdLDEyNjpbMiwxNl0sMTI5OlsyLDE2XSwxMzA6WzIsMTZdLDEzMTpbMiwxNl0sMTMyOlsyLDE2XSwxMzM6WzIsMTZdLDEzNDpbMiwxNl19LHsxOlsyLDE3XSw2OlsyLDE3XSwyNTpbMiwxN10sMjY6WzIsMTddLDQ2OlsyLDE3XSw1MTpbMiwxN10sNTQ6WzIsMTddLDY5OlsyLDE3XSw3NTpbMiwxN10sODM6WzIsMTddLDg4OlsyLDE3XSw5MDpbMiwxN10sOTk6WzIsMTddLDEwMTpbMiwxN10sMTAyOlsyLDE3XSwxMDM6WzIsMTddLDEwNzpbMiwxN10sMTE1OlsyLDE3XSwxMjM6WzIsMTddLDEyNTpbMiwxN10sMTI2OlsyLDE3XSwxMjk6WzIsMTddLDEzMDpbMiwxN10sMTMxOlsyLDE3XSwxMzI6WzIsMTddLDEzMzpbMiwxN10sMTM0OlsyLDE3XX0sezE6WzIsMThdLDY6WzIsMThdLDI1OlsyLDE4XSwyNjpbMiwxOF0sNDY6WzIsMThdLDUxOlsyLDE4XSw1NDpbMiwxOF0sNjk6WzIsMThdLDc1OlsyLDE4XSw4MzpbMiwxOF0sODg6WzIsMThdLDkwOlsyLDE4XSw5OTpbMiwxOF0sMTAxOlsyLDE4XSwxMDI6WzIsMThdLDEwMzpbMiwxOF0sMTA3OlsyLDE4XSwxMTU6WzIsMThdLDEyMzpbMiwxOF0sMTI1OlsyLDE4XSwxMjY6WzIsMThdLDEyOTpbMiwxOF0sMTMwOlsyLDE4XSwxMzE6WzIsMThdLDEzMjpbMiwxOF0sMTMzOlsyLDE4XSwxMzQ6WzIsMThdfSx7MTpbMiwxOV0sNjpbMiwxOV0sMjU6WzIsMTldLDI2OlsyLDE5XSw0NjpbMiwxOV0sNTE6WzIsMTldLDU0OlsyLDE5XSw2OTpbMiwxOV0sNzU6WzIsMTldLDgzOlsyLDE5XSw4ODpbMiwxOV0sOTA6WzIsMTldLDk5OlsyLDE5XSwxMDE6WzIsMTldLDEwMjpbMiwxOV0sMTAzOlsyLDE5XSwxMDc6WzIsMTldLDExNTpbMiwxOV0sMTIzOlsyLDE5XSwxMjU6WzIsMTldLDEyNjpbMiwxOV0sMTI5OlsyLDE5XSwxMzA6WzIsMTldLDEzMTpbMiwxOV0sMTMyOlsyLDE5XSwxMzM6WzIsMTldLDEzNDpbMiwxOV19LHsxOlsyLDIwXSw2OlsyLDIwXSwyNTpbMiwyMF0sMjY6WzIsMjBdLDQ2OlsyLDIwXSw1MTpbMiwyMF0sNTQ6WzIsMjBdLDY5OlsyLDIwXSw3NTpbMiwyMF0sODM6WzIsMjBdLDg4OlsyLDIwXSw5MDpbMiwyMF0sOTk6WzIsMjBdLDEwMTpbMiwyMF0sMTAyOlsyLDIwXSwxMDM6WzIsMjBdLDEwNzpbMiwyMF0sMTE1OlsyLDIwXSwxMjM6WzIsMjBdLDEyNTpbMiwyMF0sMTI2OlsyLDIwXSwxMjk6WzIsMjBdLDEzMDpbMiwyMF0sMTMxOlsyLDIwXSwxMzI6WzIsMjBdLDEzMzpbMiwyMF0sMTM0OlsyLDIwXX0sezE6WzIsMjFdLDY6WzIsMjFdLDI1OlsyLDIxXSwyNjpbMiwyMV0sNDY6WzIsMjFdLDUxOlsyLDIxXSw1NDpbMiwyMV0sNjk6WzIsMjFdLDc1OlsyLDIxXSw4MzpbMiwyMV0sODg6WzIsMjFdLDkwOlsyLDIxXSw5OTpbMiwyMV0sMTAxOlsyLDIxXSwxMDI6WzIsMjFdLDEwMzpbMiwyMV0sMTA3OlsyLDIxXSwxMTU6WzIsMjFdLDEyMzpbMiwyMV0sMTI1OlsyLDIxXSwxMjY6WzIsMjFdLDEyOTpbMiwyMV0sMTMwOlsyLDIxXSwxMzE6WzIsMjFdLDEzMjpbMiwyMV0sMTMzOlsyLDIxXSwxMzQ6WzIsMjFdfSx7MTpbMiwyMl0sNjpbMiwyMl0sMjU6WzIsMjJdLDI2OlsyLDIyXSw0NjpbMiwyMl0sNTE6WzIsMjJdLDU0OlsyLDIyXSw2OTpbMiwyMl0sNzU6WzIsMjJdLDgzOlsyLDIyXSw4ODpbMiwyMl0sOTA6WzIsMjJdLDk5OlsyLDIyXSwxMDE6WzIsMjJdLDEwMjpbMiwyMl0sMTAzOlsyLDIyXSwxMDc6WzIsMjJdLDExNTpbMiwyMl0sMTIzOlsyLDIyXSwxMjU6WzIsMjJdLDEyNjpbMiwyMl0sMTI5OlsyLDIyXSwxMzA6WzIsMjJdLDEzMTpbMiwyMl0sMTMyOlsyLDIyXSwxMzM6WzIsMjJdLDEzNDpbMiwyMl19LHsxOlsyLDIzXSw2OlsyLDIzXSwyNTpbMiwyM10sMjY6WzIsMjNdLDQ2OlsyLDIzXSw1MTpbMiwyM10sNTQ6WzIsMjNdLDY5OlsyLDIzXSw3NTpbMiwyM10sODM6WzIsMjNdLDg4OlsyLDIzXSw5MDpbMiwyM10sOTk6WzIsMjNdLDEwMTpbMiwyM10sMTAyOlsyLDIzXSwxMDM6WzIsMjNdLDEwNzpbMiwyM10sMTE1OlsyLDIzXSwxMjM6WzIsMjNdLDEyNTpbMiwyM10sMTI2OlsyLDIzXSwxMjk6WzIsMjNdLDEzMDpbMiwyM10sMTMxOlsyLDIzXSwxMzI6WzIsMjNdLDEzMzpbMiwyM10sMTM0OlsyLDIzXX0sezE6WzIsOV0sNjpbMiw5XSwyNjpbMiw5XSw5OTpbMiw5XSwxMDE6WzIsOV0sMTAzOlsyLDldLDEwNzpbMiw5XSwxMjM6WzIsOV19LHsxOlsyLDEwXSw2OlsyLDEwXSwyNjpbMiwxMF0sOTk6WzIsMTBdLDEwMTpbMiwxMF0sMTAzOlsyLDEwXSwxMDc6WzIsMTBdLDEyMzpbMiwxMF19LHsxOlsyLDExXSw2OlsyLDExXSwyNjpbMiwxMV0sOTk6WzIsMTFdLDEwMTpbMiwxMV0sMTAzOlsyLDExXSwxMDc6WzIsMTFdLDEyMzpbMiwxMV19LHsxOlsyLDEyXSw2OlsyLDEyXSwyNjpbMiwxMl0sOTk6WzIsMTJdLDEwMTpbMiwxMl0sMTAzOlsyLDEyXSwxMDc6WzIsMTJdLDEyMzpbMiwxMl19LHsxOlsyLDY5XSw2OlsyLDY5XSwyNTpbMiw2OV0sMjY6WzIsNjldLDM3OlsxLDEwMV0sNDY6WzIsNjldLDUxOlsyLDY5XSw1NDpbMiw2OV0sNjM6WzIsNjldLDY0OlsyLDY5XSw2NTpbMiw2OV0sNjc6WzIsNjldLDY5OlsyLDY5XSw3MDpbMiw2OV0sNzE6WzIsNjldLDc1OlsyLDY5XSw4MTpbMiw2OV0sODI6WzIsNjldLDgzOlsyLDY5XSw4ODpbMiw2OV0sOTA6WzIsNjldLDk5OlsyLDY5XSwxMDE6WzIsNjldLDEwMjpbMiw2OV0sMTAzOlsyLDY5XSwxMDc6WzIsNjldLDExNTpbMiw2OV0sMTIzOlsyLDY5XSwxMjU6WzIsNjldLDEyNjpbMiw2OV0sMTI5OlsyLDY5XSwxMzA6WzIsNjldLDEzMTpbMiw2OV0sMTMyOlsyLDY5XSwxMzM6WzIsNjldLDEzNDpbMiw2OV19LHsxOlsyLDcwXSw2OlsyLDcwXSwyNTpbMiw3MF0sMjY6WzIsNzBdLDQ2OlsyLDcwXSw1MTpbMiw3MF0sNTQ6WzIsNzBdLDYzOlsyLDcwXSw2NDpbMiw3MF0sNjU6WzIsNzBdLDY3OlsyLDcwXSw2OTpbMiw3MF0sNzA6WzIsNzBdLDcxOlsyLDcwXSw3NTpbMiw3MF0sODE6WzIsNzBdLDgyOlsyLDcwXSw4MzpbMiw3MF0sODg6WzIsNzBdLDkwOlsyLDcwXSw5OTpbMiw3MF0sMTAxOlsyLDcwXSwxMDI6WzIsNzBdLDEwMzpbMiw3MF0sMTA3OlsyLDcwXSwxMTU6WzIsNzBdLDEyMzpbMiw3MF0sMTI1OlsyLDcwXSwxMjY6WzIsNzBdLDEyOTpbMiw3MF0sMTMwOlsyLDcwXSwxMzE6WzIsNzBdLDEzMjpbMiw3MF0sMTMzOlsyLDcwXSwxMzQ6WzIsNzBdfSx7MTpbMiw3MV0sNjpbMiw3MV0sMjU6WzIsNzFdLDI2OlsyLDcxXSw0NjpbMiw3MV0sNTE6WzIsNzFdLDU0OlsyLDcxXSw2MzpbMiw3MV0sNjQ6WzIsNzFdLDY1OlsyLDcxXSw2NzpbMiw3MV0sNjk6WzIsNzFdLDcwOlsyLDcxXSw3MTpbMiw3MV0sNzU6WzIsNzFdLDgxOlsyLDcxXSw4MjpbMiw3MV0sODM6WzIsNzFdLDg4OlsyLDcxXSw5MDpbMiw3MV0sOTk6WzIsNzFdLDEwMTpbMiw3MV0sMTAyOlsyLDcxXSwxMDM6WzIsNzFdLDEwNzpbMiw3MV0sMTE1OlsyLDcxXSwxMjM6WzIsNzFdLDEyNTpbMiw3MV0sMTI2OlsyLDcxXSwxMjk6WzIsNzFdLDEzMDpbMiw3MV0sMTMxOlsyLDcxXSwxMzI6WzIsNzFdLDEzMzpbMiw3MV0sMTM0OlsyLDcxXX0sezE6WzIsNzJdLDY6WzIsNzJdLDI1OlsyLDcyXSwyNjpbMiw3Ml0sNDY6WzIsNzJdLDUxOlsyLDcyXSw1NDpbMiw3Ml0sNjM6WzIsNzJdLDY0OlsyLDcyXSw2NTpbMiw3Ml0sNjc6WzIsNzJdLDY5OlsyLDcyXSw3MDpbMiw3Ml0sNzE6WzIsNzJdLDc1OlsyLDcyXSw4MTpbMiw3Ml0sODI6WzIsNzJdLDgzOlsyLDcyXSw4ODpbMiw3Ml0sOTA6WzIsNzJdLDk5OlsyLDcyXSwxMDE6WzIsNzJdLDEwMjpbMiw3Ml0sMTAzOlsyLDcyXSwxMDc6WzIsNzJdLDExNTpbMiw3Ml0sMTIzOlsyLDcyXSwxMjU6WzIsNzJdLDEyNjpbMiw3Ml0sMTI5OlsyLDcyXSwxMzA6WzIsNzJdLDEzMTpbMiw3Ml0sMTMyOlsyLDcyXSwxMzM6WzIsNzJdLDEzNDpbMiw3Ml19LHsxOlsyLDczXSw2OlsyLDczXSwyNTpbMiw3M10sMjY6WzIsNzNdLDQ2OlsyLDczXSw1MTpbMiw3M10sNTQ6WzIsNzNdLDYzOlsyLDczXSw2NDpbMiw3M10sNjU6WzIsNzNdLDY3OlsyLDczXSw2OTpbMiw3M10sNzA6WzIsNzNdLDcxOlsyLDczXSw3NTpbMiw3M10sODE6WzIsNzNdLDgyOlsyLDczXSw4MzpbMiw3M10sODg6WzIsNzNdLDkwOlsyLDczXSw5OTpbMiw3M10sMTAxOlsyLDczXSwxMDI6WzIsNzNdLDEwMzpbMiw3M10sMTA3OlsyLDczXSwxMTU6WzIsNzNdLDEyMzpbMiw3M10sMTI1OlsyLDczXSwxMjY6WzIsNzNdLDEyOTpbMiw3M10sMTMwOlsyLDczXSwxMzE6WzIsNzNdLDEzMjpbMiw3M10sMTMzOlsyLDczXSwxMzQ6WzIsNzNdfSx7MTpbMiwxMDBdLDY6WzIsMTAwXSwyNTpbMiwxMDBdLDI2OlsyLDEwMF0sNDY6WzIsMTAwXSw1MTpbMiwxMDBdLDU0OlsyLDEwMF0sNjM6WzIsMTAwXSw2NDpbMiwxMDBdLDY1OlsyLDEwMF0sNjc6WzIsMTAwXSw2OTpbMiwxMDBdLDcwOlsyLDEwMF0sNzE6WzIsMTAwXSw3NTpbMiwxMDBdLDc5OjEwMiw4MTpbMiwxMDBdLDgyOlsxLDEwM10sODM6WzIsMTAwXSw4ODpbMiwxMDBdLDkwOlsyLDEwMF0sOTk6WzIsMTAwXSwxMDE6WzIsMTAwXSwxMDI6WzIsMTAwXSwxMDM6WzIsMTAwXSwxMDc6WzIsMTAwXSwxMTU6WzIsMTAwXSwxMjM6WzIsMTAwXSwxMjU6WzIsMTAwXSwxMjY6WzIsMTAwXSwxMjk6WzIsMTAwXSwxMzA6WzIsMTAwXSwxMzE6WzIsMTAwXSwxMzI6WzIsMTAwXSwxMzM6WzIsMTAwXSwxMzQ6WzIsMTAwXX0sezI3OjEwNywyODpbMSw3MF0sNDE6MTA4LDQ1OjEwNCw0NjpbMiw1MV0sNTE6WzIsNTFdLDUyOjEwNSw1MzoxMDYsNTU6MTA5LDU2OjExMCw3MzpbMSw2N10sODY6WzEsMTExXSw4NzpbMSwxMTJdfSx7NToxMTMsMjU6WzEsNV19LHs4OjExNCw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjExNiw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjExNyw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHsxNDoxMTksMTU6MTIwLDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjEyMSw0MTo2MCw1NTo0Nyw1Njo0OCw1ODoxMTgsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDgwOlsxLDI4XSw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5ODpbMSw1M119LHsxNDoxMTksMTU6MTIwLDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjEyMSw0MTo2MCw1NTo0Nyw1Njo0OCw1ODoxMjIsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDgwOlsxLDI4XSw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5ODpbMSw1M119LHsxOlsyLDY2XSw2OlsyLDY2XSwyNTpbMiw2Nl0sMjY6WzIsNjZdLDM3OlsyLDY2XSw0NjpbMiw2Nl0sNTE6WzIsNjZdLDU0OlsyLDY2XSw2MzpbMiw2Nl0sNjQ6WzIsNjZdLDY1OlsyLDY2XSw2NzpbMiw2Nl0sNjk6WzIsNjZdLDcwOlsyLDY2XSw3MTpbMiw2Nl0sNzU6WzIsNjZdLDc3OlsxLDEyNl0sODE6WzIsNjZdLDgyOlsyLDY2XSw4MzpbMiw2Nl0sODg6WzIsNjZdLDkwOlsyLDY2XSw5OTpbMiw2Nl0sMTAxOlsyLDY2XSwxMDI6WzIsNjZdLDEwMzpbMiw2Nl0sMTA3OlsyLDY2XSwxMTU6WzIsNjZdLDEyMzpbMiw2Nl0sMTI1OlsyLDY2XSwxMjY6WzIsNjZdLDEyNzpbMSwxMjNdLDEyODpbMSwxMjRdLDEyOTpbMiw2Nl0sMTMwOlsyLDY2XSwxMzE6WzIsNjZdLDEzMjpbMiw2Nl0sMTMzOlsyLDY2XSwxMzQ6WzIsNjZdLDEzNTpbMSwxMjVdfSx7MTpbMiwxNzNdLDY6WzIsMTczXSwyNTpbMiwxNzNdLDI2OlsyLDE3M10sNDY6WzIsMTczXSw1MTpbMiwxNzNdLDU0OlsyLDE3M10sNjk6WzIsMTczXSw3NTpbMiwxNzNdLDgzOlsyLDE3M10sODg6WzIsMTczXSw5MDpbMiwxNzNdLDk5OlsyLDE3M10sMTAxOlsyLDE3M10sMTAyOlsyLDE3M10sMTAzOlsyLDE3M10sMTA3OlsyLDE3M10sMTE1OlsyLDE3M10sMTE4OlsxLDEyN10sMTIzOlsyLDE3M10sMTI1OlsyLDE3M10sMTI2OlsyLDE3M10sMTI5OlsyLDE3M10sMTMwOlsyLDE3M10sMTMxOlsyLDE3M10sMTMyOlsyLDE3M10sMTMzOlsyLDE3M10sMTM0OlsyLDE3M119LHs1OjEyOCwyNTpbMSw1XX0sezU6MTI5LDI1OlsxLDVdfSx7MTpbMiwxNDFdLDY6WzIsMTQxXSwyNTpbMiwxNDFdLDI2OlsyLDE0MV0sNDY6WzIsMTQxXSw1MTpbMiwxNDFdLDU0OlsyLDE0MV0sNjk6WzIsMTQxXSw3NTpbMiwxNDFdLDgzOlsyLDE0MV0sODg6WzIsMTQxXSw5MDpbMiwxNDFdLDk5OlsyLDE0MV0sMTAxOlsyLDE0MV0sMTAyOlsyLDE0MV0sMTAzOlsyLDE0MV0sMTA3OlsyLDE0MV0sMTE1OlsyLDE0MV0sMTIzOlsyLDE0MV0sMTI1OlsyLDE0MV0sMTI2OlsyLDE0MV0sMTI5OlsyLDE0MV0sMTMwOlsyLDE0MV0sMTMxOlsyLDE0MV0sMTMyOlsyLDE0MV0sMTMzOlsyLDE0MV0sMTM0OlsyLDE0MV19LHs1OjEzMCwyNTpbMSw1XX0sezg6MTMxLDk6MTE1LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjU6WzEsMTMyXSwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7MTpbMiw5MF0sNToxMzMsNjpbMiw5MF0sMTQ6MTE5LDE1OjEyMCwyNTpbMSw1XSwyNjpbMiw5MF0sMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MTIxLDQxOjYwLDQ2OlsyLDkwXSw1MTpbMiw5MF0sNTQ6WzIsOTBdLDU1OjQ3LDU2OjQ4LDU4OjEzNSw2MDoyNSw2MToyNiw2MjoyNyw2OTpbMiw5MF0sNzM6WzEsNjddLDc1OlsyLDkwXSw3NzpbMSwxMzRdLDgwOlsxLDI4XSw4MzpbMiw5MF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sODg6WzIsOTBdLDkwOlsyLDkwXSw5ODpbMSw1M10sOTk6WzIsOTBdLDEwMTpbMiw5MF0sMTAyOlsyLDkwXSwxMDM6WzIsOTBdLDEwNzpbMiw5MF0sMTE1OlsyLDkwXSwxMjM6WzIsOTBdLDEyNTpbMiw5MF0sMTI2OlsyLDkwXSwxMjk6WzIsOTBdLDEzMDpbMiw5MF0sMTMxOlsyLDkwXSwxMzI6WzIsOTBdLDEzMzpbMiw5MF0sMTM0OlsyLDkwXX0sezE6WzIsNDNdLDY6WzIsNDNdLDg6MTM2LDk6MTE1LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjY6WzIsNDNdLDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sOTk6WzIsNDNdLDEwMDozOSwxMDE6WzIsNDNdLDEwMzpbMiw0M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMiw0M10sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTIzOlsyLDQzXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjEzNyw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHsxOlsyLDQ0XSw2OlsyLDQ0XSwyNTpbMiw0NF0sMjY6WzIsNDRdLDUxOlsyLDQ0XSw3NTpbMiw0NF0sOTk6WzIsNDRdLDEwMTpbMiw0NF0sMTAzOlsyLDQ0XSwxMDc6WzIsNDRdLDEyMzpbMiw0NF19LHsxOlsyLDY3XSw2OlsyLDY3XSwyNTpbMiw2N10sMjY6WzIsNjddLDM3OlsyLDY3XSw0NjpbMiw2N10sNTE6WzIsNjddLDU0OlsyLDY3XSw2MzpbMiw2N10sNjQ6WzIsNjddLDY1OlsyLDY3XSw2NzpbMiw2N10sNjk6WzIsNjddLDcwOlsyLDY3XSw3MTpbMiw2N10sNzU6WzIsNjddLDgxOlsyLDY3XSw4MjpbMiw2N10sODM6WzIsNjddLDg4OlsyLDY3XSw5MDpbMiw2N10sOTk6WzIsNjddLDEwMTpbMiw2N10sMTAyOlsyLDY3XSwxMDM6WzIsNjddLDEwNzpbMiw2N10sMTE1OlsyLDY3XSwxMjM6WzIsNjddLDEyNTpbMiw2N10sMTI2OlsyLDY3XSwxMjk6WzIsNjddLDEzMDpbMiw2N10sMTMxOlsyLDY3XSwxMzI6WzIsNjddLDEzMzpbMiw2N10sMTM0OlsyLDY3XX0sezE6WzIsNjhdLDY6WzIsNjhdLDI1OlsyLDY4XSwyNjpbMiw2OF0sMzc6WzIsNjhdLDQ2OlsyLDY4XSw1MTpbMiw2OF0sNTQ6WzIsNjhdLDYzOlsyLDY4XSw2NDpbMiw2OF0sNjU6WzIsNjhdLDY3OlsyLDY4XSw2OTpbMiw2OF0sNzA6WzIsNjhdLDcxOlsyLDY4XSw3NTpbMiw2OF0sODE6WzIsNjhdLDgyOlsyLDY4XSw4MzpbMiw2OF0sODg6WzIsNjhdLDkwOlsyLDY4XSw5OTpbMiw2OF0sMTAxOlsyLDY4XSwxMDI6WzIsNjhdLDEwMzpbMiw2OF0sMTA3OlsyLDY4XSwxMTU6WzIsNjhdLDEyMzpbMiw2OF0sMTI1OlsyLDY4XSwxMjY6WzIsNjhdLDEyOTpbMiw2OF0sMTMwOlsyLDY4XSwxMzE6WzIsNjhdLDEzMjpbMiw2OF0sMTMzOlsyLDY4XSwxMzQ6WzIsNjhdfSx7MTpbMiwyOV0sNjpbMiwyOV0sMjU6WzIsMjldLDI2OlsyLDI5XSw0NjpbMiwyOV0sNTE6WzIsMjldLDU0OlsyLDI5XSw2MzpbMiwyOV0sNjQ6WzIsMjldLDY1OlsyLDI5XSw2NzpbMiwyOV0sNjk6WzIsMjldLDcwOlsyLDI5XSw3MTpbMiwyOV0sNzU6WzIsMjldLDgxOlsyLDI5XSw4MjpbMiwyOV0sODM6WzIsMjldLDg4OlsyLDI5XSw5MDpbMiwyOV0sOTk6WzIsMjldLDEwMTpbMiwyOV0sMTAyOlsyLDI5XSwxMDM6WzIsMjldLDEwNzpbMiwyOV0sMTE1OlsyLDI5XSwxMjM6WzIsMjldLDEyNTpbMiwyOV0sMTI2OlsyLDI5XSwxMjk6WzIsMjldLDEzMDpbMiwyOV0sMTMxOlsyLDI5XSwxMzI6WzIsMjldLDEzMzpbMiwyOV0sMTM0OlsyLDI5XX0sezE6WzIsMzBdLDY6WzIsMzBdLDI1OlsyLDMwXSwyNjpbMiwzMF0sNDY6WzIsMzBdLDUxOlsyLDMwXSw1NDpbMiwzMF0sNjM6WzIsMzBdLDY0OlsyLDMwXSw2NTpbMiwzMF0sNjc6WzIsMzBdLDY5OlsyLDMwXSw3MDpbMiwzMF0sNzE6WzIsMzBdLDc1OlsyLDMwXSw4MTpbMiwzMF0sODI6WzIsMzBdLDgzOlsyLDMwXSw4ODpbMiwzMF0sOTA6WzIsMzBdLDk5OlsyLDMwXSwxMDE6WzIsMzBdLDEwMjpbMiwzMF0sMTAzOlsyLDMwXSwxMDc6WzIsMzBdLDExNTpbMiwzMF0sMTIzOlsyLDMwXSwxMjU6WzIsMzBdLDEyNjpbMiwzMF0sMTI5OlsyLDMwXSwxMzA6WzIsMzBdLDEzMTpbMiwzMF0sMTMyOlsyLDMwXSwxMzM6WzIsMzBdLDEzNDpbMiwzMF19LHsxOlsyLDMxXSw2OlsyLDMxXSwyNTpbMiwzMV0sMjY6WzIsMzFdLDQ2OlsyLDMxXSw1MTpbMiwzMV0sNTQ6WzIsMzFdLDYzOlsyLDMxXSw2NDpbMiwzMV0sNjU6WzIsMzFdLDY3OlsyLDMxXSw2OTpbMiwzMV0sNzA6WzIsMzFdLDcxOlsyLDMxXSw3NTpbMiwzMV0sODE6WzIsMzFdLDgyOlsyLDMxXSw4MzpbMiwzMV0sODg6WzIsMzFdLDkwOlsyLDMxXSw5OTpbMiwzMV0sMTAxOlsyLDMxXSwxMDI6WzIsMzFdLDEwMzpbMiwzMV0sMTA3OlsyLDMxXSwxMTU6WzIsMzFdLDEyMzpbMiwzMV0sMTI1OlsyLDMxXSwxMjY6WzIsMzFdLDEyOTpbMiwzMV0sMTMwOlsyLDMxXSwxMzE6WzIsMzFdLDEzMjpbMiwzMV0sMTMzOlsyLDMxXSwxMzQ6WzIsMzFdfSx7MTpbMiwzMl0sNjpbMiwzMl0sMjU6WzIsMzJdLDI2OlsyLDMyXSw0NjpbMiwzMl0sNTE6WzIsMzJdLDU0OlsyLDMyXSw2MzpbMiwzMl0sNjQ6WzIsMzJdLDY1OlsyLDMyXSw2NzpbMiwzMl0sNjk6WzIsMzJdLDcwOlsyLDMyXSw3MTpbMiwzMl0sNzU6WzIsMzJdLDgxOlsyLDMyXSw4MjpbMiwzMl0sODM6WzIsMzJdLDg4OlsyLDMyXSw5MDpbMiwzMl0sOTk6WzIsMzJdLDEwMTpbMiwzMl0sMTAyOlsyLDMyXSwxMDM6WzIsMzJdLDEwNzpbMiwzMl0sMTE1OlsyLDMyXSwxMjM6WzIsMzJdLDEyNTpbMiwzMl0sMTI2OlsyLDMyXSwxMjk6WzIsMzJdLDEzMDpbMiwzMl0sMTMxOlsyLDMyXSwxMzI6WzIsMzJdLDEzMzpbMiwzMl0sMTM0OlsyLDMyXX0sezQ6MTM4LDc6NCw4OjYsOTo3LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjU6WzEsMTM5XSwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7ODoxNDAsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNTpbMSwxNDRdLDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTc6MTQ1LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg0OjE0Miw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw4ODpbMSwxNDFdLDkxOjE0Myw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezE6WzIsMTA2XSw2OlsyLDEwNl0sMjU6WzIsMTA2XSwyNjpbMiwxMDZdLDQ2OlsyLDEwNl0sNTE6WzIsMTA2XSw1NDpbMiwxMDZdLDYzOlsyLDEwNl0sNjQ6WzIsMTA2XSw2NTpbMiwxMDZdLDY3OlsyLDEwNl0sNjk6WzIsMTA2XSw3MDpbMiwxMDZdLDcxOlsyLDEwNl0sNzU6WzIsMTA2XSw4MTpbMiwxMDZdLDgyOlsyLDEwNl0sODM6WzIsMTA2XSw4ODpbMiwxMDZdLDkwOlsyLDEwNl0sOTk6WzIsMTA2XSwxMDE6WzIsMTA2XSwxMDI6WzIsMTA2XSwxMDM6WzIsMTA2XSwxMDc6WzIsMTA2XSwxMTU6WzIsMTA2XSwxMjM6WzIsMTA2XSwxMjU6WzIsMTA2XSwxMjY6WzIsMTA2XSwxMjk6WzIsMTA2XSwxMzA6WzIsMTA2XSwxMzE6WzIsMTA2XSwxMzI6WzIsMTA2XSwxMzM6WzIsMTA2XSwxMzQ6WzIsMTA2XX0sezE6WzIsMTA3XSw2OlsyLDEwN10sMjU6WzIsMTA3XSwyNjpbMiwxMDddLDI3OjE0NiwyODpbMSw3MF0sNDY6WzIsMTA3XSw1MTpbMiwxMDddLDU0OlsyLDEwN10sNjM6WzIsMTA3XSw2NDpbMiwxMDddLDY1OlsyLDEwN10sNjc6WzIsMTA3XSw2OTpbMiwxMDddLDcwOlsyLDEwN10sNzE6WzIsMTA3XSw3NTpbMiwxMDddLDgxOlsyLDEwN10sODI6WzIsMTA3XSw4MzpbMiwxMDddLDg4OlsyLDEwN10sOTA6WzIsMTA3XSw5OTpbMiwxMDddLDEwMTpbMiwxMDddLDEwMjpbMiwxMDddLDEwMzpbMiwxMDddLDEwNzpbMiwxMDddLDExNTpbMiwxMDddLDEyMzpbMiwxMDddLDEyNTpbMiwxMDddLDEyNjpbMiwxMDddLDEyOTpbMiwxMDddLDEzMDpbMiwxMDddLDEzMTpbMiwxMDddLDEzMjpbMiwxMDddLDEzMzpbMiwxMDddLDEzNDpbMiwxMDddfSx7MjU6WzIsNDddfSx7MjU6WzIsNDhdfSx7MTpbMiw2Ml0sNjpbMiw2Ml0sMjU6WzIsNjJdLDI2OlsyLDYyXSwzNzpbMiw2Ml0sNDY6WzIsNjJdLDUxOlsyLDYyXSw1NDpbMiw2Ml0sNjM6WzIsNjJdLDY0OlsyLDYyXSw2NTpbMiw2Ml0sNjc6WzIsNjJdLDY5OlsyLDYyXSw3MDpbMiw2Ml0sNzE6WzIsNjJdLDc1OlsyLDYyXSw3NzpbMiw2Ml0sODE6WzIsNjJdLDgyOlsyLDYyXSw4MzpbMiw2Ml0sODg6WzIsNjJdLDkwOlsyLDYyXSw5OTpbMiw2Ml0sMTAxOlsyLDYyXSwxMDI6WzIsNjJdLDEwMzpbMiw2Ml0sMTA3OlsyLDYyXSwxMTU6WzIsNjJdLDEyMzpbMiw2Ml0sMTI1OlsyLDYyXSwxMjY6WzIsNjJdLDEyNzpbMiw2Ml0sMTI4OlsyLDYyXSwxMjk6WzIsNjJdLDEzMDpbMiw2Ml0sMTMxOlsyLDYyXSwxMzI6WzIsNjJdLDEzMzpbMiw2Ml0sMTM0OlsyLDYyXSwxMzU6WzIsNjJdfSx7MTpbMiw2NV0sNjpbMiw2NV0sMjU6WzIsNjVdLDI2OlsyLDY1XSwzNzpbMiw2NV0sNDY6WzIsNjVdLDUxOlsyLDY1XSw1NDpbMiw2NV0sNjM6WzIsNjVdLDY0OlsyLDY1XSw2NTpbMiw2NV0sNjc6WzIsNjVdLDY5OlsyLDY1XSw3MDpbMiw2NV0sNzE6WzIsNjVdLDc1OlsyLDY1XSw3NzpbMiw2NV0sODE6WzIsNjVdLDgyOlsyLDY1XSw4MzpbMiw2NV0sODg6WzIsNjVdLDkwOlsyLDY1XSw5OTpbMiw2NV0sMTAxOlsyLDY1XSwxMDI6WzIsNjVdLDEwMzpbMiw2NV0sMTA3OlsyLDY1XSwxMTU6WzIsNjVdLDEyMzpbMiw2NV0sMTI1OlsyLDY1XSwxMjY6WzIsNjVdLDEyNzpbMiw2NV0sMTI4OlsyLDY1XSwxMjk6WzIsNjVdLDEzMDpbMiw2NV0sMTMxOlsyLDY1XSwxMzI6WzIsNjVdLDEzMzpbMiw2NV0sMTM0OlsyLDY1XSwxMzU6WzIsNjVdfSx7ODoxNDcsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7ODoxNDgsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7ODoxNDksOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7NToxNTAsODoxNTEsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNTpbMSw1XSwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7Mjc6MTU2LDI4OlsxLDcwXSw1NToxNTcsNTY6MTU4LDYxOjE1Miw3MzpbMSw2N10sODc6WzEsNTRdLDExMDoxNTMsMTExOlsxLDE1NF0sMTEyOjE1NX0sezEwOToxNTksMTEzOlsxLDE2MF0sMTE0OlsxLDE2MV19LHs2OlsyLDg1XSwxMjoxNjUsMjU6WzIsODVdLDI3OjE2NiwyODpbMSw3MF0sMjk6MTY3LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzg6MTYzLDM5OjE2NCw0MToxNjgsNDM6WzEsNDZdLDUxOlsyLDg1XSw3NDoxNjIsNzU6WzIsODVdLDg2OlsxLDExMV19LHsxOlsyLDI3XSw2OlsyLDI3XSwyNTpbMiwyN10sMjY6WzIsMjddLDQwOlsyLDI3XSw0NjpbMiwyN10sNTE6WzIsMjddLDU0OlsyLDI3XSw2MzpbMiwyN10sNjQ6WzIsMjddLDY1OlsyLDI3XSw2NzpbMiwyN10sNjk6WzIsMjddLDcwOlsyLDI3XSw3MTpbMiwyN10sNzU6WzIsMjddLDgxOlsyLDI3XSw4MjpbMiwyN10sODM6WzIsMjddLDg4OlsyLDI3XSw5MDpbMiwyN10sOTk6WzIsMjddLDEwMTpbMiwyN10sMTAyOlsyLDI3XSwxMDM6WzIsMjddLDEwNzpbMiwyN10sMTE1OlsyLDI3XSwxMjM6WzIsMjddLDEyNTpbMiwyN10sMTI2OlsyLDI3XSwxMjk6WzIsMjddLDEzMDpbMiwyN10sMTMxOlsyLDI3XSwxMzI6WzIsMjddLDEzMzpbMiwyN10sMTM0OlsyLDI3XX0sezE6WzIsMjhdLDY6WzIsMjhdLDI1OlsyLDI4XSwyNjpbMiwyOF0sNDA6WzIsMjhdLDQ2OlsyLDI4XSw1MTpbMiwyOF0sNTQ6WzIsMjhdLDYzOlsyLDI4XSw2NDpbMiwyOF0sNjU6WzIsMjhdLDY3OlsyLDI4XSw2OTpbMiwyOF0sNzA6WzIsMjhdLDcxOlsyLDI4XSw3NTpbMiwyOF0sODE6WzIsMjhdLDgyOlsyLDI4XSw4MzpbMiwyOF0sODg6WzIsMjhdLDkwOlsyLDI4XSw5OTpbMiwyOF0sMTAxOlsyLDI4XSwxMDI6WzIsMjhdLDEwMzpbMiwyOF0sMTA3OlsyLDI4XSwxMTU6WzIsMjhdLDEyMzpbMiwyOF0sMTI1OlsyLDI4XSwxMjY6WzIsMjhdLDEyOTpbMiwyOF0sMTMwOlsyLDI4XSwxMzE6WzIsMjhdLDEzMjpbMiwyOF0sMTMzOlsyLDI4XSwxMzQ6WzIsMjhdfSx7MTpbMiwyNl0sNjpbMiwyNl0sMjU6WzIsMjZdLDI2OlsyLDI2XSwzNzpbMiwyNl0sNDA6WzIsMjZdLDQ2OlsyLDI2XSw1MTpbMiwyNl0sNTQ6WzIsMjZdLDYzOlsyLDI2XSw2NDpbMiwyNl0sNjU6WzIsMjZdLDY3OlsyLDI2XSw2OTpbMiwyNl0sNzA6WzIsMjZdLDcxOlsyLDI2XSw3NTpbMiwyNl0sNzc6WzIsMjZdLDgxOlsyLDI2XSw4MjpbMiwyNl0sODM6WzIsMjZdLDg4OlsyLDI2XSw5MDpbMiwyNl0sOTk6WzIsMjZdLDEwMTpbMiwyNl0sMTAyOlsyLDI2XSwxMDM6WzIsMjZdLDEwNzpbMiwyNl0sMTEzOlsyLDI2XSwxMTQ6WzIsMjZdLDExNTpbMiwyNl0sMTIzOlsyLDI2XSwxMjU6WzIsMjZdLDEyNjpbMiwyNl0sMTI3OlsyLDI2XSwxMjg6WzIsMjZdLDEyOTpbMiwyNl0sMTMwOlsyLDI2XSwxMzE6WzIsMjZdLDEzMjpbMiwyNl0sMTMzOlsyLDI2XSwxMzQ6WzIsMjZdLDEzNTpbMiwyNl19LHsxOlsyLDZdLDY6WzIsNl0sNzoxNjksODo2LDk6NywxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI2OlsyLDZdLDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sOTk6WzIsNl0sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHsxOlsyLDNdfSx7MTpbMiwyNF0sNjpbMiwyNF0sMjU6WzIsMjRdLDI2OlsyLDI0XSw0NjpbMiwyNF0sNTE6WzIsMjRdLDU0OlsyLDI0XSw2OTpbMiwyNF0sNzU6WzIsMjRdLDgzOlsyLDI0XSw4ODpbMiwyNF0sOTA6WzIsMjRdLDk1OlsyLDI0XSw5NjpbMiwyNF0sOTk6WzIsMjRdLDEwMTpbMiwyNF0sMTAyOlsyLDI0XSwxMDM6WzIsMjRdLDEwNzpbMiwyNF0sMTE1OlsyLDI0XSwxMTg6WzIsMjRdLDEyMDpbMiwyNF0sMTIzOlsyLDI0XSwxMjU6WzIsMjRdLDEyNjpbMiwyNF0sMTI5OlsyLDI0XSwxMzA6WzIsMjRdLDEzMTpbMiwyNF0sMTMyOlsyLDI0XSwxMzM6WzIsMjRdLDEzNDpbMiwyNF19LHs2OlsxLDcxXSwyNjpbMSwxNzBdfSx7MTpbMiwxODRdLDY6WzIsMTg0XSwyNTpbMiwxODRdLDI2OlsyLDE4NF0sNDY6WzIsMTg0XSw1MTpbMiwxODRdLDU0OlsyLDE4NF0sNjk6WzIsMTg0XSw3NTpbMiwxODRdLDgzOlsyLDE4NF0sODg6WzIsMTg0XSw5MDpbMiwxODRdLDk5OlsyLDE4NF0sMTAxOlsyLDE4NF0sMTAyOlsyLDE4NF0sMTAzOlsyLDE4NF0sMTA3OlsyLDE4NF0sMTE1OlsyLDE4NF0sMTIzOlsyLDE4NF0sMTI1OlsyLDE4NF0sMTI2OlsyLDE4NF0sMTI5OlsyLDE4NF0sMTMwOlsyLDE4NF0sMTMxOlsyLDE4NF0sMTMyOlsyLDE4NF0sMTMzOlsyLDE4NF0sMTM0OlsyLDE4NF19LHs4OjE3MSw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjE3Miw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjE3Myw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjE3NCw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjE3NSw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjE3Niw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjE3Nyw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjE3OCw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHsxOlsyLDE0MF0sNjpbMiwxNDBdLDI1OlsyLDE0MF0sMjY6WzIsMTQwXSw0NjpbMiwxNDBdLDUxOlsyLDE0MF0sNTQ6WzIsMTQwXSw2OTpbMiwxNDBdLDc1OlsyLDE0MF0sODM6WzIsMTQwXSw4ODpbMiwxNDBdLDkwOlsyLDE0MF0sOTk6WzIsMTQwXSwxMDE6WzIsMTQwXSwxMDI6WzIsMTQwXSwxMDM6WzIsMTQwXSwxMDc6WzIsMTQwXSwxMTU6WzIsMTQwXSwxMjM6WzIsMTQwXSwxMjU6WzIsMTQwXSwxMjY6WzIsMTQwXSwxMjk6WzIsMTQwXSwxMzA6WzIsMTQwXSwxMzE6WzIsMTQwXSwxMzI6WzIsMTQwXSwxMzM6WzIsMTQwXSwxMzQ6WzIsMTQwXX0sezE6WzIsMTQ1XSw2OlsyLDE0NV0sMjU6WzIsMTQ1XSwyNjpbMiwxNDVdLDQ2OlsyLDE0NV0sNTE6WzIsMTQ1XSw1NDpbMiwxNDVdLDY5OlsyLDE0NV0sNzU6WzIsMTQ1XSw4MzpbMiwxNDVdLDg4OlsyLDE0NV0sOTA6WzIsMTQ1XSw5OTpbMiwxNDVdLDEwMTpbMiwxNDVdLDEwMjpbMiwxNDVdLDEwMzpbMiwxNDVdLDEwNzpbMiwxNDVdLDExNTpbMiwxNDVdLDEyMzpbMiwxNDVdLDEyNTpbMiwxNDVdLDEyNjpbMiwxNDVdLDEyOTpbMiwxNDVdLDEzMDpbMiwxNDVdLDEzMTpbMiwxNDVdLDEzMjpbMiwxNDVdLDEzMzpbMiwxNDVdLDEzNDpbMiwxNDVdfSx7ODoxNzksOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7MTpbMiwxMzldLDY6WzIsMTM5XSwyNTpbMiwxMzldLDI2OlsyLDEzOV0sNDY6WzIsMTM5XSw1MTpbMiwxMzldLDU0OlsyLDEzOV0sNjk6WzIsMTM5XSw3NTpbMiwxMzldLDgzOlsyLDEzOV0sODg6WzIsMTM5XSw5MDpbMiwxMzldLDk5OlsyLDEzOV0sMTAxOlsyLDEzOV0sMTAyOlsyLDEzOV0sMTAzOlsyLDEzOV0sMTA3OlsyLDEzOV0sMTE1OlsyLDEzOV0sMTIzOlsyLDEzOV0sMTI1OlsyLDEzOV0sMTI2OlsyLDEzOV0sMTI5OlsyLDEzOV0sMTMwOlsyLDEzOV0sMTMxOlsyLDEzOV0sMTMyOlsyLDEzOV0sMTMzOlsyLDEzOV0sMTM0OlsyLDEzOV19LHsxOlsyLDE0NF0sNjpbMiwxNDRdLDI1OlsyLDE0NF0sMjY6WzIsMTQ0XSw0NjpbMiwxNDRdLDUxOlsyLDE0NF0sNTQ6WzIsMTQ0XSw2OTpbMiwxNDRdLDc1OlsyLDE0NF0sODM6WzIsMTQ0XSw4ODpbMiwxNDRdLDkwOlsyLDE0NF0sOTk6WzIsMTQ0XSwxMDE6WzIsMTQ0XSwxMDI6WzIsMTQ0XSwxMDM6WzIsMTQ0XSwxMDc6WzIsMTQ0XSwxMTU6WzIsMTQ0XSwxMjM6WzIsMTQ0XSwxMjU6WzIsMTQ0XSwxMjY6WzIsMTQ0XSwxMjk6WzIsMTQ0XSwxMzA6WzIsMTQ0XSwxMzE6WzIsMTQ0XSwxMzI6WzIsMTQ0XSwxMzM6WzIsMTQ0XSwxMzQ6WzIsMTQ0XX0sezc5OjE4MCw4MjpbMSwxMDNdfSx7MTpbMiw2M10sNjpbMiw2M10sMjU6WzIsNjNdLDI2OlsyLDYzXSwzNzpbMiw2M10sNDY6WzIsNjNdLDUxOlsyLDYzXSw1NDpbMiw2M10sNjM6WzIsNjNdLDY0OlsyLDYzXSw2NTpbMiw2M10sNjc6WzIsNjNdLDY5OlsyLDYzXSw3MDpbMiw2M10sNzE6WzIsNjNdLDc1OlsyLDYzXSw3NzpbMiw2M10sODE6WzIsNjNdLDgyOlsyLDYzXSw4MzpbMiw2M10sODg6WzIsNjNdLDkwOlsyLDYzXSw5OTpbMiw2M10sMTAxOlsyLDYzXSwxMDI6WzIsNjNdLDEwMzpbMiw2M10sMTA3OlsyLDYzXSwxMTU6WzIsNjNdLDEyMzpbMiw2M10sMTI1OlsyLDYzXSwxMjY6WzIsNjNdLDEyNzpbMiw2M10sMTI4OlsyLDYzXSwxMjk6WzIsNjNdLDEzMDpbMiw2M10sMTMxOlsyLDYzXSwxMzI6WzIsNjNdLDEzMzpbMiw2M10sMTM0OlsyLDYzXSwxMzU6WzIsNjNdfSx7ODI6WzIsMTAzXX0sezI3OjE4MSwyODpbMSw3MF19LHsyNzoxODIsMjg6WzEsNzBdfSx7MTpbMiw3N10sNjpbMiw3N10sMjU6WzIsNzddLDI2OlsyLDc3XSwyNzoxODMsMjg6WzEsNzBdLDM3OlsyLDc3XSw0NjpbMiw3N10sNTE6WzIsNzddLDU0OlsyLDc3XSw2MzpbMiw3N10sNjQ6WzIsNzddLDY1OlsyLDc3XSw2NzpbMiw3N10sNjk6WzIsNzddLDcwOlsyLDc3XSw3MTpbMiw3N10sNzU6WzIsNzddLDc3OlsyLDc3XSw4MTpbMiw3N10sODI6WzIsNzddLDgzOlsyLDc3XSw4ODpbMiw3N10sOTA6WzIsNzddLDk5OlsyLDc3XSwxMDE6WzIsNzddLDEwMjpbMiw3N10sMTAzOlsyLDc3XSwxMDc6WzIsNzddLDExNTpbMiw3N10sMTIzOlsyLDc3XSwxMjU6WzIsNzddLDEyNjpbMiw3N10sMTI3OlsyLDc3XSwxMjg6WzIsNzddLDEyOTpbMiw3N10sMTMwOlsyLDc3XSwxMzE6WzIsNzddLDEzMjpbMiw3N10sMTMzOlsyLDc3XSwxMzQ6WzIsNzddLDEzNTpbMiw3N119LHsxOlsyLDc4XSw2OlsyLDc4XSwyNTpbMiw3OF0sMjY6WzIsNzhdLDM3OlsyLDc4XSw0NjpbMiw3OF0sNTE6WzIsNzhdLDU0OlsyLDc4XSw2MzpbMiw3OF0sNjQ6WzIsNzhdLDY1OlsyLDc4XSw2NzpbMiw3OF0sNjk6WzIsNzhdLDcwOlsyLDc4XSw3MTpbMiw3OF0sNzU6WzIsNzhdLDc3OlsyLDc4XSw4MTpbMiw3OF0sODI6WzIsNzhdLDgzOlsyLDc4XSw4ODpbMiw3OF0sOTA6WzIsNzhdLDk5OlsyLDc4XSwxMDE6WzIsNzhdLDEwMjpbMiw3OF0sMTAzOlsyLDc4XSwxMDc6WzIsNzhdLDExNTpbMiw3OF0sMTIzOlsyLDc4XSwxMjU6WzIsNzhdLDEyNjpbMiw3OF0sMTI3OlsyLDc4XSwxMjg6WzIsNzhdLDEyOTpbMiw3OF0sMTMwOlsyLDc4XSwxMzE6WzIsNzhdLDEzMjpbMiw3OF0sMTMzOlsyLDc4XSwxMzQ6WzIsNzhdLDEzNTpbMiw3OF19LHs4OjE4NSw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTQ6WzEsMTg5XSw1NTo0Nyw1Njo0OCw1ODozNiw2MDoyNSw2MToyNiw2MjoyNyw2ODoxODQsNzI6MTg2LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDg5OjE4Nyw5MDpbMSwxODhdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7NjY6MTkwLDY3OlsxLDk2XSw3MDpbMSw5N10sNzE6WzEsOThdfSx7NjY6MTkxLDY3OlsxLDk2XSw3MDpbMSw5N10sNzE6WzEsOThdfSx7Nzk6MTkyLDgyOlsxLDEwM119LHsxOlsyLDY0XSw2OlsyLDY0XSwyNTpbMiw2NF0sMjY6WzIsNjRdLDM3OlsyLDY0XSw0NjpbMiw2NF0sNTE6WzIsNjRdLDU0OlsyLDY0XSw2MzpbMiw2NF0sNjQ6WzIsNjRdLDY1OlsyLDY0XSw2NzpbMiw2NF0sNjk6WzIsNjRdLDcwOlsyLDY0XSw3MTpbMiw2NF0sNzU6WzIsNjRdLDc3OlsyLDY0XSw4MTpbMiw2NF0sODI6WzIsNjRdLDgzOlsyLDY0XSw4ODpbMiw2NF0sOTA6WzIsNjRdLDk5OlsyLDY0XSwxMDE6WzIsNjRdLDEwMjpbMiw2NF0sMTAzOlsyLDY0XSwxMDc6WzIsNjRdLDExNTpbMiw2NF0sMTIzOlsyLDY0XSwxMjU6WzIsNjRdLDEyNjpbMiw2NF0sMTI3OlsyLDY0XSwxMjg6WzIsNjRdLDEyOTpbMiw2NF0sMTMwOlsyLDY0XSwxMzE6WzIsNjRdLDEzMjpbMiw2NF0sMTMzOlsyLDY0XSwxMzQ6WzIsNjRdLDEzNTpbMiw2NF19LHs4OjE5Myw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI1OlsxLDE5NF0sMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MjMsNDE6NjAsNDI6WzEsNDRdLDQzOlsxLDQ2XSw0NDpbMSwyOV0sNDc6MzAsNDg6WzEsNTddLDQ5OlsxLDU4XSw1NTo0Nyw1Njo0OCw1ODozNiw2MDoyNSw2MToyNiw2MjoyNyw3MzpbMSw2N10sNzY6WzEsNDNdLDgwOlsxLDI4XSw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezE6WzIsMTAxXSw2OlsyLDEwMV0sMjU6WzIsMTAxXSwyNjpbMiwxMDFdLDQ2OlsyLDEwMV0sNTE6WzIsMTAxXSw1NDpbMiwxMDFdLDYzOlsyLDEwMV0sNjQ6WzIsMTAxXSw2NTpbMiwxMDFdLDY3OlsyLDEwMV0sNjk6WzIsMTAxXSw3MDpbMiwxMDFdLDcxOlsyLDEwMV0sNzU6WzIsMTAxXSw4MTpbMiwxMDFdLDgyOlsyLDEwMV0sODM6WzIsMTAxXSw4ODpbMiwxMDFdLDkwOlsyLDEwMV0sOTk6WzIsMTAxXSwxMDE6WzIsMTAxXSwxMDI6WzIsMTAxXSwxMDM6WzIsMTAxXSwxMDc6WzIsMTAxXSwxMTU6WzIsMTAxXSwxMjM6WzIsMTAxXSwxMjU6WzIsMTAxXSwxMjY6WzIsMTAxXSwxMjk6WzIsMTAxXSwxMzA6WzIsMTAxXSwxMzE6WzIsMTAxXSwxMzI6WzIsMTAxXSwxMzM6WzIsMTAxXSwxMzQ6WzIsMTAxXX0sezg6MTk3LDk6MTE1LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjU6WzEsMTQ0XSwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU3OjE0NSw1ODozNiw2MDoyNSw2MToyNiw2MjoyNyw3MzpbMSw2N10sNzY6WzEsNDNdLDgwOlsxLDI4XSw4MzpbMSwxOTVdLDg0OjE5Niw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5MToxNDMsOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs0NjpbMSwxOThdLDUxOlsxLDE5OV19LHs0NjpbMiw1Ml0sNTE6WzIsNTJdfSx7Mzc6WzEsMjAxXSw0NjpbMiw1NF0sNTE6WzIsNTRdLDU0OlsxLDIwMF19LHszNzpbMiw1N10sNDY6WzIsNTddLDUxOlsyLDU3XSw1NDpbMiw1N119LHszNzpbMiw1OF0sNDY6WzIsNThdLDUxOlsyLDU4XSw1NDpbMiw1OF19LHszNzpbMiw1OV0sNDY6WzIsNTldLDUxOlsyLDU5XSw1NDpbMiw1OV19LHszNzpbMiw2MF0sNDY6WzIsNjBdLDUxOlsyLDYwXSw1NDpbMiw2MF19LHsyNzoxNDYsMjg6WzEsNzBdfSx7ODoxOTcsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNTpbMSwxNDRdLDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTc6MTQ1LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg0OjE0Miw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw4ODpbMSwxNDFdLDkxOjE0Myw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezE6WzIsNDZdLDY6WzIsNDZdLDI1OlsyLDQ2XSwyNjpbMiw0Nl0sNDY6WzIsNDZdLDUxOlsyLDQ2XSw1NDpbMiw0Nl0sNjk6WzIsNDZdLDc1OlsyLDQ2XSw4MzpbMiw0Nl0sODg6WzIsNDZdLDkwOlsyLDQ2XSw5OTpbMiw0Nl0sMTAxOlsyLDQ2XSwxMDI6WzIsNDZdLDEwMzpbMiw0Nl0sMTA3OlsyLDQ2XSwxMTU6WzIsNDZdLDEyMzpbMiw0Nl0sMTI1OlsyLDQ2XSwxMjY6WzIsNDZdLDEyOTpbMiw0Nl0sMTMwOlsyLDQ2XSwxMzE6WzIsNDZdLDEzMjpbMiw0Nl0sMTMzOlsyLDQ2XSwxMzQ6WzIsNDZdfSx7MTpbMiwxNzddLDY6WzIsMTc3XSwyNTpbMiwxNzddLDI2OlsyLDE3N10sNDY6WzIsMTc3XSw1MTpbMiwxNzddLDU0OlsyLDE3N10sNjk6WzIsMTc3XSw3NTpbMiwxNzddLDgzOlsyLDE3N10sODg6WzIsMTc3XSw5MDpbMiwxNzddLDk5OlsyLDE3N10sMTAwOjg0LDEwMTpbMiwxNzddLDEwMjpbMiwxNzddLDEwMzpbMiwxNzddLDEwNjo4NSwxMDc6WzIsMTc3XSwxMDg6NjYsMTE1OlsyLDE3N10sMTIzOlsyLDE3N10sMTI1OlsyLDE3N10sMTI2OlsyLDE3N10sMTI5OlsxLDc1XSwxMzA6WzIsMTc3XSwxMzE6WzIsMTc3XSwxMzI6WzIsMTc3XSwxMzM6WzIsMTc3XSwxMzQ6WzIsMTc3XX0sezEwMDo4NywxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA2Ojg4LDEwNzpbMSw2NV0sMTA4OjY2LDEyMzpbMSw4Nl19LHsxOlsyLDE3OF0sNjpbMiwxNzhdLDI1OlsyLDE3OF0sMjY6WzIsMTc4XSw0NjpbMiwxNzhdLDUxOlsyLDE3OF0sNTQ6WzIsMTc4XSw2OTpbMiwxNzhdLDc1OlsyLDE3OF0sODM6WzIsMTc4XSw4ODpbMiwxNzhdLDkwOlsyLDE3OF0sOTk6WzIsMTc4XSwxMDA6ODQsMTAxOlsyLDE3OF0sMTAyOlsyLDE3OF0sMTAzOlsyLDE3OF0sMTA2Ojg1LDEwNzpbMiwxNzhdLDEwODo2NiwxMTU6WzIsMTc4XSwxMjM6WzIsMTc4XSwxMjU6WzIsMTc4XSwxMjY6WzIsMTc4XSwxMjk6WzEsNzVdLDEzMDpbMiwxNzhdLDEzMTpbMiwxNzhdLDEzMjpbMiwxNzhdLDEzMzpbMiwxNzhdLDEzNDpbMiwxNzhdfSx7MTpbMiwxNzldLDY6WzIsMTc5XSwyNTpbMiwxNzldLDI2OlsyLDE3OV0sNDY6WzIsMTc5XSw1MTpbMiwxNzldLDU0OlsyLDE3OV0sNjk6WzIsMTc5XSw3NTpbMiwxNzldLDgzOlsyLDE3OV0sODg6WzIsMTc5XSw5MDpbMiwxNzldLDk5OlsyLDE3OV0sMTAwOjg0LDEwMTpbMiwxNzldLDEwMjpbMiwxNzldLDEwMzpbMiwxNzldLDEwNjo4NSwxMDc6WzIsMTc5XSwxMDg6NjYsMTE1OlsyLDE3OV0sMTIzOlsyLDE3OV0sMTI1OlsyLDE3OV0sMTI2OlsyLDE3OV0sMTI5OlsxLDc1XSwxMzA6WzIsMTc5XSwxMzE6WzIsMTc5XSwxMzI6WzIsMTc5XSwxMzM6WzIsMTc5XSwxMzQ6WzIsMTc5XX0sezE6WzIsMTgwXSw2OlsyLDE4MF0sMjU6WzIsMTgwXSwyNjpbMiwxODBdLDQ2OlsyLDE4MF0sNTE6WzIsMTgwXSw1NDpbMiwxODBdLDYzOlsyLDY2XSw2NDpbMiw2Nl0sNjU6WzIsNjZdLDY3OlsyLDY2XSw2OTpbMiwxODBdLDcwOlsyLDY2XSw3MTpbMiw2Nl0sNzU6WzIsMTgwXSw4MTpbMiw2Nl0sODI6WzIsNjZdLDgzOlsyLDE4MF0sODg6WzIsMTgwXSw5MDpbMiwxODBdLDk5OlsyLDE4MF0sMTAxOlsyLDE4MF0sMTAyOlsyLDE4MF0sMTAzOlsyLDE4MF0sMTA3OlsyLDE4MF0sMTE1OlsyLDE4MF0sMTIzOlsyLDE4MF0sMTI1OlsyLDE4MF0sMTI2OlsyLDE4MF0sMTI5OlsyLDE4MF0sMTMwOlsyLDE4MF0sMTMxOlsyLDE4MF0sMTMyOlsyLDE4MF0sMTMzOlsyLDE4MF0sMTM0OlsyLDE4MF19LHs1OTo5MCw2MzpbMSw5Ml0sNjQ6WzEsOTNdLDY1OlsxLDk0XSw2Njo5NSw2NzpbMSw5Nl0sNzA6WzEsOTddLDcxOlsxLDk4XSw3ODo4OSw4MTpbMSw5MV0sODI6WzIsMTAyXX0sezU5OjEwMCw2MzpbMSw5Ml0sNjQ6WzEsOTNdLDY1OlsxLDk0XSw2Njo5NSw2NzpbMSw5Nl0sNzA6WzEsOTddLDcxOlsxLDk4XSw3ODo5OSw4MTpbMSw5MV0sODI6WzIsMTAyXX0sezE6WzIsNjldLDY6WzIsNjldLDI1OlsyLDY5XSwyNjpbMiw2OV0sNDY6WzIsNjldLDUxOlsyLDY5XSw1NDpbMiw2OV0sNjM6WzIsNjldLDY0OlsyLDY5XSw2NTpbMiw2OV0sNjc6WzIsNjldLDY5OlsyLDY5XSw3MDpbMiw2OV0sNzE6WzIsNjldLDc1OlsyLDY5XSw4MTpbMiw2OV0sODI6WzIsNjldLDgzOlsyLDY5XSw4ODpbMiw2OV0sOTA6WzIsNjldLDk5OlsyLDY5XSwxMDE6WzIsNjldLDEwMjpbMiw2OV0sMTAzOlsyLDY5XSwxMDc6WzIsNjldLDExNTpbMiw2OV0sMTIzOlsyLDY5XSwxMjU6WzIsNjldLDEyNjpbMiw2OV0sMTI5OlsyLDY5XSwxMzA6WzIsNjldLDEzMTpbMiw2OV0sMTMyOlsyLDY5XSwxMzM6WzIsNjldLDEzNDpbMiw2OV19LHsxOlsyLDE4MV0sNjpbMiwxODFdLDI1OlsyLDE4MV0sMjY6WzIsMTgxXSw0NjpbMiwxODFdLDUxOlsyLDE4MV0sNTQ6WzIsMTgxXSw2MzpbMiw2Nl0sNjQ6WzIsNjZdLDY1OlsyLDY2XSw2NzpbMiw2Nl0sNjk6WzIsMTgxXSw3MDpbMiw2Nl0sNzE6WzIsNjZdLDc1OlsyLDE4MV0sODE6WzIsNjZdLDgyOlsyLDY2XSw4MzpbMiwxODFdLDg4OlsyLDE4MV0sOTA6WzIsMTgxXSw5OTpbMiwxODFdLDEwMTpbMiwxODFdLDEwMjpbMiwxODFdLDEwMzpbMiwxODFdLDEwNzpbMiwxODFdLDExNTpbMiwxODFdLDEyMzpbMiwxODFdLDEyNTpbMiwxODFdLDEyNjpbMiwxODFdLDEyOTpbMiwxODFdLDEzMDpbMiwxODFdLDEzMTpbMiwxODFdLDEzMjpbMiwxODFdLDEzMzpbMiwxODFdLDEzNDpbMiwxODFdfSx7MTpbMiwxODJdLDY6WzIsMTgyXSwyNTpbMiwxODJdLDI2OlsyLDE4Ml0sNDY6WzIsMTgyXSw1MTpbMiwxODJdLDU0OlsyLDE4Ml0sNjk6WzIsMTgyXSw3NTpbMiwxODJdLDgzOlsyLDE4Ml0sODg6WzIsMTgyXSw5MDpbMiwxODJdLDk5OlsyLDE4Ml0sMTAxOlsyLDE4Ml0sMTAyOlsyLDE4Ml0sMTAzOlsyLDE4Ml0sMTA3OlsyLDE4Ml0sMTE1OlsyLDE4Ml0sMTIzOlsyLDE4Ml0sMTI1OlsyLDE4Ml0sMTI2OlsyLDE4Ml0sMTI5OlsyLDE4Ml0sMTMwOlsyLDE4Ml0sMTMxOlsyLDE4Ml0sMTMyOlsyLDE4Ml0sMTMzOlsyLDE4Ml0sMTM0OlsyLDE4Ml19LHsxOlsyLDE4M10sNjpbMiwxODNdLDI1OlsyLDE4M10sMjY6WzIsMTgzXSw0NjpbMiwxODNdLDUxOlsyLDE4M10sNTQ6WzIsMTgzXSw2OTpbMiwxODNdLDc1OlsyLDE4M10sODM6WzIsMTgzXSw4ODpbMiwxODNdLDkwOlsyLDE4M10sOTk6WzIsMTgzXSwxMDE6WzIsMTgzXSwxMDI6WzIsMTgzXSwxMDM6WzIsMTgzXSwxMDc6WzIsMTgzXSwxMTU6WzIsMTgzXSwxMjM6WzIsMTgzXSwxMjU6WzIsMTgzXSwxMjY6WzIsMTgzXSwxMjk6WzIsMTgzXSwxMzA6WzIsMTgzXSwxMzE6WzIsMTgzXSwxMzI6WzIsMTgzXSwxMzM6WzIsMTgzXSwxMzQ6WzIsMTgzXX0sezg6MjAyLDk6MTE1LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjU6WzEsMjAzXSwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7ODoyMDQsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7NToyMDUsMjU6WzEsNV0sMTIyOlsxLDIwNl19LHsxOlsyLDEyNl0sNjpbMiwxMjZdLDI1OlsyLDEyNl0sMjY6WzIsMTI2XSw0NjpbMiwxMjZdLDUxOlsyLDEyNl0sNTQ6WzIsMTI2XSw2OTpbMiwxMjZdLDc1OlsyLDEyNl0sODM6WzIsMTI2XSw4ODpbMiwxMjZdLDkwOlsyLDEyNl0sOTQ6MjA3LDk1OlsxLDIwOF0sOTY6WzEsMjA5XSw5OTpbMiwxMjZdLDEwMTpbMiwxMjZdLDEwMjpbMiwxMjZdLDEwMzpbMiwxMjZdLDEwNzpbMiwxMjZdLDExNTpbMiwxMjZdLDEyMzpbMiwxMjZdLDEyNTpbMiwxMjZdLDEyNjpbMiwxMjZdLDEyOTpbMiwxMjZdLDEzMDpbMiwxMjZdLDEzMTpbMiwxMjZdLDEzMjpbMiwxMjZdLDEzMzpbMiwxMjZdLDEzNDpbMiwxMjZdfSx7MTpbMiwxMzhdLDY6WzIsMTM4XSwyNTpbMiwxMzhdLDI2OlsyLDEzOF0sNDY6WzIsMTM4XSw1MTpbMiwxMzhdLDU0OlsyLDEzOF0sNjk6WzIsMTM4XSw3NTpbMiwxMzhdLDgzOlsyLDEzOF0sODg6WzIsMTM4XSw5MDpbMiwxMzhdLDk5OlsyLDEzOF0sMTAxOlsyLDEzOF0sMTAyOlsyLDEzOF0sMTAzOlsyLDEzOF0sMTA3OlsyLDEzOF0sMTE1OlsyLDEzOF0sMTIzOlsyLDEzOF0sMTI1OlsyLDEzOF0sMTI2OlsyLDEzOF0sMTI5OlsyLDEzOF0sMTMwOlsyLDEzOF0sMTMxOlsyLDEzOF0sMTMyOlsyLDEzOF0sMTMzOlsyLDEzOF0sMTM0OlsyLDEzOF19LHsxOlsyLDE0Nl0sNjpbMiwxNDZdLDI1OlsyLDE0Nl0sMjY6WzIsMTQ2XSw0NjpbMiwxNDZdLDUxOlsyLDE0Nl0sNTQ6WzIsMTQ2XSw2OTpbMiwxNDZdLDc1OlsyLDE0Nl0sODM6WzIsMTQ2XSw4ODpbMiwxNDZdLDkwOlsyLDE0Nl0sOTk6WzIsMTQ2XSwxMDE6WzIsMTQ2XSwxMDI6WzIsMTQ2XSwxMDM6WzIsMTQ2XSwxMDc6WzIsMTQ2XSwxMTU6WzIsMTQ2XSwxMjM6WzIsMTQ2XSwxMjU6WzIsMTQ2XSwxMjY6WzIsMTQ2XSwxMjk6WzIsMTQ2XSwxMzA6WzIsMTQ2XSwxMzE6WzIsMTQ2XSwxMzI6WzIsMTQ2XSwxMzM6WzIsMTQ2XSwxMzQ6WzIsMTQ2XX0sezI1OlsxLDIxMF0sMTAwOjg0LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTIzOlsxLDgzXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHsxMTc6MjExLDExOToyMTIsMTIwOlsxLDIxM119LHsxOlsyLDkxXSw2OlsyLDkxXSwyNTpbMiw5MV0sMjY6WzIsOTFdLDQ2OlsyLDkxXSw1MTpbMiw5MV0sNTQ6WzIsOTFdLDY5OlsyLDkxXSw3NTpbMiw5MV0sODM6WzIsOTFdLDg4OlsyLDkxXSw5MDpbMiw5MV0sOTk6WzIsOTFdLDEwMTpbMiw5MV0sMTAyOlsyLDkxXSwxMDM6WzIsOTFdLDEwNzpbMiw5MV0sMTE1OlsyLDkxXSwxMjM6WzIsOTFdLDEyNTpbMiw5MV0sMTI2OlsyLDkxXSwxMjk6WzIsOTFdLDEzMDpbMiw5MV0sMTMxOlsyLDkxXSwxMzI6WzIsOTFdLDEzMzpbMiw5MV0sMTM0OlsyLDkxXX0sezE0OjIxNCwxNToxMjAsMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MTIxLDQxOjYwLDU1OjQ3LDU2OjQ4LDU4OjIxNSw2MDoyNSw2MToyNiw2MjoyNyw3MzpbMSw2N10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDk4OlsxLDUzXX0sezE6WzIsOTRdLDU6MjE2LDY6WzIsOTRdLDI1OlsxLDVdLDI2OlsyLDk0XSw0NjpbMiw5NF0sNTE6WzIsOTRdLDU0OlsyLDk0XSw2MzpbMiw2Nl0sNjQ6WzIsNjZdLDY1OlsyLDY2XSw2NzpbMiw2Nl0sNjk6WzIsOTRdLDcwOlsyLDY2XSw3MTpbMiw2Nl0sNzU6WzIsOTRdLDc3OlsxLDIxN10sODE6WzIsNjZdLDgyOlsyLDY2XSw4MzpbMiw5NF0sODg6WzIsOTRdLDkwOlsyLDk0XSw5OTpbMiw5NF0sMTAxOlsyLDk0XSwxMDI6WzIsOTRdLDEwMzpbMiw5NF0sMTA3OlsyLDk0XSwxMTU6WzIsOTRdLDEyMzpbMiw5NF0sMTI1OlsyLDk0XSwxMjY6WzIsOTRdLDEyOTpbMiw5NF0sMTMwOlsyLDk0XSwxMzE6WzIsOTRdLDEzMjpbMiw5NF0sMTMzOlsyLDk0XSwxMzQ6WzIsOTRdfSx7MTpbMiw0Ml0sNjpbMiw0Ml0sMjY6WzIsNDJdLDk5OlsyLDQyXSwxMDA6ODQsMTAxOlsyLDQyXSwxMDM6WzIsNDJdLDEwNjo4NSwxMDc6WzIsNDJdLDEwODo2NiwxMjM6WzIsNDJdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsMTMxXSw2OlsyLDEzMV0sMjY6WzIsMTMxXSw5OTpbMiwxMzFdLDEwMDo4NCwxMDE6WzIsMTMxXSwxMDM6WzIsMTMxXSwxMDY6ODUsMTA3OlsyLDEzMV0sMTA4OjY2LDEyMzpbMiwxMzFdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezY6WzEsNzFdLDk5OlsxLDIxOF19LHs0OjIxOSw3OjQsODo2LDk6NywxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs2OlsyLDEyMl0sMjU6WzIsMTIyXSw1MTpbMiwxMjJdLDU0OlsxLDIyMV0sODg6WzIsMTIyXSw4OToyMjAsOTA6WzEsMTg4XSwxMDA6ODQsMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNjo4NSwxMDc6WzEsNjVdLDEwODo2NiwxMjM6WzEsODNdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsMTA5XSw2OlsyLDEwOV0sMjU6WzIsMTA5XSwyNjpbMiwxMDldLDM3OlsyLDEwOV0sNDY6WzIsMTA5XSw1MTpbMiwxMDldLDU0OlsyLDEwOV0sNjM6WzIsMTA5XSw2NDpbMiwxMDldLDY1OlsyLDEwOV0sNjc6WzIsMTA5XSw2OTpbMiwxMDldLDcwOlsyLDEwOV0sNzE6WzIsMTA5XSw3NTpbMiwxMDldLDgxOlsyLDEwOV0sODI6WzIsMTA5XSw4MzpbMiwxMDldLDg4OlsyLDEwOV0sOTA6WzIsMTA5XSw5OTpbMiwxMDldLDEwMTpbMiwxMDldLDEwMjpbMiwxMDldLDEwMzpbMiwxMDldLDEwNzpbMiwxMDldLDExMzpbMiwxMDldLDExNDpbMiwxMDldLDExNTpbMiwxMDldLDEyMzpbMiwxMDldLDEyNTpbMiwxMDldLDEyNjpbMiwxMDldLDEyOTpbMiwxMDldLDEzMDpbMiwxMDldLDEzMTpbMiwxMDldLDEzMjpbMiwxMDldLDEzMzpbMiwxMDldLDEzNDpbMiwxMDldfSx7NjpbMiw0OV0sMjU6WzIsNDldLDUwOjIyMiw1MTpbMSwyMjNdLDg4OlsyLDQ5XX0sezY6WzIsMTE3XSwyNTpbMiwxMTddLDI2OlsyLDExN10sNTE6WzIsMTE3XSw4MzpbMiwxMTddLDg4OlsyLDExN119LHs4OjE5Nyw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI1OlsxLDE0NF0sMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MjMsNDE6NjAsNDI6WzEsNDRdLDQzOlsxLDQ2XSw0NDpbMSwyOV0sNDc6MzAsNDg6WzEsNTddLDQ5OlsxLDU4XSw1NTo0Nyw1Njo0OCw1NzoxNDUsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODQ6MjI0LDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkxOjE0Myw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezY6WzIsMTIzXSwyNTpbMiwxMjNdLDI2OlsyLDEyM10sNTE6WzIsMTIzXSw4MzpbMiwxMjNdLDg4OlsyLDEyM119LHsxOlsyLDEwOF0sNjpbMiwxMDhdLDI1OlsyLDEwOF0sMjY6WzIsMTA4XSwzNzpbMiwxMDhdLDQwOlsyLDEwOF0sNDY6WzIsMTA4XSw1MTpbMiwxMDhdLDU0OlsyLDEwOF0sNjM6WzIsMTA4XSw2NDpbMiwxMDhdLDY1OlsyLDEwOF0sNjc6WzIsMTA4XSw2OTpbMiwxMDhdLDcwOlsyLDEwOF0sNzE6WzIsMTA4XSw3NTpbMiwxMDhdLDc3OlsyLDEwOF0sODE6WzIsMTA4XSw4MjpbMiwxMDhdLDgzOlsyLDEwOF0sODg6WzIsMTA4XSw5MDpbMiwxMDhdLDk5OlsyLDEwOF0sMTAxOlsyLDEwOF0sMTAyOlsyLDEwOF0sMTAzOlsyLDEwOF0sMTA3OlsyLDEwOF0sMTE1OlsyLDEwOF0sMTIzOlsyLDEwOF0sMTI1OlsyLDEwOF0sMTI2OlsyLDEwOF0sMTI3OlsyLDEwOF0sMTI4OlsyLDEwOF0sMTI5OlsyLDEwOF0sMTMwOlsyLDEwOF0sMTMxOlsyLDEwOF0sMTMyOlsyLDEwOF0sMTMzOlsyLDEwOF0sMTM0OlsyLDEwOF0sMTM1OlsyLDEwOF19LHs1OjIyNSwyNTpbMSw1XSwxMDA6ODQsMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNjo4NSwxMDc6WzEsNjVdLDEwODo2NiwxMjM6WzEsODNdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsMTM0XSw2OlsyLDEzNF0sMjU6WzIsMTM0XSwyNjpbMiwxMzRdLDQ2OlsyLDEzNF0sNTE6WzIsMTM0XSw1NDpbMiwxMzRdLDY5OlsyLDEzNF0sNzU6WzIsMTM0XSw4MzpbMiwxMzRdLDg4OlsyLDEzNF0sOTA6WzIsMTM0XSw5OTpbMiwxMzRdLDEwMDo4NCwxMDE6WzEsNjJdLDEwMjpbMSwyMjZdLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDExNTpbMiwxMzRdLDEyMzpbMiwxMzRdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsMTM2XSw2OlsyLDEzNl0sMjU6WzIsMTM2XSwyNjpbMiwxMzZdLDQ2OlsyLDEzNl0sNTE6WzIsMTM2XSw1NDpbMiwxMzZdLDY5OlsyLDEzNl0sNzU6WzIsMTM2XSw4MzpbMiwxMzZdLDg4OlsyLDEzNl0sOTA6WzIsMTM2XSw5OTpbMiwxMzZdLDEwMDo4NCwxMDE6WzEsNjJdLDEwMjpbMSwyMjddLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDExNTpbMiwxMzZdLDEyMzpbMiwxMzZdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsMTQyXSw2OlsyLDE0Ml0sMjU6WzIsMTQyXSwyNjpbMiwxNDJdLDQ2OlsyLDE0Ml0sNTE6WzIsMTQyXSw1NDpbMiwxNDJdLDY5OlsyLDE0Ml0sNzU6WzIsMTQyXSw4MzpbMiwxNDJdLDg4OlsyLDE0Ml0sOTA6WzIsMTQyXSw5OTpbMiwxNDJdLDEwMTpbMiwxNDJdLDEwMjpbMiwxNDJdLDEwMzpbMiwxNDJdLDEwNzpbMiwxNDJdLDExNTpbMiwxNDJdLDEyMzpbMiwxNDJdLDEyNTpbMiwxNDJdLDEyNjpbMiwxNDJdLDEyOTpbMiwxNDJdLDEzMDpbMiwxNDJdLDEzMTpbMiwxNDJdLDEzMjpbMiwxNDJdLDEzMzpbMiwxNDJdLDEzNDpbMiwxNDJdfSx7MTpbMiwxNDNdLDY6WzIsMTQzXSwyNTpbMiwxNDNdLDI2OlsyLDE0M10sNDY6WzIsMTQzXSw1MTpbMiwxNDNdLDU0OlsyLDE0M10sNjk6WzIsMTQzXSw3NTpbMiwxNDNdLDgzOlsyLDE0M10sODg6WzIsMTQzXSw5MDpbMiwxNDNdLDk5OlsyLDE0M10sMTAwOjg0LDEwMTpbMSw2Ml0sMTAyOlsyLDE0M10sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTE1OlsyLDE0M10sMTIzOlsyLDE0M10sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7MTpbMiwxNDddLDY6WzIsMTQ3XSwyNTpbMiwxNDddLDI2OlsyLDE0N10sNDY6WzIsMTQ3XSw1MTpbMiwxNDddLDU0OlsyLDE0N10sNjk6WzIsMTQ3XSw3NTpbMiwxNDddLDgzOlsyLDE0N10sODg6WzIsMTQ3XSw5MDpbMiwxNDddLDk5OlsyLDE0N10sMTAxOlsyLDE0N10sMTAyOlsyLDE0N10sMTAzOlsyLDE0N10sMTA3OlsyLDE0N10sMTE1OlsyLDE0N10sMTIzOlsyLDE0N10sMTI1OlsyLDE0N10sMTI2OlsyLDE0N10sMTI5OlsyLDE0N10sMTMwOlsyLDE0N10sMTMxOlsyLDE0N10sMTMyOlsyLDE0N10sMTMzOlsyLDE0N10sMTM0OlsyLDE0N119LHsxMTM6WzIsMTQ5XSwxMTQ6WzIsMTQ5XX0sezI3OjE1NiwyODpbMSw3MF0sNTU6MTU3LDU2OjE1OCw3MzpbMSw2N10sODc6WzEsMTEyXSwxMTA6MjI4LDExMjoxNTV9LHs1MTpbMSwyMjldLDExMzpbMiwxNTRdLDExNDpbMiwxNTRdfSx7NTE6WzIsMTUxXSwxMTM6WzIsMTUxXSwxMTQ6WzIsMTUxXX0sezUxOlsyLDE1Ml0sMTEzOlsyLDE1Ml0sMTE0OlsyLDE1Ml19LHs1MTpbMiwxNTNdLDExMzpbMiwxNTNdLDExNDpbMiwxNTNdfSx7MTpbMiwxNDhdLDY6WzIsMTQ4XSwyNTpbMiwxNDhdLDI2OlsyLDE0OF0sNDY6WzIsMTQ4XSw1MTpbMiwxNDhdLDU0OlsyLDE0OF0sNjk6WzIsMTQ4XSw3NTpbMiwxNDhdLDgzOlsyLDE0OF0sODg6WzIsMTQ4XSw5MDpbMiwxNDhdLDk5OlsyLDE0OF0sMTAxOlsyLDE0OF0sMTAyOlsyLDE0OF0sMTAzOlsyLDE0OF0sMTA3OlsyLDE0OF0sMTE1OlsyLDE0OF0sMTIzOlsyLDE0OF0sMTI1OlsyLDE0OF0sMTI2OlsyLDE0OF0sMTI5OlsyLDE0OF0sMTMwOlsyLDE0OF0sMTMxOlsyLDE0OF0sMTMyOlsyLDE0OF0sMTMzOlsyLDE0OF0sMTM0OlsyLDE0OF19LHs4OjIzMCw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjIzMSw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs2OlsyLDQ5XSwyNTpbMiw0OV0sNTA6MjMyLDUxOlsxLDIzM10sNzU6WzIsNDldfSx7NjpbMiw4Nl0sMjU6WzIsODZdLDI2OlsyLDg2XSw1MTpbMiw4Nl0sNzU6WzIsODZdfSx7NjpbMiwzNV0sMjU6WzIsMzVdLDI2OlsyLDM1XSw0MDpbMSwyMzRdLDUxOlsyLDM1XSw3NTpbMiwzNV19LHs2OlsyLDM4XSwyNTpbMiwzOF0sMjY6WzIsMzhdLDUxOlsyLDM4XSw3NTpbMiwzOF19LHs2OlsyLDM5XSwyNTpbMiwzOV0sMjY6WzIsMzldLDQwOlsyLDM5XSw1MTpbMiwzOV0sNzU6WzIsMzldfSx7NjpbMiw0MF0sMjU6WzIsNDBdLDI2OlsyLDQwXSw0MDpbMiw0MF0sNTE6WzIsNDBdLDc1OlsyLDQwXX0sezY6WzIsNDFdLDI1OlsyLDQxXSwyNjpbMiw0MV0sNDA6WzIsNDFdLDUxOlsyLDQxXSw3NTpbMiw0MV19LHsxOlsyLDVdLDY6WzIsNV0sMjY6WzIsNV0sOTk6WzIsNV19LHsxOlsyLDI1XSw2OlsyLDI1XSwyNTpbMiwyNV0sMjY6WzIsMjVdLDQ2OlsyLDI1XSw1MTpbMiwyNV0sNTQ6WzIsMjVdLDY5OlsyLDI1XSw3NTpbMiwyNV0sODM6WzIsMjVdLDg4OlsyLDI1XSw5MDpbMiwyNV0sOTU6WzIsMjVdLDk2OlsyLDI1XSw5OTpbMiwyNV0sMTAxOlsyLDI1XSwxMDI6WzIsMjVdLDEwMzpbMiwyNV0sMTA3OlsyLDI1XSwxMTU6WzIsMjVdLDExODpbMiwyNV0sMTIwOlsyLDI1XSwxMjM6WzIsMjVdLDEyNTpbMiwyNV0sMTI2OlsyLDI1XSwxMjk6WzIsMjVdLDEzMDpbMiwyNV0sMTMxOlsyLDI1XSwxMzI6WzIsMjVdLDEzMzpbMiwyNV0sMTM0OlsyLDI1XX0sezE6WzIsMTg1XSw2OlsyLDE4NV0sMjU6WzIsMTg1XSwyNjpbMiwxODVdLDQ2OlsyLDE4NV0sNTE6WzIsMTg1XSw1NDpbMiwxODVdLDY5OlsyLDE4NV0sNzU6WzIsMTg1XSw4MzpbMiwxODVdLDg4OlsyLDE4NV0sOTA6WzIsMTg1XSw5OTpbMiwxODVdLDEwMDo4NCwxMDE6WzIsMTg1XSwxMDI6WzIsMTg1XSwxMDM6WzIsMTg1XSwxMDY6ODUsMTA3OlsyLDE4NV0sMTA4OjY2LDExNTpbMiwxODVdLDEyMzpbMiwxODVdLDEyNTpbMiwxODVdLDEyNjpbMiwxODVdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzIsMTg1XSwxMzI6WzIsMTg1XSwxMzM6WzIsMTg1XSwxMzQ6WzIsMTg1XX0sezE6WzIsMTg2XSw2OlsyLDE4Nl0sMjU6WzIsMTg2XSwyNjpbMiwxODZdLDQ2OlsyLDE4Nl0sNTE6WzIsMTg2XSw1NDpbMiwxODZdLDY5OlsyLDE4Nl0sNzU6WzIsMTg2XSw4MzpbMiwxODZdLDg4OlsyLDE4Nl0sOTA6WzIsMTg2XSw5OTpbMiwxODZdLDEwMDo4NCwxMDE6WzIsMTg2XSwxMDI6WzIsMTg2XSwxMDM6WzIsMTg2XSwxMDY6ODUsMTA3OlsyLDE4Nl0sMTA4OjY2LDExNTpbMiwxODZdLDEyMzpbMiwxODZdLDEyNTpbMiwxODZdLDEyNjpbMiwxODZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzIsMTg2XSwxMzI6WzIsMTg2XSwxMzM6WzIsMTg2XSwxMzQ6WzIsMTg2XX0sezE6WzIsMTg3XSw2OlsyLDE4N10sMjU6WzIsMTg3XSwyNjpbMiwxODddLDQ2OlsyLDE4N10sNTE6WzIsMTg3XSw1NDpbMiwxODddLDY5OlsyLDE4N10sNzU6WzIsMTg3XSw4MzpbMiwxODddLDg4OlsyLDE4N10sOTA6WzIsMTg3XSw5OTpbMiwxODddLDEwMDo4NCwxMDE6WzIsMTg3XSwxMDI6WzIsMTg3XSwxMDM6WzIsMTg3XSwxMDY6ODUsMTA3OlsyLDE4N10sMTA4OjY2LDExNTpbMiwxODddLDEyMzpbMiwxODddLDEyNTpbMiwxODddLDEyNjpbMiwxODddLDEyOTpbMSw3NV0sMTMwOlsyLDE4N10sMTMxOlsyLDE4N10sMTMyOlsyLDE4N10sMTMzOlsyLDE4N10sMTM0OlsyLDE4N119LHsxOlsyLDE4OF0sNjpbMiwxODhdLDI1OlsyLDE4OF0sMjY6WzIsMTg4XSw0NjpbMiwxODhdLDUxOlsyLDE4OF0sNTQ6WzIsMTg4XSw2OTpbMiwxODhdLDc1OlsyLDE4OF0sODM6WzIsMTg4XSw4ODpbMiwxODhdLDkwOlsyLDE4OF0sOTk6WzIsMTg4XSwxMDA6ODQsMTAxOlsyLDE4OF0sMTAyOlsyLDE4OF0sMTAzOlsyLDE4OF0sMTA2Ojg1LDEwNzpbMiwxODhdLDEwODo2NiwxMTU6WzIsMTg4XSwxMjM6WzIsMTg4XSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMiwxODhdLDEzMjpbMiwxODhdLDEzMzpbMiwxODhdLDEzNDpbMiwxODhdfSx7MTpbMiwxODldLDY6WzIsMTg5XSwyNTpbMiwxODldLDI2OlsyLDE4OV0sNDY6WzIsMTg5XSw1MTpbMiwxODldLDU0OlsyLDE4OV0sNjk6WzIsMTg5XSw3NTpbMiwxODldLDgzOlsyLDE4OV0sODg6WzIsMTg5XSw5MDpbMiwxODldLDk5OlsyLDE4OV0sMTAwOjg0LDEwMTpbMiwxODldLDEwMjpbMiwxODldLDEwMzpbMiwxODldLDEwNjo4NSwxMDc6WzIsMTg5XSwxMDg6NjYsMTE1OlsyLDE4OV0sMTIzOlsyLDE4OV0sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMiwxODldLDEzMzpbMiwxODldLDEzNDpbMSw4Ml19LHsxOlsyLDE5MF0sNjpbMiwxOTBdLDI1OlsyLDE5MF0sMjY6WzIsMTkwXSw0NjpbMiwxOTBdLDUxOlsyLDE5MF0sNTQ6WzIsMTkwXSw2OTpbMiwxOTBdLDc1OlsyLDE5MF0sODM6WzIsMTkwXSw4ODpbMiwxOTBdLDkwOlsyLDE5MF0sOTk6WzIsMTkwXSwxMDA6ODQsMTAxOlsyLDE5MF0sMTAyOlsyLDE5MF0sMTAzOlsyLDE5MF0sMTA2Ojg1LDEwNzpbMiwxOTBdLDEwODo2NiwxMTU6WzIsMTkwXSwxMjM6WzIsMTkwXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzIsMTkwXSwxMzQ6WzEsODJdfSx7MTpbMiwxOTFdLDY6WzIsMTkxXSwyNTpbMiwxOTFdLDI2OlsyLDE5MV0sNDY6WzIsMTkxXSw1MTpbMiwxOTFdLDU0OlsyLDE5MV0sNjk6WzIsMTkxXSw3NTpbMiwxOTFdLDgzOlsyLDE5MV0sODg6WzIsMTkxXSw5MDpbMiwxOTFdLDk5OlsyLDE5MV0sMTAwOjg0LDEwMTpbMiwxOTFdLDEwMjpbMiwxOTFdLDEwMzpbMiwxOTFdLDEwNjo4NSwxMDc6WzIsMTkxXSwxMDg6NjYsMTE1OlsyLDE5MV0sMTIzOlsyLDE5MV0sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMiwxOTFdLDEzMzpbMiwxOTFdLDEzNDpbMiwxOTFdfSx7MTpbMiwxNzZdLDY6WzIsMTc2XSwyNTpbMiwxNzZdLDI2OlsyLDE3Nl0sNDY6WzIsMTc2XSw1MTpbMiwxNzZdLDU0OlsyLDE3Nl0sNjk6WzIsMTc2XSw3NTpbMiwxNzZdLDgzOlsyLDE3Nl0sODg6WzIsMTc2XSw5MDpbMiwxNzZdLDk5OlsyLDE3Nl0sMTAwOjg0LDEwMTpbMSw2Ml0sMTAyOlsyLDE3Nl0sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTE1OlsyLDE3Nl0sMTIzOlsxLDgzXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHsxOlsyLDE3NV0sNjpbMiwxNzVdLDI1OlsyLDE3NV0sMjY6WzIsMTc1XSw0NjpbMiwxNzVdLDUxOlsyLDE3NV0sNTQ6WzIsMTc1XSw2OTpbMiwxNzVdLDc1OlsyLDE3NV0sODM6WzIsMTc1XSw4ODpbMiwxNzVdLDkwOlsyLDE3NV0sOTk6WzIsMTc1XSwxMDA6ODQsMTAxOlsxLDYyXSwxMDI6WzIsMTc1XSwxMDM6WzEsNjNdLDEwNjo4NSwxMDc6WzEsNjVdLDEwODo2NiwxMTU6WzIsMTc1XSwxMjM6WzEsODNdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsOThdLDY6WzIsOThdLDI1OlsyLDk4XSwyNjpbMiw5OF0sNDY6WzIsOThdLDUxOlsyLDk4XSw1NDpbMiw5OF0sNjM6WzIsOThdLDY0OlsyLDk4XSw2NTpbMiw5OF0sNjc6WzIsOThdLDY5OlsyLDk4XSw3MDpbMiw5OF0sNzE6WzIsOThdLDc1OlsyLDk4XSw4MTpbMiw5OF0sODI6WzIsOThdLDgzOlsyLDk4XSw4ODpbMiw5OF0sOTA6WzIsOThdLDk5OlsyLDk4XSwxMDE6WzIsOThdLDEwMjpbMiw5OF0sMTAzOlsyLDk4XSwxMDc6WzIsOThdLDExNTpbMiw5OF0sMTIzOlsyLDk4XSwxMjU6WzIsOThdLDEyNjpbMiw5OF0sMTI5OlsyLDk4XSwxMzA6WzIsOThdLDEzMTpbMiw5OF0sMTMyOlsyLDk4XSwxMzM6WzIsOThdLDEzNDpbMiw5OF19LHsxOlsyLDc0XSw2OlsyLDc0XSwyNTpbMiw3NF0sMjY6WzIsNzRdLDM3OlsyLDc0XSw0NjpbMiw3NF0sNTE6WzIsNzRdLDU0OlsyLDc0XSw2MzpbMiw3NF0sNjQ6WzIsNzRdLDY1OlsyLDc0XSw2NzpbMiw3NF0sNjk6WzIsNzRdLDcwOlsyLDc0XSw3MTpbMiw3NF0sNzU6WzIsNzRdLDc3OlsyLDc0XSw4MTpbMiw3NF0sODI6WzIsNzRdLDgzOlsyLDc0XSw4ODpbMiw3NF0sOTA6WzIsNzRdLDk5OlsyLDc0XSwxMDE6WzIsNzRdLDEwMjpbMiw3NF0sMTAzOlsyLDc0XSwxMDc6WzIsNzRdLDExNTpbMiw3NF0sMTIzOlsyLDc0XSwxMjU6WzIsNzRdLDEyNjpbMiw3NF0sMTI3OlsyLDc0XSwxMjg6WzIsNzRdLDEyOTpbMiw3NF0sMTMwOlsyLDc0XSwxMzE6WzIsNzRdLDEzMjpbMiw3NF0sMTMzOlsyLDc0XSwxMzQ6WzIsNzRdLDEzNTpbMiw3NF19LHsxOlsyLDc1XSw2OlsyLDc1XSwyNTpbMiw3NV0sMjY6WzIsNzVdLDM3OlsyLDc1XSw0NjpbMiw3NV0sNTE6WzIsNzVdLDU0OlsyLDc1XSw2MzpbMiw3NV0sNjQ6WzIsNzVdLDY1OlsyLDc1XSw2NzpbMiw3NV0sNjk6WzIsNzVdLDcwOlsyLDc1XSw3MTpbMiw3NV0sNzU6WzIsNzVdLDc3OlsyLDc1XSw4MTpbMiw3NV0sODI6WzIsNzVdLDgzOlsyLDc1XSw4ODpbMiw3NV0sOTA6WzIsNzVdLDk5OlsyLDc1XSwxMDE6WzIsNzVdLDEwMjpbMiw3NV0sMTAzOlsyLDc1XSwxMDc6WzIsNzVdLDExNTpbMiw3NV0sMTIzOlsyLDc1XSwxMjU6WzIsNzVdLDEyNjpbMiw3NV0sMTI3OlsyLDc1XSwxMjg6WzIsNzVdLDEyOTpbMiw3NV0sMTMwOlsyLDc1XSwxMzE6WzIsNzVdLDEzMjpbMiw3NV0sMTMzOlsyLDc1XSwxMzQ6WzIsNzVdLDEzNTpbMiw3NV19LHsxOlsyLDc2XSw2OlsyLDc2XSwyNTpbMiw3Nl0sMjY6WzIsNzZdLDM3OlsyLDc2XSw0NjpbMiw3Nl0sNTE6WzIsNzZdLDU0OlsyLDc2XSw2MzpbMiw3Nl0sNjQ6WzIsNzZdLDY1OlsyLDc2XSw2NzpbMiw3Nl0sNjk6WzIsNzZdLDcwOlsyLDc2XSw3MTpbMiw3Nl0sNzU6WzIsNzZdLDc3OlsyLDc2XSw4MTpbMiw3Nl0sODI6WzIsNzZdLDgzOlsyLDc2XSw4ODpbMiw3Nl0sOTA6WzIsNzZdLDk5OlsyLDc2XSwxMDE6WzIsNzZdLDEwMjpbMiw3Nl0sMTAzOlsyLDc2XSwxMDc6WzIsNzZdLDExNTpbMiw3Nl0sMTIzOlsyLDc2XSwxMjU6WzIsNzZdLDEyNjpbMiw3Nl0sMTI3OlsyLDc2XSwxMjg6WzIsNzZdLDEyOTpbMiw3Nl0sMTMwOlsyLDc2XSwxMzE6WzIsNzZdLDEzMjpbMiw3Nl0sMTMzOlsyLDc2XSwxMzQ6WzIsNzZdLDEzNTpbMiw3Nl19LHs2OTpbMSwyMzVdfSx7NTQ6WzEsMTg5XSw2OTpbMiw4Ml0sODk6MjM2LDkwOlsxLDE4OF0sMTAwOjg0LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTIzOlsxLDgzXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHs2OTpbMiw4M119LHs4OjIzNyw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHsxMzpbMiwxMTFdLDI4OlsyLDExMV0sMzA6WzIsMTExXSwzMTpbMiwxMTFdLDMzOlsyLDExMV0sMzQ6WzIsMTExXSwzNTpbMiwxMTFdLDQyOlsyLDExMV0sNDM6WzIsMTExXSw0NDpbMiwxMTFdLDQ4OlsyLDExMV0sNDk6WzIsMTExXSw2OTpbMiwxMTFdLDczOlsyLDExMV0sNzY6WzIsMTExXSw4MDpbMiwxMTFdLDg1OlsyLDExMV0sODY6WzIsMTExXSw4NzpbMiwxMTFdLDkzOlsyLDExMV0sOTc6WzIsMTExXSw5ODpbMiwxMTFdLDEwMTpbMiwxMTFdLDEwMzpbMiwxMTFdLDEwNTpbMiwxMTFdLDEwNzpbMiwxMTFdLDExNjpbMiwxMTFdLDEyMjpbMiwxMTFdLDEyNDpbMiwxMTFdLDEyNTpbMiwxMTFdLDEyNjpbMiwxMTFdLDEyNzpbMiwxMTFdLDEyODpbMiwxMTFdfSx7MTM6WzIsMTEyXSwyODpbMiwxMTJdLDMwOlsyLDExMl0sMzE6WzIsMTEyXSwzMzpbMiwxMTJdLDM0OlsyLDExMl0sMzU6WzIsMTEyXSw0MjpbMiwxMTJdLDQzOlsyLDExMl0sNDQ6WzIsMTEyXSw0ODpbMiwxMTJdLDQ5OlsyLDExMl0sNjk6WzIsMTEyXSw3MzpbMiwxMTJdLDc2OlsyLDExMl0sODA6WzIsMTEyXSw4NTpbMiwxMTJdLDg2OlsyLDExMl0sODc6WzIsMTEyXSw5MzpbMiwxMTJdLDk3OlsyLDExMl0sOTg6WzIsMTEyXSwxMDE6WzIsMTEyXSwxMDM6WzIsMTEyXSwxMDU6WzIsMTEyXSwxMDc6WzIsMTEyXSwxMTY6WzIsMTEyXSwxMjI6WzIsMTEyXSwxMjQ6WzIsMTEyXSwxMjU6WzIsMTEyXSwxMjY6WzIsMTEyXSwxMjc6WzIsMTEyXSwxMjg6WzIsMTEyXX0sezE6WzIsODBdLDY6WzIsODBdLDI1OlsyLDgwXSwyNjpbMiw4MF0sMzc6WzIsODBdLDQ2OlsyLDgwXSw1MTpbMiw4MF0sNTQ6WzIsODBdLDYzOlsyLDgwXSw2NDpbMiw4MF0sNjU6WzIsODBdLDY3OlsyLDgwXSw2OTpbMiw4MF0sNzA6WzIsODBdLDcxOlsyLDgwXSw3NTpbMiw4MF0sNzc6WzIsODBdLDgxOlsyLDgwXSw4MjpbMiw4MF0sODM6WzIsODBdLDg4OlsyLDgwXSw5MDpbMiw4MF0sOTk6WzIsODBdLDEwMTpbMiw4MF0sMTAyOlsyLDgwXSwxMDM6WzIsODBdLDEwNzpbMiw4MF0sMTE1OlsyLDgwXSwxMjM6WzIsODBdLDEyNTpbMiw4MF0sMTI2OlsyLDgwXSwxMjc6WzIsODBdLDEyODpbMiw4MF0sMTI5OlsyLDgwXSwxMzA6WzIsODBdLDEzMTpbMiw4MF0sMTMyOlsyLDgwXSwxMzM6WzIsODBdLDEzNDpbMiw4MF0sMTM1OlsyLDgwXX0sezE6WzIsODFdLDY6WzIsODFdLDI1OlsyLDgxXSwyNjpbMiw4MV0sMzc6WzIsODFdLDQ2OlsyLDgxXSw1MTpbMiw4MV0sNTQ6WzIsODFdLDYzOlsyLDgxXSw2NDpbMiw4MV0sNjU6WzIsODFdLDY3OlsyLDgxXSw2OTpbMiw4MV0sNzA6WzIsODFdLDcxOlsyLDgxXSw3NTpbMiw4MV0sNzc6WzIsODFdLDgxOlsyLDgxXSw4MjpbMiw4MV0sODM6WzIsODFdLDg4OlsyLDgxXSw5MDpbMiw4MV0sOTk6WzIsODFdLDEwMTpbMiw4MV0sMTAyOlsyLDgxXSwxMDM6WzIsODFdLDEwNzpbMiw4MV0sMTE1OlsyLDgxXSwxMjM6WzIsODFdLDEyNTpbMiw4MV0sMTI2OlsyLDgxXSwxMjc6WzIsODFdLDEyODpbMiw4MV0sMTI5OlsyLDgxXSwxMzA6WzIsODFdLDEzMTpbMiw4MV0sMTMyOlsyLDgxXSwxMzM6WzIsODFdLDEzNDpbMiw4MV0sMTM1OlsyLDgxXX0sezE6WzIsOTldLDY6WzIsOTldLDI1OlsyLDk5XSwyNjpbMiw5OV0sNDY6WzIsOTldLDUxOlsyLDk5XSw1NDpbMiw5OV0sNjM6WzIsOTldLDY0OlsyLDk5XSw2NTpbMiw5OV0sNjc6WzIsOTldLDY5OlsyLDk5XSw3MDpbMiw5OV0sNzE6WzIsOTldLDc1OlsyLDk5XSw4MTpbMiw5OV0sODI6WzIsOTldLDgzOlsyLDk5XSw4ODpbMiw5OV0sOTA6WzIsOTldLDk5OlsyLDk5XSwxMDE6WzIsOTldLDEwMjpbMiw5OV0sMTAzOlsyLDk5XSwxMDc6WzIsOTldLDExNTpbMiw5OV0sMTIzOlsyLDk5XSwxMjU6WzIsOTldLDEyNjpbMiw5OV0sMTI5OlsyLDk5XSwxMzA6WzIsOTldLDEzMTpbMiw5OV0sMTMyOlsyLDk5XSwxMzM6WzIsOTldLDEzNDpbMiw5OV19LHsxOlsyLDMzXSw2OlsyLDMzXSwyNTpbMiwzM10sMjY6WzIsMzNdLDQ2OlsyLDMzXSw1MTpbMiwzM10sNTQ6WzIsMzNdLDY5OlsyLDMzXSw3NTpbMiwzM10sODM6WzIsMzNdLDg4OlsyLDMzXSw5MDpbMiwzM10sOTk6WzIsMzNdLDEwMDo4NCwxMDE6WzIsMzNdLDEwMjpbMiwzM10sMTAzOlsyLDMzXSwxMDY6ODUsMTA3OlsyLDMzXSwxMDg6NjYsMTE1OlsyLDMzXSwxMjM6WzIsMzNdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezg6MjM4LDk6MTE1LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MjMsNDE6NjAsNDI6WzEsNDRdLDQzOlsxLDQ2XSw0NDpbMSwyOV0sNDc6MzAsNDg6WzEsNTddLDQ5OlsxLDU4XSw1NTo0Nyw1Njo0OCw1ODozNiw2MDoyNSw2MToyNiw2MjoyNyw3MzpbMSw2N10sNzY6WzEsNDNdLDgwOlsxLDI4XSw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezE6WzIsMTA0XSw2OlsyLDEwNF0sMjU6WzIsMTA0XSwyNjpbMiwxMDRdLDQ2OlsyLDEwNF0sNTE6WzIsMTA0XSw1NDpbMiwxMDRdLDYzOlsyLDEwNF0sNjQ6WzIsMTA0XSw2NTpbMiwxMDRdLDY3OlsyLDEwNF0sNjk6WzIsMTA0XSw3MDpbMiwxMDRdLDcxOlsyLDEwNF0sNzU6WzIsMTA0XSw4MTpbMiwxMDRdLDgyOlsyLDEwNF0sODM6WzIsMTA0XSw4ODpbMiwxMDRdLDkwOlsyLDEwNF0sOTk6WzIsMTA0XSwxMDE6WzIsMTA0XSwxMDI6WzIsMTA0XSwxMDM6WzIsMTA0XSwxMDc6WzIsMTA0XSwxMTU6WzIsMTA0XSwxMjM6WzIsMTA0XSwxMjU6WzIsMTA0XSwxMjY6WzIsMTA0XSwxMjk6WzIsMTA0XSwxMzA6WzIsMTA0XSwxMzE6WzIsMTA0XSwxMzI6WzIsMTA0XSwxMzM6WzIsMTA0XSwxMzQ6WzIsMTA0XX0sezY6WzIsNDldLDI1OlsyLDQ5XSw1MDoyMzksNTE6WzEsMjIzXSw4MzpbMiw0OV19LHs2OlsyLDEyMl0sMjU6WzIsMTIyXSwyNjpbMiwxMjJdLDUxOlsyLDEyMl0sNTQ6WzEsMjQwXSw4MzpbMiwxMjJdLDg4OlsyLDEyMl0sMTAwOjg0LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTIzOlsxLDgzXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHs0NzoyNDEsNDg6WzEsNTddLDQ5OlsxLDU4XX0sezI3OjEwNywyODpbMSw3MF0sNDE6MTA4LDUyOjI0Miw1MzoxMDYsNTU6MTA5LDU2OjExMCw3MzpbMSw2N10sODY6WzEsMTExXSw4NzpbMSwxMTJdfSx7NDY6WzIsNTVdLDUxOlsyLDU1XX0sezg6MjQzLDk6MTE1LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MjMsNDE6NjAsNDI6WzEsNDRdLDQzOlsxLDQ2XSw0NDpbMSwyOV0sNDc6MzAsNDg6WzEsNTddLDQ5OlsxLDU4XSw1NTo0Nyw1Njo0OCw1ODozNiw2MDoyNSw2MToyNiw2MjoyNyw3MzpbMSw2N10sNzY6WzEsNDNdLDgwOlsxLDI4XSw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezE6WzIsMTkyXSw2OlsyLDE5Ml0sMjU6WzIsMTkyXSwyNjpbMiwxOTJdLDQ2OlsyLDE5Ml0sNTE6WzIsMTkyXSw1NDpbMiwxOTJdLDY5OlsyLDE5Ml0sNzU6WzIsMTkyXSw4MzpbMiwxOTJdLDg4OlsyLDE5Ml0sOTA6WzIsMTkyXSw5OTpbMiwxOTJdLDEwMDo4NCwxMDE6WzIsMTkyXSwxMDI6WzIsMTkyXSwxMDM6WzIsMTkyXSwxMDY6ODUsMTA3OlsyLDE5Ml0sMTA4OjY2LDExNTpbMiwxOTJdLDEyMzpbMiwxOTJdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezg6MjQ0LDk6MTE1LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MjMsNDE6NjAsNDI6WzEsNDRdLDQzOlsxLDQ2XSw0NDpbMSwyOV0sNDc6MzAsNDg6WzEsNTddLDQ5OlsxLDU4XSw1NTo0Nyw1Njo0OCw1ODozNiw2MDoyNSw2MToyNiw2MjoyNyw3MzpbMSw2N10sNzY6WzEsNDNdLDgwOlsxLDI4XSw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezE6WzIsMTk0XSw2OlsyLDE5NF0sMjU6WzIsMTk0XSwyNjpbMiwxOTRdLDQ2OlsyLDE5NF0sNTE6WzIsMTk0XSw1NDpbMiwxOTRdLDY5OlsyLDE5NF0sNzU6WzIsMTk0XSw4MzpbMiwxOTRdLDg4OlsyLDE5NF0sOTA6WzIsMTk0XSw5OTpbMiwxOTRdLDEwMDo4NCwxMDE6WzIsMTk0XSwxMDI6WzIsMTk0XSwxMDM6WzIsMTk0XSwxMDY6ODUsMTA3OlsyLDE5NF0sMTA4OjY2LDExNTpbMiwxOTRdLDEyMzpbMiwxOTRdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsMTc0XSw2OlsyLDE3NF0sMjU6WzIsMTc0XSwyNjpbMiwxNzRdLDQ2OlsyLDE3NF0sNTE6WzIsMTc0XSw1NDpbMiwxNzRdLDY5OlsyLDE3NF0sNzU6WzIsMTc0XSw4MzpbMiwxNzRdLDg4OlsyLDE3NF0sOTA6WzIsMTc0XSw5OTpbMiwxNzRdLDEwMTpbMiwxNzRdLDEwMjpbMiwxNzRdLDEwMzpbMiwxNzRdLDEwNzpbMiwxNzRdLDExNTpbMiwxNzRdLDEyMzpbMiwxNzRdLDEyNTpbMiwxNzRdLDEyNjpbMiwxNzRdLDEyOTpbMiwxNzRdLDEzMDpbMiwxNzRdLDEzMTpbMiwxNzRdLDEzMjpbMiwxNzRdLDEzMzpbMiwxNzRdLDEzNDpbMiwxNzRdfSx7ODoyNDUsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7MTpbMiwxMjddLDY6WzIsMTI3XSwyNTpbMiwxMjddLDI2OlsyLDEyN10sNDY6WzIsMTI3XSw1MTpbMiwxMjddLDU0OlsyLDEyN10sNjk6WzIsMTI3XSw3NTpbMiwxMjddLDgzOlsyLDEyN10sODg6WzIsMTI3XSw5MDpbMiwxMjddLDk1OlsxLDI0Nl0sOTk6WzIsMTI3XSwxMDE6WzIsMTI3XSwxMDI6WzIsMTI3XSwxMDM6WzIsMTI3XSwxMDc6WzIsMTI3XSwxMTU6WzIsMTI3XSwxMjM6WzIsMTI3XSwxMjU6WzIsMTI3XSwxMjY6WzIsMTI3XSwxMjk6WzIsMTI3XSwxMzA6WzIsMTI3XSwxMzE6WzIsMTI3XSwxMzI6WzIsMTI3XSwxMzM6WzIsMTI3XSwxMzQ6WzIsMTI3XX0sezU6MjQ3LDI1OlsxLDVdfSx7Mjc6MjQ4LDI4OlsxLDcwXX0sezExNzoyNDksMTE5OjIxMiwxMjA6WzEsMjEzXX0sezI2OlsxLDI1MF0sMTE4OlsxLDI1MV0sMTE5OjI1MiwxMjA6WzEsMjEzXX0sezI2OlsyLDE2N10sMTE4OlsyLDE2N10sMTIwOlsyLDE2N119LHs4OjI1NCw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTI6MjUzLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7MTpbMiw5Ml0sNToyNTUsNjpbMiw5Ml0sMjU6WzEsNV0sMjY6WzIsOTJdLDQ2OlsyLDkyXSw1MTpbMiw5Ml0sNTQ6WzIsOTJdLDU5OjkwLDYzOlsxLDkyXSw2NDpbMSw5M10sNjU6WzEsOTRdLDY2Ojk1LDY3OlsxLDk2XSw2OTpbMiw5Ml0sNzA6WzEsOTddLDcxOlsxLDk4XSw3NTpbMiw5Ml0sNzg6ODksODE6WzEsOTFdLDgyOlsyLDEwMl0sODM6WzIsOTJdLDg4OlsyLDkyXSw5MDpbMiw5Ml0sOTk6WzIsOTJdLDEwMTpbMiw5Ml0sMTAyOlsyLDkyXSwxMDM6WzIsOTJdLDEwNzpbMiw5Ml0sMTE1OlsyLDkyXSwxMjM6WzIsOTJdLDEyNTpbMiw5Ml0sMTI2OlsyLDkyXSwxMjk6WzIsOTJdLDEzMDpbMiw5Ml0sMTMxOlsyLDkyXSwxMzI6WzIsOTJdLDEzMzpbMiw5Ml0sMTM0OlsyLDkyXX0sezE6WzIsNjZdLDY6WzIsNjZdLDI1OlsyLDY2XSwyNjpbMiw2Nl0sNDY6WzIsNjZdLDUxOlsyLDY2XSw1NDpbMiw2Nl0sNjM6WzIsNjZdLDY0OlsyLDY2XSw2NTpbMiw2Nl0sNjc6WzIsNjZdLDY5OlsyLDY2XSw3MDpbMiw2Nl0sNzE6WzIsNjZdLDc1OlsyLDY2XSw4MTpbMiw2Nl0sODI6WzIsNjZdLDgzOlsyLDY2XSw4ODpbMiw2Nl0sOTA6WzIsNjZdLDk5OlsyLDY2XSwxMDE6WzIsNjZdLDEwMjpbMiw2Nl0sMTAzOlsyLDY2XSwxMDc6WzIsNjZdLDExNTpbMiw2Nl0sMTIzOlsyLDY2XSwxMjU6WzIsNjZdLDEyNjpbMiw2Nl0sMTI5OlsyLDY2XSwxMzA6WzIsNjZdLDEzMTpbMiw2Nl0sMTMyOlsyLDY2XSwxMzM6WzIsNjZdLDEzNDpbMiw2Nl19LHsxOlsyLDk1XSw2OlsyLDk1XSwyNTpbMiw5NV0sMjY6WzIsOTVdLDQ2OlsyLDk1XSw1MTpbMiw5NV0sNTQ6WzIsOTVdLDY5OlsyLDk1XSw3NTpbMiw5NV0sODM6WzIsOTVdLDg4OlsyLDk1XSw5MDpbMiw5NV0sOTk6WzIsOTVdLDEwMTpbMiw5NV0sMTAyOlsyLDk1XSwxMDM6WzIsOTVdLDEwNzpbMiw5NV0sMTE1OlsyLDk1XSwxMjM6WzIsOTVdLDEyNTpbMiw5NV0sMTI2OlsyLDk1XSwxMjk6WzIsOTVdLDEzMDpbMiw5NV0sMTMxOlsyLDk1XSwxMzI6WzIsOTVdLDEzMzpbMiw5NV0sMTM0OlsyLDk1XX0sezE0OjI1NiwxNToxMjAsMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MTIxLDQxOjYwLDU1OjQ3LDU2OjQ4LDU4OjIxNSw2MDoyNSw2MToyNiw2MjoyNyw3MzpbMSw2N10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDk4OlsxLDUzXX0sezE6WzIsMTMyXSw2OlsyLDEzMl0sMjU6WzIsMTMyXSwyNjpbMiwxMzJdLDQ2OlsyLDEzMl0sNTE6WzIsMTMyXSw1NDpbMiwxMzJdLDYzOlsyLDEzMl0sNjQ6WzIsMTMyXSw2NTpbMiwxMzJdLDY3OlsyLDEzMl0sNjk6WzIsMTMyXSw3MDpbMiwxMzJdLDcxOlsyLDEzMl0sNzU6WzIsMTMyXSw4MTpbMiwxMzJdLDgyOlsyLDEzMl0sODM6WzIsMTMyXSw4ODpbMiwxMzJdLDkwOlsyLDEzMl0sOTk6WzIsMTMyXSwxMDE6WzIsMTMyXSwxMDI6WzIsMTMyXSwxMDM6WzIsMTMyXSwxMDc6WzIsMTMyXSwxMTU6WzIsMTMyXSwxMjM6WzIsMTMyXSwxMjU6WzIsMTMyXSwxMjY6WzIsMTMyXSwxMjk6WzIsMTMyXSwxMzA6WzIsMTMyXSwxMzE6WzIsMTMyXSwxMzI6WzIsMTMyXSwxMzM6WzIsMTMyXSwxMzQ6WzIsMTMyXX0sezY6WzEsNzFdLDI2OlsxLDI1N119LHs4OjI1OCw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs2OlsyLDYxXSwxMzpbMiwxMTJdLDI1OlsyLDYxXSwyODpbMiwxMTJdLDMwOlsyLDExMl0sMzE6WzIsMTEyXSwzMzpbMiwxMTJdLDM0OlsyLDExMl0sMzU6WzIsMTEyXSw0MjpbMiwxMTJdLDQzOlsyLDExMl0sNDQ6WzIsMTEyXSw0ODpbMiwxMTJdLDQ5OlsyLDExMl0sNTE6WzIsNjFdLDczOlsyLDExMl0sNzY6WzIsMTEyXSw4MDpbMiwxMTJdLDg1OlsyLDExMl0sODY6WzIsMTEyXSw4NzpbMiwxMTJdLDg4OlsyLDYxXSw5MzpbMiwxMTJdLDk3OlsyLDExMl0sOTg6WzIsMTEyXSwxMDE6WzIsMTEyXSwxMDM6WzIsMTEyXSwxMDU6WzIsMTEyXSwxMDc6WzIsMTEyXSwxMTY6WzIsMTEyXSwxMjI6WzIsMTEyXSwxMjQ6WzIsMTEyXSwxMjU6WzIsMTEyXSwxMjY6WzIsMTEyXSwxMjc6WzIsMTEyXSwxMjg6WzIsMTEyXX0sezY6WzEsMjYwXSwyNTpbMSwyNjFdLDg4OlsxLDI1OV19LHs2OlsyLDUwXSw4OjE5Nyw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI1OlsyLDUwXSwyNjpbMiw1MF0sMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MjMsNDE6NjAsNDI6WzEsNDRdLDQzOlsxLDQ2XSw0NDpbMSwyOV0sNDc6MzAsNDg6WzEsNTddLDQ5OlsxLDU4XSw1NTo0Nyw1Njo0OCw1NzoxNDUsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODM6WzIsNTBdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDg4OlsyLDUwXSw5MToyNjIsOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs2OlsyLDQ5XSwyNTpbMiw0OV0sMjY6WzIsNDldLDUwOjI2Myw1MTpbMSwyMjNdfSx7MTpbMiwxNzFdLDY6WzIsMTcxXSwyNTpbMiwxNzFdLDI2OlsyLDE3MV0sNDY6WzIsMTcxXSw1MTpbMiwxNzFdLDU0OlsyLDE3MV0sNjk6WzIsMTcxXSw3NTpbMiwxNzFdLDgzOlsyLDE3MV0sODg6WzIsMTcxXSw5MDpbMiwxNzFdLDk5OlsyLDE3MV0sMTAxOlsyLDE3MV0sMTAyOlsyLDE3MV0sMTAzOlsyLDE3MV0sMTA3OlsyLDE3MV0sMTE1OlsyLDE3MV0sMTE4OlsyLDE3MV0sMTIzOlsyLDE3MV0sMTI1OlsyLDE3MV0sMTI2OlsyLDE3MV0sMTI5OlsyLDE3MV0sMTMwOlsyLDE3MV0sMTMxOlsyLDE3MV0sMTMyOlsyLDE3MV0sMTMzOlsyLDE3MV0sMTM0OlsyLDE3MV19LHs4OjI2NCw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs4OjI2NSw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHsxMTM6WzIsMTUwXSwxMTQ6WzIsMTUwXX0sezI3OjE1NiwyODpbMSw3MF0sNTU6MTU3LDU2OjE1OCw3MzpbMSw2N10sODc6WzEsMTEyXSwxMTI6MjY2fSx7MTpbMiwxNTZdLDY6WzIsMTU2XSwyNTpbMiwxNTZdLDI2OlsyLDE1Nl0sNDY6WzIsMTU2XSw1MTpbMiwxNTZdLDU0OlsyLDE1Nl0sNjk6WzIsMTU2XSw3NTpbMiwxNTZdLDgzOlsyLDE1Nl0sODg6WzIsMTU2XSw5MDpbMiwxNTZdLDk5OlsyLDE1Nl0sMTAwOjg0LDEwMTpbMiwxNTZdLDEwMjpbMSwyNjddLDEwMzpbMiwxNTZdLDEwNjo4NSwxMDc6WzIsMTU2XSwxMDg6NjYsMTE1OlsxLDI2OF0sMTIzOlsyLDE1Nl0sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7MTpbMiwxNTddLDY6WzIsMTU3XSwyNTpbMiwxNTddLDI2OlsyLDE1N10sNDY6WzIsMTU3XSw1MTpbMiwxNTddLDU0OlsyLDE1N10sNjk6WzIsMTU3XSw3NTpbMiwxNTddLDgzOlsyLDE1N10sODg6WzIsMTU3XSw5MDpbMiwxNTddLDk5OlsyLDE1N10sMTAwOjg0LDEwMTpbMiwxNTddLDEwMjpbMSwyNjldLDEwMzpbMiwxNTddLDEwNjo4NSwxMDc6WzIsMTU3XSwxMDg6NjYsMTE1OlsyLDE1N10sMTIzOlsyLDE1N10sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7NjpbMSwyNzFdLDI1OlsxLDI3Ml0sNzU6WzEsMjcwXX0sezY6WzIsNTBdLDEyOjE2NSwyNTpbMiw1MF0sMjY6WzIsNTBdLDI3OjE2NiwyODpbMSw3MF0sMjk6MTY3LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzg6MjczLDM5OjE2NCw0MToxNjgsNDM6WzEsNDZdLDc1OlsyLDUwXSw4NjpbMSwxMTFdfSx7ODoyNzQsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNTpbMSwyNzVdLDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHsxOlsyLDc5XSw2OlsyLDc5XSwyNTpbMiw3OV0sMjY6WzIsNzldLDM3OlsyLDc5XSw0NjpbMiw3OV0sNTE6WzIsNzldLDU0OlsyLDc5XSw2MzpbMiw3OV0sNjQ6WzIsNzldLDY1OlsyLDc5XSw2NzpbMiw3OV0sNjk6WzIsNzldLDcwOlsyLDc5XSw3MTpbMiw3OV0sNzU6WzIsNzldLDc3OlsyLDc5XSw4MTpbMiw3OV0sODI6WzIsNzldLDgzOlsyLDc5XSw4ODpbMiw3OV0sOTA6WzIsNzldLDk5OlsyLDc5XSwxMDE6WzIsNzldLDEwMjpbMiw3OV0sMTAzOlsyLDc5XSwxMDc6WzIsNzldLDExNTpbMiw3OV0sMTIzOlsyLDc5XSwxMjU6WzIsNzldLDEyNjpbMiw3OV0sMTI3OlsyLDc5XSwxMjg6WzIsNzldLDEyOTpbMiw3OV0sMTMwOlsyLDc5XSwxMzE6WzIsNzldLDEzMjpbMiw3OV0sMTMzOlsyLDc5XSwxMzQ6WzIsNzldLDEzNTpbMiw3OV19LHs4OjI3Niw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNjk6WzIsMTE1XSw3MzpbMSw2N10sNzY6WzEsNDNdLDgwOlsxLDI4XSw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5MzpbMSwzOF0sOTc6WzEsNDVdLDk4OlsxLDUzXSwxMDA6MzksMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNDo0MCwxMDU6WzEsNjRdLDEwNjo0MSwxMDc6WzEsNjVdLDEwODo2NiwxMTY6WzEsNDJdLDEyMTozNywxMjI6WzEsNjFdLDEyNDpbMSwzMV0sMTI1OlsxLDMyXSwxMjY6WzEsMzNdLDEyNzpbMSwzNF0sMTI4OlsxLDM1XX0sezY5OlsyLDExNl0sMTAwOjg0LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTIzOlsxLDgzXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHsyNjpbMSwyNzddLDEwMDo4NCwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDEyMzpbMSw4M10sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7NjpbMSwyNjBdLDI1OlsxLDI2MV0sODM6WzEsMjc4XX0sezY6WzIsNjFdLDI1OlsyLDYxXSwyNjpbMiw2MV0sNTE6WzIsNjFdLDgzOlsyLDYxXSw4ODpbMiw2MV19LHs1OjI3OSwyNTpbMSw1XX0sezQ2OlsyLDUzXSw1MTpbMiw1M119LHs0NjpbMiw1Nl0sNTE6WzIsNTZdLDEwMDo4NCwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDEyMzpbMSw4M10sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7MjY6WzEsMjgwXSwxMDA6ODQsMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNjo4NSwxMDc6WzEsNjVdLDEwODo2NiwxMjM6WzEsODNdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezU6MjgxLDI1OlsxLDVdLDEwMDo4NCwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDEyMzpbMSw4M10sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7NToyODIsMjU6WzEsNV19LHsxOlsyLDEyOF0sNjpbMiwxMjhdLDI1OlsyLDEyOF0sMjY6WzIsMTI4XSw0NjpbMiwxMjhdLDUxOlsyLDEyOF0sNTQ6WzIsMTI4XSw2OTpbMiwxMjhdLDc1OlsyLDEyOF0sODM6WzIsMTI4XSw4ODpbMiwxMjhdLDkwOlsyLDEyOF0sOTk6WzIsMTI4XSwxMDE6WzIsMTI4XSwxMDI6WzIsMTI4XSwxMDM6WzIsMTI4XSwxMDc6WzIsMTI4XSwxMTU6WzIsMTI4XSwxMjM6WzIsMTI4XSwxMjU6WzIsMTI4XSwxMjY6WzIsMTI4XSwxMjk6WzIsMTI4XSwxMzA6WzIsMTI4XSwxMzE6WzIsMTI4XSwxMzI6WzIsMTI4XSwxMzM6WzIsMTI4XSwxMzQ6WzIsMTI4XX0sezU6MjgzLDI1OlsxLDVdfSx7MjY6WzEsMjg0XSwxMTg6WzEsMjg1XSwxMTk6MjUyLDEyMDpbMSwyMTNdfSx7MTpbMiwxNjVdLDY6WzIsMTY1XSwyNTpbMiwxNjVdLDI2OlsyLDE2NV0sNDY6WzIsMTY1XSw1MTpbMiwxNjVdLDU0OlsyLDE2NV0sNjk6WzIsMTY1XSw3NTpbMiwxNjVdLDgzOlsyLDE2NV0sODg6WzIsMTY1XSw5MDpbMiwxNjVdLDk5OlsyLDE2NV0sMTAxOlsyLDE2NV0sMTAyOlsyLDE2NV0sMTAzOlsyLDE2NV0sMTA3OlsyLDE2NV0sMTE1OlsyLDE2NV0sMTIzOlsyLDE2NV0sMTI1OlsyLDE2NV0sMTI2OlsyLDE2NV0sMTI5OlsyLDE2NV0sMTMwOlsyLDE2NV0sMTMxOlsyLDE2NV0sMTMyOlsyLDE2NV0sMTMzOlsyLDE2NV0sMTM0OlsyLDE2NV19LHs1OjI4NiwyNTpbMSw1XX0sezI2OlsyLDE2OF0sMTE4OlsyLDE2OF0sMTIwOlsyLDE2OF19LHs1OjI4NywyNTpbMSw1XSw1MTpbMSwyODhdfSx7MjU6WzIsMTI0XSw1MTpbMiwxMjRdLDEwMDo4NCwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDEyMzpbMSw4M10sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7MTpbMiw5M10sNjpbMiw5M10sMjU6WzIsOTNdLDI2OlsyLDkzXSw0NjpbMiw5M10sNTE6WzIsOTNdLDU0OlsyLDkzXSw2OTpbMiw5M10sNzU6WzIsOTNdLDgzOlsyLDkzXSw4ODpbMiw5M10sOTA6WzIsOTNdLDk5OlsyLDkzXSwxMDE6WzIsOTNdLDEwMjpbMiw5M10sMTAzOlsyLDkzXSwxMDc6WzIsOTNdLDExNTpbMiw5M10sMTIzOlsyLDkzXSwxMjU6WzIsOTNdLDEyNjpbMiw5M10sMTI5OlsyLDkzXSwxMzA6WzIsOTNdLDEzMTpbMiw5M10sMTMyOlsyLDkzXSwxMzM6WzIsOTNdLDEzNDpbMiw5M119LHsxOlsyLDk2XSw1OjI4OSw2OlsyLDk2XSwyNTpbMSw1XSwyNjpbMiw5Nl0sNDY6WzIsOTZdLDUxOlsyLDk2XSw1NDpbMiw5Nl0sNTk6OTAsNjM6WzEsOTJdLDY0OlsxLDkzXSw2NTpbMSw5NF0sNjY6OTUsNjc6WzEsOTZdLDY5OlsyLDk2XSw3MDpbMSw5N10sNzE6WzEsOThdLDc1OlsyLDk2XSw3ODo4OSw4MTpbMSw5MV0sODI6WzIsMTAyXSw4MzpbMiw5Nl0sODg6WzIsOTZdLDkwOlsyLDk2XSw5OTpbMiw5Nl0sMTAxOlsyLDk2XSwxMDI6WzIsOTZdLDEwMzpbMiw5Nl0sMTA3OlsyLDk2XSwxMTU6WzIsOTZdLDEyMzpbMiw5Nl0sMTI1OlsyLDk2XSwxMjY6WzIsOTZdLDEyOTpbMiw5Nl0sMTMwOlsyLDk2XSwxMzE6WzIsOTZdLDEzMjpbMiw5Nl0sMTMzOlsyLDk2XSwxMzQ6WzIsOTZdfSx7OTk6WzEsMjkwXX0sezg4OlsxLDI5MV0sMTAwOjg0LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTIzOlsxLDgzXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHsxOlsyLDExMF0sNjpbMiwxMTBdLDI1OlsyLDExMF0sMjY6WzIsMTEwXSwzNzpbMiwxMTBdLDQ2OlsyLDExMF0sNTE6WzIsMTEwXSw1NDpbMiwxMTBdLDYzOlsyLDExMF0sNjQ6WzIsMTEwXSw2NTpbMiwxMTBdLDY3OlsyLDExMF0sNjk6WzIsMTEwXSw3MDpbMiwxMTBdLDcxOlsyLDExMF0sNzU6WzIsMTEwXSw4MTpbMiwxMTBdLDgyOlsyLDExMF0sODM6WzIsMTEwXSw4ODpbMiwxMTBdLDkwOlsyLDExMF0sOTk6WzIsMTEwXSwxMDE6WzIsMTEwXSwxMDI6WzIsMTEwXSwxMDM6WzIsMTEwXSwxMDc6WzIsMTEwXSwxMTM6WzIsMTEwXSwxMTQ6WzIsMTEwXSwxMTU6WzIsMTEwXSwxMjM6WzIsMTEwXSwxMjU6WzIsMTEwXSwxMjY6WzIsMTEwXSwxMjk6WzIsMTEwXSwxMzA6WzIsMTEwXSwxMzE6WzIsMTEwXSwxMzI6WzIsMTEwXSwxMzM6WzIsMTEwXSwxMzQ6WzIsMTEwXX0sezg6MTk3LDk6MTE1LDEwOjE5LDExOjIwLDEyOjIxLDEzOlsxLDIyXSwxNDo4LDE1OjksMTY6MTAsMTc6MTEsMTg6MTIsMTk6MTMsMjA6MTQsMjE6MTUsMjI6MTYsMjM6MTcsMjQ6MTgsMjc6NTksMjg6WzEsNzBdLDI5OjQ5LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzI6MjQsMzM6WzEsNTBdLDM0OlsxLDUxXSwzNTpbMSw1Ml0sMzY6MjMsNDE6NjAsNDI6WzEsNDRdLDQzOlsxLDQ2XSw0NDpbMSwyOV0sNDc6MzAsNDg6WzEsNTddLDQ5OlsxLDU4XSw1NTo0Nyw1Njo0OCw1NzoxNDUsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTE6MjkyLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7ODoxOTcsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNTpbMSwxNDRdLDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTc6MTQ1LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg0OjI5Myw4NTpbMSw1NV0sODY6WzEsNTZdLDg3OlsxLDU0XSw5MToxNDMsOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs2OlsyLDExOF0sMjU6WzIsMTE4XSwyNjpbMiwxMThdLDUxOlsyLDExOF0sODM6WzIsMTE4XSw4ODpbMiwxMThdfSx7NjpbMSwyNjBdLDI1OlsxLDI2MV0sMjY6WzEsMjk0XX0sezE6WzIsMTM1XSw2OlsyLDEzNV0sMjU6WzIsMTM1XSwyNjpbMiwxMzVdLDQ2OlsyLDEzNV0sNTE6WzIsMTM1XSw1NDpbMiwxMzVdLDY5OlsyLDEzNV0sNzU6WzIsMTM1XSw4MzpbMiwxMzVdLDg4OlsyLDEzNV0sOTA6WzIsMTM1XSw5OTpbMiwxMzVdLDEwMDo4NCwxMDE6WzEsNjJdLDEwMjpbMiwxMzVdLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDExNTpbMiwxMzVdLDEyMzpbMiwxMzVdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsMTM3XSw2OlsyLDEzN10sMjU6WzIsMTM3XSwyNjpbMiwxMzddLDQ2OlsyLDEzN10sNTE6WzIsMTM3XSw1NDpbMiwxMzddLDY5OlsyLDEzN10sNzU6WzIsMTM3XSw4MzpbMiwxMzddLDg4OlsyLDEzN10sOTA6WzIsMTM3XSw5OTpbMiwxMzddLDEwMDo4NCwxMDE6WzEsNjJdLDEwMjpbMiwxMzddLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDExNTpbMiwxMzddLDEyMzpbMiwxMzddLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezExMzpbMiwxNTVdLDExNDpbMiwxNTVdfSx7ODoyOTUsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7ODoyOTYsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7ODoyOTcsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7MTpbMiw4NF0sNjpbMiw4NF0sMjU6WzIsODRdLDI2OlsyLDg0XSwzNzpbMiw4NF0sNDY6WzIsODRdLDUxOlsyLDg0XSw1NDpbMiw4NF0sNjM6WzIsODRdLDY0OlsyLDg0XSw2NTpbMiw4NF0sNjc6WzIsODRdLDY5OlsyLDg0XSw3MDpbMiw4NF0sNzE6WzIsODRdLDc1OlsyLDg0XSw4MTpbMiw4NF0sODI6WzIsODRdLDgzOlsyLDg0XSw4ODpbMiw4NF0sOTA6WzIsODRdLDk5OlsyLDg0XSwxMDE6WzIsODRdLDEwMjpbMiw4NF0sMTAzOlsyLDg0XSwxMDc6WzIsODRdLDExMzpbMiw4NF0sMTE0OlsyLDg0XSwxMTU6WzIsODRdLDEyMzpbMiw4NF0sMTI1OlsyLDg0XSwxMjY6WzIsODRdLDEyOTpbMiw4NF0sMTMwOlsyLDg0XSwxMzE6WzIsODRdLDEzMjpbMiw4NF0sMTMzOlsyLDg0XSwxMzQ6WzIsODRdfSx7MTI6MTY1LDI3OjE2NiwyODpbMSw3MF0sMjk6MTY3LDMwOlsxLDY4XSwzMTpbMSw2OV0sMzg6Mjk4LDM5OjE2NCw0MToxNjgsNDM6WzEsNDZdLDg2OlsxLDExMV19LHs2OlsyLDg1XSwxMjoxNjUsMjU6WzIsODVdLDI2OlsyLDg1XSwyNzoxNjYsMjg6WzEsNzBdLDI5OjE2NywzMDpbMSw2OF0sMzE6WzEsNjldLDM4OjE2MywzOToxNjQsNDE6MTY4LDQzOlsxLDQ2XSw1MTpbMiw4NV0sNzQ6Mjk5LDg2OlsxLDExMV19LHs2OlsyLDg3XSwyNTpbMiw4N10sMjY6WzIsODddLDUxOlsyLDg3XSw3NTpbMiw4N119LHs2OlsyLDM2XSwyNTpbMiwzNl0sMjY6WzIsMzZdLDUxOlsyLDM2XSw3NTpbMiwzNl0sMTAwOjg0LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTIzOlsxLDgzXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHs4OjMwMCw5OjExNSwxMDoxOSwxMToyMCwxMjoyMSwxMzpbMSwyMl0sMTQ6OCwxNTo5LDE2OjEwLDE3OjExLDE4OjEyLDE5OjEzLDIwOjE0LDIxOjE1LDIyOjE2LDIzOjE3LDI0OjE4LDI3OjU5LDI4OlsxLDcwXSwyOTo0OSwzMDpbMSw2OF0sMzE6WzEsNjldLDMyOjI0LDMzOlsxLDUwXSwzNDpbMSw1MV0sMzU6WzEsNTJdLDM2OjIzLDQxOjYwLDQyOlsxLDQ0XSw0MzpbMSw0Nl0sNDQ6WzEsMjldLDQ3OjMwLDQ4OlsxLDU3XSw0OTpbMSw1OF0sNTU6NDcsNTY6NDgsNTg6MzYsNjA6MjUsNjE6MjYsNjI6MjcsNzM6WzEsNjddLDc2OlsxLDQzXSw4MDpbMSwyOF0sODU6WzEsNTVdLDg2OlsxLDU2XSw4NzpbMSw1NF0sOTM6WzEsMzhdLDk3OlsxLDQ1XSw5ODpbMSw1M10sMTAwOjM5LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDQ6NDAsMTA1OlsxLDY0XSwxMDY6NDEsMTA3OlsxLDY1XSwxMDg6NjYsMTE2OlsxLDQyXSwxMjE6MzcsMTIyOlsxLDYxXSwxMjQ6WzEsMzFdLDEyNTpbMSwzMl0sMTI2OlsxLDMzXSwxMjc6WzEsMzRdLDEyODpbMSwzNV19LHs2OTpbMiwxMTRdLDEwMDo4NCwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA2Ojg1LDEwNzpbMSw2NV0sMTA4OjY2LDEyMzpbMSw4M10sMTI1OlsxLDc3XSwxMjY6WzEsNzZdLDEyOTpbMSw3NV0sMTMwOlsxLDc4XSwxMzE6WzEsNzldLDEzMjpbMSw4MF0sMTMzOlsxLDgxXSwxMzQ6WzEsODJdfSx7MTpbMiwzNF0sNjpbMiwzNF0sMjU6WzIsMzRdLDI2OlsyLDM0XSw0NjpbMiwzNF0sNTE6WzIsMzRdLDU0OlsyLDM0XSw2OTpbMiwzNF0sNzU6WzIsMzRdLDgzOlsyLDM0XSw4ODpbMiwzNF0sOTA6WzIsMzRdLDk5OlsyLDM0XSwxMDE6WzIsMzRdLDEwMjpbMiwzNF0sMTAzOlsyLDM0XSwxMDc6WzIsMzRdLDExNTpbMiwzNF0sMTIzOlsyLDM0XSwxMjU6WzIsMzRdLDEyNjpbMiwzNF0sMTI5OlsyLDM0XSwxMzA6WzIsMzRdLDEzMTpbMiwzNF0sMTMyOlsyLDM0XSwxMzM6WzIsMzRdLDEzNDpbMiwzNF19LHsxOlsyLDEwNV0sNjpbMiwxMDVdLDI1OlsyLDEwNV0sMjY6WzIsMTA1XSw0NjpbMiwxMDVdLDUxOlsyLDEwNV0sNTQ6WzIsMTA1XSw2MzpbMiwxMDVdLDY0OlsyLDEwNV0sNjU6WzIsMTA1XSw2NzpbMiwxMDVdLDY5OlsyLDEwNV0sNzA6WzIsMTA1XSw3MTpbMiwxMDVdLDc1OlsyLDEwNV0sODE6WzIsMTA1XSw4MjpbMiwxMDVdLDgzOlsyLDEwNV0sODg6WzIsMTA1XSw5MDpbMiwxMDVdLDk5OlsyLDEwNV0sMTAxOlsyLDEwNV0sMTAyOlsyLDEwNV0sMTAzOlsyLDEwNV0sMTA3OlsyLDEwNV0sMTE1OlsyLDEwNV0sMTIzOlsyLDEwNV0sMTI1OlsyLDEwNV0sMTI2OlsyLDEwNV0sMTI5OlsyLDEwNV0sMTMwOlsyLDEwNV0sMTMxOlsyLDEwNV0sMTMyOlsyLDEwNV0sMTMzOlsyLDEwNV0sMTM0OlsyLDEwNV19LHsxOlsyLDQ1XSw2OlsyLDQ1XSwyNTpbMiw0NV0sMjY6WzIsNDVdLDQ2OlsyLDQ1XSw1MTpbMiw0NV0sNTQ6WzIsNDVdLDY5OlsyLDQ1XSw3NTpbMiw0NV0sODM6WzIsNDVdLDg4OlsyLDQ1XSw5MDpbMiw0NV0sOTk6WzIsNDVdLDEwMTpbMiw0NV0sMTAyOlsyLDQ1XSwxMDM6WzIsNDVdLDEwNzpbMiw0NV0sMTE1OlsyLDQ1XSwxMjM6WzIsNDVdLDEyNTpbMiw0NV0sMTI2OlsyLDQ1XSwxMjk6WzIsNDVdLDEzMDpbMiw0NV0sMTMxOlsyLDQ1XSwxMzI6WzIsNDVdLDEzMzpbMiw0NV0sMTM0OlsyLDQ1XX0sezE6WzIsMTkzXSw2OlsyLDE5M10sMjU6WzIsMTkzXSwyNjpbMiwxOTNdLDQ2OlsyLDE5M10sNTE6WzIsMTkzXSw1NDpbMiwxOTNdLDY5OlsyLDE5M10sNzU6WzIsMTkzXSw4MzpbMiwxOTNdLDg4OlsyLDE5M10sOTA6WzIsMTkzXSw5OTpbMiwxOTNdLDEwMTpbMiwxOTNdLDEwMjpbMiwxOTNdLDEwMzpbMiwxOTNdLDEwNzpbMiwxOTNdLDExNTpbMiwxOTNdLDEyMzpbMiwxOTNdLDEyNTpbMiwxOTNdLDEyNjpbMiwxOTNdLDEyOTpbMiwxOTNdLDEzMDpbMiwxOTNdLDEzMTpbMiwxOTNdLDEzMjpbMiwxOTNdLDEzMzpbMiwxOTNdLDEzNDpbMiwxOTNdfSx7MTpbMiwxNzJdLDY6WzIsMTcyXSwyNTpbMiwxNzJdLDI2OlsyLDE3Ml0sNDY6WzIsMTcyXSw1MTpbMiwxNzJdLDU0OlsyLDE3Ml0sNjk6WzIsMTcyXSw3NTpbMiwxNzJdLDgzOlsyLDE3Ml0sODg6WzIsMTcyXSw5MDpbMiwxNzJdLDk5OlsyLDE3Ml0sMTAxOlsyLDE3Ml0sMTAyOlsyLDE3Ml0sMTAzOlsyLDE3Ml0sMTA3OlsyLDE3Ml0sMTE1OlsyLDE3Ml0sMTE4OlsyLDE3Ml0sMTIzOlsyLDE3Ml0sMTI1OlsyLDE3Ml0sMTI2OlsyLDE3Ml0sMTI5OlsyLDE3Ml0sMTMwOlsyLDE3Ml0sMTMxOlsyLDE3Ml0sMTMyOlsyLDE3Ml0sMTMzOlsyLDE3Ml0sMTM0OlsyLDE3Ml19LHsxOlsyLDEyOV0sNjpbMiwxMjldLDI1OlsyLDEyOV0sMjY6WzIsMTI5XSw0NjpbMiwxMjldLDUxOlsyLDEyOV0sNTQ6WzIsMTI5XSw2OTpbMiwxMjldLDc1OlsyLDEyOV0sODM6WzIsMTI5XSw4ODpbMiwxMjldLDkwOlsyLDEyOV0sOTk6WzIsMTI5XSwxMDE6WzIsMTI5XSwxMDI6WzIsMTI5XSwxMDM6WzIsMTI5XSwxMDc6WzIsMTI5XSwxMTU6WzIsMTI5XSwxMjM6WzIsMTI5XSwxMjU6WzIsMTI5XSwxMjY6WzIsMTI5XSwxMjk6WzIsMTI5XSwxMzA6WzIsMTI5XSwxMzE6WzIsMTI5XSwxMzI6WzIsMTI5XSwxMzM6WzIsMTI5XSwxMzQ6WzIsMTI5XX0sezE6WzIsMTMwXSw2OlsyLDEzMF0sMjU6WzIsMTMwXSwyNjpbMiwxMzBdLDQ2OlsyLDEzMF0sNTE6WzIsMTMwXSw1NDpbMiwxMzBdLDY5OlsyLDEzMF0sNzU6WzIsMTMwXSw4MzpbMiwxMzBdLDg4OlsyLDEzMF0sOTA6WzIsMTMwXSw5NTpbMiwxMzBdLDk5OlsyLDEzMF0sMTAxOlsyLDEzMF0sMTAyOlsyLDEzMF0sMTAzOlsyLDEzMF0sMTA3OlsyLDEzMF0sMTE1OlsyLDEzMF0sMTIzOlsyLDEzMF0sMTI1OlsyLDEzMF0sMTI2OlsyLDEzMF0sMTI5OlsyLDEzMF0sMTMwOlsyLDEzMF0sMTMxOlsyLDEzMF0sMTMyOlsyLDEzMF0sMTMzOlsyLDEzMF0sMTM0OlsyLDEzMF19LHsxOlsyLDE2M10sNjpbMiwxNjNdLDI1OlsyLDE2M10sMjY6WzIsMTYzXSw0NjpbMiwxNjNdLDUxOlsyLDE2M10sNTQ6WzIsMTYzXSw2OTpbMiwxNjNdLDc1OlsyLDE2M10sODM6WzIsMTYzXSw4ODpbMiwxNjNdLDkwOlsyLDE2M10sOTk6WzIsMTYzXSwxMDE6WzIsMTYzXSwxMDI6WzIsMTYzXSwxMDM6WzIsMTYzXSwxMDc6WzIsMTYzXSwxMTU6WzIsMTYzXSwxMjM6WzIsMTYzXSwxMjU6WzIsMTYzXSwxMjY6WzIsMTYzXSwxMjk6WzIsMTYzXSwxMzA6WzIsMTYzXSwxMzE6WzIsMTYzXSwxMzI6WzIsMTYzXSwxMzM6WzIsMTYzXSwxMzQ6WzIsMTYzXX0sezU6MzAxLDI1OlsxLDVdfSx7MjY6WzEsMzAyXX0sezY6WzEsMzAzXSwyNjpbMiwxNjldLDExODpbMiwxNjldLDEyMDpbMiwxNjldfSx7ODozMDQsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7MTpbMiw5N10sNjpbMiw5N10sMjU6WzIsOTddLDI2OlsyLDk3XSw0NjpbMiw5N10sNTE6WzIsOTddLDU0OlsyLDk3XSw2OTpbMiw5N10sNzU6WzIsOTddLDgzOlsyLDk3XSw4ODpbMiw5N10sOTA6WzIsOTddLDk5OlsyLDk3XSwxMDE6WzIsOTddLDEwMjpbMiw5N10sMTAzOlsyLDk3XSwxMDc6WzIsOTddLDExNTpbMiw5N10sMTIzOlsyLDk3XSwxMjU6WzIsOTddLDEyNjpbMiw5N10sMTI5OlsyLDk3XSwxMzA6WzIsOTddLDEzMTpbMiw5N10sMTMyOlsyLDk3XSwxMzM6WzIsOTddLDEzNDpbMiw5N119LHsxOlsyLDEzM10sNjpbMiwxMzNdLDI1OlsyLDEzM10sMjY6WzIsMTMzXSw0NjpbMiwxMzNdLDUxOlsyLDEzM10sNTQ6WzIsMTMzXSw2MzpbMiwxMzNdLDY0OlsyLDEzM10sNjU6WzIsMTMzXSw2NzpbMiwxMzNdLDY5OlsyLDEzM10sNzA6WzIsMTMzXSw3MTpbMiwxMzNdLDc1OlsyLDEzM10sODE6WzIsMTMzXSw4MjpbMiwxMzNdLDgzOlsyLDEzM10sODg6WzIsMTMzXSw5MDpbMiwxMzNdLDk5OlsyLDEzM10sMTAxOlsyLDEzM10sMTAyOlsyLDEzM10sMTAzOlsyLDEzM10sMTA3OlsyLDEzM10sMTE1OlsyLDEzM10sMTIzOlsyLDEzM10sMTI1OlsyLDEzM10sMTI2OlsyLDEzM10sMTI5OlsyLDEzM10sMTMwOlsyLDEzM10sMTMxOlsyLDEzM10sMTMyOlsyLDEzM10sMTMzOlsyLDEzM10sMTM0OlsyLDEzM119LHsxOlsyLDExM10sNjpbMiwxMTNdLDI1OlsyLDExM10sMjY6WzIsMTEzXSw0NjpbMiwxMTNdLDUxOlsyLDExM10sNTQ6WzIsMTEzXSw2MzpbMiwxMTNdLDY0OlsyLDExM10sNjU6WzIsMTEzXSw2NzpbMiwxMTNdLDY5OlsyLDExM10sNzA6WzIsMTEzXSw3MTpbMiwxMTNdLDc1OlsyLDExM10sODE6WzIsMTEzXSw4MjpbMiwxMTNdLDgzOlsyLDExM10sODg6WzIsMTEzXSw5MDpbMiwxMTNdLDk5OlsyLDExM10sMTAxOlsyLDExM10sMTAyOlsyLDExM10sMTAzOlsyLDExM10sMTA3OlsyLDExM10sMTE1OlsyLDExM10sMTIzOlsyLDExM10sMTI1OlsyLDExM10sMTI2OlsyLDExM10sMTI5OlsyLDExM10sMTMwOlsyLDExM10sMTMxOlsyLDExM10sMTMyOlsyLDExM10sMTMzOlsyLDExM10sMTM0OlsyLDExM119LHs2OlsyLDExOV0sMjU6WzIsMTE5XSwyNjpbMiwxMTldLDUxOlsyLDExOV0sODM6WzIsMTE5XSw4ODpbMiwxMTldfSx7NjpbMiw0OV0sMjU6WzIsNDldLDI2OlsyLDQ5XSw1MDozMDUsNTE6WzEsMjIzXX0sezY6WzIsMTIwXSwyNTpbMiwxMjBdLDI2OlsyLDEyMF0sNTE6WzIsMTIwXSw4MzpbMiwxMjBdLDg4OlsyLDEyMF19LHsxOlsyLDE1OF0sNjpbMiwxNThdLDI1OlsyLDE1OF0sMjY6WzIsMTU4XSw0NjpbMiwxNThdLDUxOlsyLDE1OF0sNTQ6WzIsMTU4XSw2OTpbMiwxNThdLDc1OlsyLDE1OF0sODM6WzIsMTU4XSw4ODpbMiwxNThdLDkwOlsyLDE1OF0sOTk6WzIsMTU4XSwxMDA6ODQsMTAxOlsyLDE1OF0sMTAyOlsyLDE1OF0sMTAzOlsyLDE1OF0sMTA2Ojg1LDEwNzpbMiwxNThdLDEwODo2NiwxMTU6WzEsMzA2XSwxMjM6WzIsMTU4XSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHsxOlsyLDE2MF0sNjpbMiwxNjBdLDI1OlsyLDE2MF0sMjY6WzIsMTYwXSw0NjpbMiwxNjBdLDUxOlsyLDE2MF0sNTQ6WzIsMTYwXSw2OTpbMiwxNjBdLDc1OlsyLDE2MF0sODM6WzIsMTYwXSw4ODpbMiwxNjBdLDkwOlsyLDE2MF0sOTk6WzIsMTYwXSwxMDA6ODQsMTAxOlsyLDE2MF0sMTAyOlsxLDMwN10sMTAzOlsyLDE2MF0sMTA2Ojg1LDEwNzpbMiwxNjBdLDEwODo2NiwxMTU6WzIsMTYwXSwxMjM6WzIsMTYwXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHsxOlsyLDE1OV0sNjpbMiwxNTldLDI1OlsyLDE1OV0sMjY6WzIsMTU5XSw0NjpbMiwxNTldLDUxOlsyLDE1OV0sNTQ6WzIsMTU5XSw2OTpbMiwxNTldLDc1OlsyLDE1OV0sODM6WzIsMTU5XSw4ODpbMiwxNTldLDkwOlsyLDE1OV0sOTk6WzIsMTU5XSwxMDA6ODQsMTAxOlsyLDE1OV0sMTAyOlsyLDE1OV0sMTAzOlsyLDE1OV0sMTA2Ojg1LDEwNzpbMiwxNTldLDEwODo2NiwxMTU6WzIsMTU5XSwxMjM6WzIsMTU5XSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHs2OlsyLDg4XSwyNTpbMiw4OF0sMjY6WzIsODhdLDUxOlsyLDg4XSw3NTpbMiw4OF19LHs2OlsyLDQ5XSwyNTpbMiw0OV0sMjY6WzIsNDldLDUwOjMwOCw1MTpbMSwyMzNdfSx7MjY6WzEsMzA5XSwxMDA6ODQsMTAxOlsxLDYyXSwxMDM6WzEsNjNdLDEwNjo4NSwxMDc6WzEsNjVdLDEwODo2NiwxMjM6WzEsODNdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezI2OlsxLDMxMF19LHsxOlsyLDE2Nl0sNjpbMiwxNjZdLDI1OlsyLDE2Nl0sMjY6WzIsMTY2XSw0NjpbMiwxNjZdLDUxOlsyLDE2Nl0sNTQ6WzIsMTY2XSw2OTpbMiwxNjZdLDc1OlsyLDE2Nl0sODM6WzIsMTY2XSw4ODpbMiwxNjZdLDkwOlsyLDE2Nl0sOTk6WzIsMTY2XSwxMDE6WzIsMTY2XSwxMDI6WzIsMTY2XSwxMDM6WzIsMTY2XSwxMDc6WzIsMTY2XSwxMTU6WzIsMTY2XSwxMjM6WzIsMTY2XSwxMjU6WzIsMTY2XSwxMjY6WzIsMTY2XSwxMjk6WzIsMTY2XSwxMzA6WzIsMTY2XSwxMzE6WzIsMTY2XSwxMzI6WzIsMTY2XSwxMzM6WzIsMTY2XSwxMzQ6WzIsMTY2XX0sezI2OlsyLDE3MF0sMTE4OlsyLDE3MF0sMTIwOlsyLDE3MF19LHsyNTpbMiwxMjVdLDUxOlsyLDEyNV0sMTAwOjg0LDEwMTpbMSw2Ml0sMTAzOlsxLDYzXSwxMDY6ODUsMTA3OlsxLDY1XSwxMDg6NjYsMTIzOlsxLDgzXSwxMjU6WzEsNzddLDEyNjpbMSw3Nl0sMTI5OlsxLDc1XSwxMzA6WzEsNzhdLDEzMTpbMSw3OV0sMTMyOlsxLDgwXSwxMzM6WzEsODFdLDEzNDpbMSw4Ml19LHs2OlsxLDI2MF0sMjU6WzEsMjYxXSwyNjpbMSwzMTFdfSx7ODozMTIsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7ODozMTMsOToxMTUsMTA6MTksMTE6MjAsMTI6MjEsMTM6WzEsMjJdLDE0OjgsMTU6OSwxNjoxMCwxNzoxMSwxODoxMiwxOToxMywyMDoxNCwyMToxNSwyMjoxNiwyMzoxNywyNDoxOCwyNzo1OSwyODpbMSw3MF0sMjk6NDksMzA6WzEsNjhdLDMxOlsxLDY5XSwzMjoyNCwzMzpbMSw1MF0sMzQ6WzEsNTFdLDM1OlsxLDUyXSwzNjoyMyw0MTo2MCw0MjpbMSw0NF0sNDM6WzEsNDZdLDQ0OlsxLDI5XSw0NzozMCw0ODpbMSw1N10sNDk6WzEsNThdLDU1OjQ3LDU2OjQ4LDU4OjM2LDYwOjI1LDYxOjI2LDYyOjI3LDczOlsxLDY3XSw3NjpbMSw0M10sODA6WzEsMjhdLDg1OlsxLDU1XSw4NjpbMSw1Nl0sODc6WzEsNTRdLDkzOlsxLDM4XSw5NzpbMSw0NV0sOTg6WzEsNTNdLDEwMDozOSwxMDE6WzEsNjJdLDEwMzpbMSw2M10sMTA0OjQwLDEwNTpbMSw2NF0sMTA2OjQxLDEwNzpbMSw2NV0sMTA4OjY2LDExNjpbMSw0Ml0sMTIxOjM3LDEyMjpbMSw2MV0sMTI0OlsxLDMxXSwxMjU6WzEsMzJdLDEyNjpbMSwzM10sMTI3OlsxLDM0XSwxMjg6WzEsMzVdfSx7NjpbMSwyNzFdLDI1OlsxLDI3Ml0sMjY6WzEsMzE0XX0sezY6WzIsMzddLDI1OlsyLDM3XSwyNjpbMiwzN10sNTE6WzIsMzddLDc1OlsyLDM3XX0sezE6WzIsMTY0XSw2OlsyLDE2NF0sMjU6WzIsMTY0XSwyNjpbMiwxNjRdLDQ2OlsyLDE2NF0sNTE6WzIsMTY0XSw1NDpbMiwxNjRdLDY5OlsyLDE2NF0sNzU6WzIsMTY0XSw4MzpbMiwxNjRdLDg4OlsyLDE2NF0sOTA6WzIsMTY0XSw5OTpbMiwxNjRdLDEwMTpbMiwxNjRdLDEwMjpbMiwxNjRdLDEwMzpbMiwxNjRdLDEwNzpbMiwxNjRdLDExNTpbMiwxNjRdLDEyMzpbMiwxNjRdLDEyNTpbMiwxNjRdLDEyNjpbMiwxNjRdLDEyOTpbMiwxNjRdLDEzMDpbMiwxNjRdLDEzMTpbMiwxNjRdLDEzMjpbMiwxNjRdLDEzMzpbMiwxNjRdLDEzNDpbMiwxNjRdfSx7NjpbMiwxMjFdLDI1OlsyLDEyMV0sMjY6WzIsMTIxXSw1MTpbMiwxMjFdLDgzOlsyLDEyMV0sODg6WzIsMTIxXX0sezE6WzIsMTYxXSw2OlsyLDE2MV0sMjU6WzIsMTYxXSwyNjpbMiwxNjFdLDQ2OlsyLDE2MV0sNTE6WzIsMTYxXSw1NDpbMiwxNjFdLDY5OlsyLDE2MV0sNzU6WzIsMTYxXSw4MzpbMiwxNjFdLDg4OlsyLDE2MV0sOTA6WzIsMTYxXSw5OTpbMiwxNjFdLDEwMDo4NCwxMDE6WzIsMTYxXSwxMDI6WzIsMTYxXSwxMDM6WzIsMTYxXSwxMDY6ODUsMTA3OlsyLDE2MV0sMTA4OjY2LDExNTpbMiwxNjFdLDEyMzpbMiwxNjFdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezE6WzIsMTYyXSw2OlsyLDE2Ml0sMjU6WzIsMTYyXSwyNjpbMiwxNjJdLDQ2OlsyLDE2Ml0sNTE6WzIsMTYyXSw1NDpbMiwxNjJdLDY5OlsyLDE2Ml0sNzU6WzIsMTYyXSw4MzpbMiwxNjJdLDg4OlsyLDE2Ml0sOTA6WzIsMTYyXSw5OTpbMiwxNjJdLDEwMDo4NCwxMDE6WzIsMTYyXSwxMDI6WzIsMTYyXSwxMDM6WzIsMTYyXSwxMDY6ODUsMTA3OlsyLDE2Ml0sMTA4OjY2LDExNTpbMiwxNjJdLDEyMzpbMiwxNjJdLDEyNTpbMSw3N10sMTI2OlsxLDc2XSwxMjk6WzEsNzVdLDEzMDpbMSw3OF0sMTMxOlsxLDc5XSwxMzI6WzEsODBdLDEzMzpbMSw4MV0sMTM0OlsxLDgyXX0sezY6WzIsODldLDI1OlsyLDg5XSwyNjpbMiw4OV0sNTE6WzIsODldLDc1OlsyLDg5XX1dLGRlZmF1bHRBY3Rpb25zOns1NzpbMiw0N10sNTg6WzIsNDhdLDcyOlsyLDNdLDkxOlsyLDEwM10sMTg2OlsyLDgzXX0scGFyc2VFcnJvcjpmdW5jdGlvbihhLGIpe3Rocm93IG5ldyBFcnJvcihhKX0scGFyc2U6ZnVuY3Rpb24oYSl7ZnVuY3Rpb24gbygpe3ZhciBhO2E9Yi5sZXhlci5sZXgoKXx8MSx0eXBlb2YgYSE9Im51bWJlciImJihhPWIuc3ltYm9sc19bYV18fGEpO3JldHVybiBhfWZ1bmN0aW9uIG4oYSl7Yy5sZW5ndGg9Yy5sZW5ndGgtMiphLGQubGVuZ3RoPWQubGVuZ3RoLWEsZS5sZW5ndGg9ZS5sZW5ndGgtYX12YXIgYj10aGlzLGM9WzBdLGQ9W251bGxdLGU9W10sZj10aGlzLnRhYmxlLGc9IiIsaD0wLGk9MCxqPTAsaz0yLGw9MTt0aGlzLmxleGVyLnNldElucHV0KGEpLHRoaXMubGV4ZXIueXk9dGhpcy55eSx0aGlzLnl5LmxleGVyPXRoaXMubGV4ZXIsdHlwZW9mIHRoaXMubGV4ZXIueXlsbG9jPT0idW5kZWZpbmVkIiYmKHRoaXMubGV4ZXIueXlsbG9jPXt9KTt2YXIgbT10aGlzLmxleGVyLnl5bGxvYztlLnB1c2gobSksdHlwZW9mIHRoaXMueXkucGFyc2VFcnJvcj09ImZ1bmN0aW9uIiYmKHRoaXMucGFyc2VFcnJvcj10aGlzLnl5LnBhcnNlRXJyb3IpO3ZhciBwLHEscixzLHQsdSx2PXt9LHcseCx5LHo7Zm9yKDs7KXtyPWNbYy5sZW5ndGgtMV0sdGhpcy5kZWZhdWx0QWN0aW9uc1tyXT9zPXRoaXMuZGVmYXVsdEFjdGlvbnNbcl06KHA9PW51bGwmJihwPW8oKSkscz1mW3JdJiZmW3JdW3BdKTtpZih0eXBlb2Ygcz09InVuZGVmaW5lZCJ8fCFzLmxlbmd0aHx8IXNbMF0pe2lmKCFqKXt6PVtdO2Zvcih3IGluIGZbcl0pdGhpcy50ZXJtaW5hbHNfW3ddJiZ3PjImJnoucHVzaCgiJyIrdGhpcy50ZXJtaW5hbHNfW3ddKyInIik7dmFyIEE9IiI7dGhpcy5sZXhlci5zaG93UG9zaXRpb24/QT0iUGFyc2UgZXJyb3Igb24gbGluZSAiKyhoKzEpKyI6XG4iK3RoaXMubGV4ZXIuc2hvd1Bvc2l0aW9uKCkrIlxuRXhwZWN0aW5nICIrei5qb2luKCIsICIpOkE9IlBhcnNlIGVycm9yIG9uIGxpbmUgIisoaCsxKSsiOiBVbmV4cGVjdGVkICIrKHA9PTE/ImVuZCBvZiBpbnB1dCI6IiciKyh0aGlzLnRlcm1pbmFsc19bcF18fHApKyInIiksdGhpcy5wYXJzZUVycm9yKEEse3RleHQ6dGhpcy5sZXhlci5tYXRjaCx0b2tlbjp0aGlzLnRlcm1pbmFsc19bcF18fHAsbGluZTp0aGlzLmxleGVyLnl5bGluZW5vLGxvYzptLGV4cGVjdGVkOnp9KX1pZihqPT0zKXtpZihwPT1sKXRocm93IG5ldyBFcnJvcihBfHwiUGFyc2luZyBoYWx0ZWQuIik7aT10aGlzLmxleGVyLnl5bGVuZyxnPXRoaXMubGV4ZXIueXl0ZXh0LGg9dGhpcy5sZXhlci55eWxpbmVubyxtPXRoaXMubGV4ZXIueXlsbG9jLHA9bygpfWZvcig7Oyl7aWYoay50b1N0cmluZygpaW4gZltyXSlicmVhaztpZihyPT0wKXRocm93IG5ldyBFcnJvcihBfHwiUGFyc2luZyBoYWx0ZWQuIik7bigxKSxyPWNbYy5sZW5ndGgtMV19cT1wLHA9ayxyPWNbYy5sZW5ndGgtMV0scz1mW3JdJiZmW3JdW2tdLGo9M31pZihzWzBdaW5zdGFuY2VvZiBBcnJheSYmcy5sZW5ndGg+MSl0aHJvdyBuZXcgRXJyb3IoIlBhcnNlIEVycm9yOiBtdWx0aXBsZSBhY3Rpb25zIHBvc3NpYmxlIGF0IHN0YXRlOiAiK3IrIiwgdG9rZW46ICIrcCk7c3dpdGNoKHNbMF0pe2Nhc2UgMTpjLnB1c2gocCksZC5wdXNoKHRoaXMubGV4ZXIueXl0ZXh0KSxlLnB1c2godGhpcy5sZXhlci55eWxsb2MpLGMucHVzaChzWzFdKSxwPW51bGwscT8ocD1xLHE9bnVsbCk6KGk9dGhpcy5sZXhlci55eWxlbmcsZz10aGlzLmxleGVyLnl5dGV4dCxoPXRoaXMubGV4ZXIueXlsaW5lbm8sbT10aGlzLmxleGVyLnl5bGxvYyxqPjAmJmotLSk7YnJlYWs7Y2FzZSAyOng9dGhpcy5wcm9kdWN0aW9uc19bc1sxXV1bMV0sdi4kPWRbZC5sZW5ndGgteF0sdi5fJD17Zmlyc3RfbGluZTplW2UubGVuZ3RoLSh4fHwxKV0uZmlyc3RfbGluZSxsYXN0X2xpbmU6ZVtlLmxlbmd0aC0xXS5sYXN0X2xpbmUsZmlyc3RfY29sdW1uOmVbZS5sZW5ndGgtKHh8fDEpXS5maXJzdF9jb2x1bW4sbGFzdF9jb2x1bW46ZVtlLmxlbmd0aC0xXS5sYXN0X2NvbHVtbn0sdT10aGlzLnBlcmZvcm1BY3Rpb24uY2FsbCh2LGcsaSxoLHRoaXMueXksc1sxXSxkLGUpO2lmKHR5cGVvZiB1IT0idW5kZWZpbmVkIilyZXR1cm4gdTt4JiYoYz1jLnNsaWNlKDAsLTEqeCoyKSxkPWQuc2xpY2UoMCwtMSp4KSxlPWUuc2xpY2UoMCwtMSp4KSksYy5wdXNoKHRoaXMucHJvZHVjdGlvbnNfW3NbMV1dWzBdKSxkLnB1c2godi4kKSxlLnB1c2godi5fJCkseT1mW2NbYy5sZW5ndGgtMl1dW2NbYy5sZW5ndGgtMV1dLGMucHVzaCh5KTticmVhaztjYXNlIDM6cmV0dXJuITB9fXJldHVybiEwfX07cmV0dXJuIGF9KCk7dHlwZW9mIHJlcXVpcmUhPSJ1bmRlZmluZWQiJiZ0eXBlb2YgYSE9InVuZGVmaW5lZCImJihhLnBhcnNlcj1iLGEucGFyc2U9ZnVuY3Rpb24oKXtyZXR1cm4gYi5wYXJzZS5hcHBseShiLGFyZ3VtZW50cyl9LGEubWFpbj1mdW5jdGlvbihiKXtpZighYlsxXSl0aHJvdyBuZXcgRXJyb3IoIlVzYWdlOiAiK2JbMF0rIiBGSUxFIik7aWYodHlwZW9mIHByb2Nlc3MhPSJ1bmRlZmluZWQiKXZhciBjPXJlcXVpcmUoImZzIikucmVhZEZpbGVTeW5jKHJlcXVpcmUoInBhdGgiKS5qb2luKHByb2Nlc3MuY3dkKCksYlsxXSksInV0ZjgiKTtlbHNlIHZhciBkPXJlcXVpcmUoImZpbGUiKS5wYXRoKHJlcXVpcmUoImZpbGUiKS5jd2QoKSksYz1kLmpvaW4oYlsxXSkucmVhZCh7Y2hhcnNldDoidXRmLTgifSk7cmV0dXJuIGEucGFyc2VyLnBhcnNlKGMpfSx0eXBlb2YgbW9kdWxlIT0idW5kZWZpbmVkIiYmcmVxdWlyZS5tYWluPT09bW9kdWxlJiZhLm1haW4odHlwZW9mIHByb2Nlc3MhPSJ1bmRlZmluZWQiP3Byb2Nlc3MuYXJndi5zbGljZSgxKTpyZXF1aXJlKCJzeXN0ZW0iKS5hcmdzKSl9LHJlcXVpcmVbIi4vc2NvcGUiXT1uZXcgZnVuY3Rpb24oKXt2YXIgYT10aGlzOyhmdW5jdGlvbigpe3ZhciBiLGMsZCxlO2U9cmVxdWlyZSgiLi9oZWxwZXJzIiksYz1lLmV4dGVuZCxkPWUubGFzdCxhLlNjb3BlPWI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGIsYyxkKXt0aGlzLnBhcmVudD1iLHRoaXMuZXhwcmVzc2lvbnM9Yyx0aGlzLm1ldGhvZD1kLHRoaXMudmFyaWFibGVzPVt7bmFtZToiYXJndW1lbnRzIix0eXBlOiJhcmd1bWVudHMifV0sdGhpcy5wb3NpdGlvbnM9e30sdGhpcy5wYXJlbnR8fChhLnJvb3Q9dGhpcyl9YS5yb290PW51bGwsYS5wcm90b3R5cGUuYWRkPWZ1bmN0aW9uKGEsYixjKXt2YXIgZDtpZih0aGlzLnNoYXJlZCYmIWMpcmV0dXJuIHRoaXMucGFyZW50LmFkZChhLGIsYyk7cmV0dXJuIHR5cGVvZiAoZD10aGlzLnBvc2l0aW9uc1thXSk9PSJudW1iZXIiP3RoaXMudmFyaWFibGVzW2RdLnR5cGU9Yjp0aGlzLnBvc2l0aW9uc1thXT10aGlzLnZhcmlhYmxlcy5wdXNoKHtuYW1lOmEsdHlwZTpifSktMX0sYS5wcm90b3R5cGUuZmluZD1mdW5jdGlvbihhLGIpe2lmKHRoaXMuY2hlY2soYSxiKSlyZXR1cm4hMDt0aGlzLmFkZChhLCJ2YXIiKTtyZXR1cm4hMX0sYS5wcm90b3R5cGUucGFyYW1ldGVyPWZ1bmN0aW9uKGEpe2lmKCF0aGlzLnNoYXJlZHx8IXRoaXMucGFyZW50LmNoZWNrKGEsITApKXJldHVybiB0aGlzLmFkZChhLCJwYXJhbSIpfSxhLnByb3RvdHlwZS5jaGVjaz1mdW5jdGlvbihhLGIpe3ZhciBjLGQ7Yz0hIXRoaXMudHlwZShhKTtpZihjfHxiKXJldHVybiBjO3JldHVybihkPXRoaXMucGFyZW50KSE9bnVsbD8hIWQuY2hlY2soYSk6ISF2b2lkIDB9LGEucHJvdG90eXBlLnRlbXBvcmFyeT1mdW5jdGlvbihhLGIpe3JldHVybiBhLmxlbmd0aD4xPyJfIithKyhiPjE/YjoiIik6Il8iKyhiK3BhcnNlSW50KGEsMzYpKS50b1N0cmluZygzNikucmVwbGFjZSgvXGQvZywiYSIpfSxhLnByb3RvdHlwZS50eXBlPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlO2U9dGhpcy52YXJpYWJsZXM7Zm9yKGM9MCxkPWUubGVuZ3RoO2M8ZDtjKyspe2I9ZVtjXTtpZihiLm5hbWU9PT1hKXJldHVybiBiLnR5cGV9cmV0dXJuIG51bGx9LGEucHJvdG90eXBlLmZyZWVWYXJpYWJsZT1mdW5jdGlvbihhKXt2YXIgYixjO2I9MDt3aGlsZSh0aGlzLmNoZWNrKGM9dGhpcy50ZW1wb3JhcnkoYSxiKSkpYisrO3RoaXMuYWRkKGMsInZhciIsITApO3JldHVybiBjfSxhLnByb3RvdHlwZS5hc3NpZ249ZnVuY3Rpb24oYSxiKXt0aGlzLmFkZChhLHt2YWx1ZTpiLGFzc2lnbmVkOiEwfSk7cmV0dXJuIHRoaXMuaGFzQXNzaWdubWVudHM9ITB9LGEucHJvdG90eXBlLmhhc0RlY2xhcmF0aW9ucz1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5kZWNsYXJlZFZhcmlhYmxlcygpLmxlbmd0aH0sYS5wcm90b3R5cGUuZGVjbGFyZWRWYXJpYWJsZXM9ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZCxlLGY7YT1bXSxiPVtdLGY9dGhpcy52YXJpYWJsZXM7Zm9yKGQ9MCxlPWYubGVuZ3RoO2Q8ZTtkKyspYz1mW2RdLGMudHlwZT09PSJ2YXIiJiYoYy5uYW1lLmNoYXJBdCgwKT09PSJfIj9iOmEpLnB1c2goYy5uYW1lKTtyZXR1cm4gYS5zb3J0KCkuY29uY2F0KGIuc29ydCgpKX0sYS5wcm90b3R5cGUuYXNzaWduZWRWYXJpYWJsZXM9ZnVuY3Rpb24oKXt2YXIgYSxiLGMsZCxlO2Q9dGhpcy52YXJpYWJsZXMsZT1bXTtmb3IoYj0wLGM9ZC5sZW5ndGg7YjxjO2IrKylhPWRbYl0sYS50eXBlLmFzc2lnbmVkJiZlLnB1c2goIiIrYS5uYW1lKyIgPSAiK2EudHlwZS52YWx1ZSk7cmV0dXJuIGV9O3JldHVybiBhfSgpfSkuY2FsbCh0aGlzKX0scmVxdWlyZVsiLi9ub2RlcyJdPW5ldyBmdW5jdGlvbigpe3ZhciBhPXRoaXM7KGZ1bmN0aW9uKCl7dmFyIGIsYyxkLGUsZixnLGgsaSxqLGssbCxtLG4sbyxwLHEscixzLHQsdSx2LHcseCx5LHosQSxCLEMsRCxFLEYsRyxILEksSixLLEwsTSxOLE8sUCxRLFIsUyxULFUsVixXLFgsWSxaLCQsXyxiYSxiYixiYyxiZCxiZSxiZixiZz1PYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LGJoPWZ1bmN0aW9uKGEsYil7ZnVuY3Rpb24gZCgpe3RoaXMuY29uc3RydWN0b3I9YX1mb3IodmFyIGMgaW4gYiliZy5jYWxsKGIsYykmJihhW2NdPWJbY10pO2QucHJvdG90eXBlPWIucHJvdG90eXBlLGEucHJvdG90eXBlPW5ldyBkLGEuX19zdXBlcl9fPWIucHJvdG90eXBlO3JldHVybiBhfSxiaT1mdW5jdGlvbihhLGIpe3JldHVybiBmdW5jdGlvbigpe3JldHVybiBhLmFwcGx5KGIsYXJndW1lbnRzKX19O0s9cmVxdWlyZSgiLi9zY29wZSIpLlNjb3BlLGJmPXJlcXVpcmUoIi4vaGVscGVycyIpLFc9YmYuY29tcGFjdCwkPWJmLmZsYXR0ZW4sWj1iZi5leHRlbmQsYmE9YmYubWVyZ2UsWD1iZi5kZWwsYmM9YmYuc3RhcnRzLFk9YmYuZW5kcyxfPWJmLmxhc3QsYS5leHRlbmQ9WixWPWZ1bmN0aW9uKCl7cmV0dXJuITB9LEI9ZnVuY3Rpb24oKXtyZXR1cm4hMX0sUD1mdW5jdGlvbigpe3JldHVybiB0aGlzfSxBPWZ1bmN0aW9uKCl7dGhpcy5uZWdhdGVkPSF0aGlzLm5lZ2F0ZWQ7cmV0dXJuIHRoaXN9LGEuQmFzZT1lPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYSgpe31hLnByb3RvdHlwZS5jb21waWxlPWZ1bmN0aW9uKGEsYil7dmFyIGM7YT1aKHt9LGEpLGImJihhLmxldmVsPWIpLGM9dGhpcy51bmZvbGRTb2FrKGEpfHx0aGlzLGMudGFiPWEuaW5kZW50O3JldHVybiBhLmxldmVsPT09eXx8IWMuaXNTdGF0ZW1lbnQoYSk/Yy5jb21waWxlTm9kZShhKTpjLmNvbXBpbGVDbG9zdXJlKGEpfSxhLnByb3RvdHlwZS5jb21waWxlQ2xvc3VyZT1mdW5jdGlvbihhKXtpZih0aGlzLmp1bXBzKCl8fHRoaXMgaW5zdGFuY2VvZiBRKXRocm93IFN5bnRheEVycm9yKCJjYW5ub3QgdXNlIGEgcHVyZSBzdGF0ZW1lbnQgaW4gYW4gZXhwcmVzc2lvbi4iKTthLnNoYXJlZFNjb3BlPSEwO3JldHVybiBpLndyYXAodGhpcykuY29tcGlsZU5vZGUoYSl9LGEucHJvdG90eXBlLmNhY2hlPWZ1bmN0aW9uKGEsYixjKXt2YXIgZSxmO2lmKCF0aGlzLmlzQ29tcGxleCgpKXtlPWI/dGhpcy5jb21waWxlKGEsYik6dGhpcztyZXR1cm5bZSxlXX1lPW5ldyB6KGN8fGEuc2NvcGUuZnJlZVZhcmlhYmxlKCJyZWYiKSksZj1uZXcgZChlLHRoaXMpO3JldHVybiBiP1tmLmNvbXBpbGUoYSxiKSxlLnZhbHVlXTpbZixlXX0sYS5wcm90b3R5cGUuY29tcGlsZUxvb3BSZWZlcmVuY2U9ZnVuY3Rpb24oYSxiKXt2YXIgYyxkLGU7Yz1kPXRoaXMuY29tcGlsZShhLHYpLC1JbmZpbml0eTwoZT0rYykmJmU8SW5maW5pdHl8fG8udGVzdChjKSYmYS5zY29wZS5jaGVjayhjLCEwKXx8KGM9IiIrKGQ9YS5zY29wZS5mcmVlVmFyaWFibGUoYikpKyIgPSAiK2MpO3JldHVybltjLGRdfSxhLnByb3RvdHlwZS5tYWtlUmV0dXJuPWZ1bmN0aW9uKCl7cmV0dXJuIG5ldyBJKHRoaXMpfSxhLnByb3RvdHlwZS5jb250YWlucz1mdW5jdGlvbihhKXt2YXIgYjtiPSExLHRoaXMudHJhdmVyc2VDaGlsZHJlbighMSxmdW5jdGlvbihjKXtpZihhKGMpKXtiPSEwO3JldHVybiExfX0pO3JldHVybiBifSxhLnByb3RvdHlwZS5jb250YWluc1R5cGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMgaW5zdGFuY2VvZiBhfHx0aGlzLmNvbnRhaW5zKGZ1bmN0aW9uKGIpe3JldHVybiBiIGluc3RhbmNlb2YgYX0pfSxhLnByb3RvdHlwZS5sYXN0Tm9uQ29tbWVudD1mdW5jdGlvbihhKXt2YXIgYjtiPWEubGVuZ3RoO3doaWxlKGItLSlpZighKGFbYl1pbnN0YW5jZW9mIGspKXJldHVybiBhW2JdO3JldHVybiBudWxsfSxhLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbihhLGIpe3ZhciBjO2E9PW51bGwmJihhPSIiKSxiPT1udWxsJiYoYj10aGlzLmNvbnN0cnVjdG9yLm5hbWUpLGM9IlxuIithK2IsdGhpcy5zb2FrJiYoYys9Ij8iKSx0aGlzLmVhY2hDaGlsZChmdW5jdGlvbihiKXtyZXR1cm4gYys9Yi50b1N0cmluZyhhK08pfSk7cmV0dXJuIGN9LGEucHJvdG90eXBlLmVhY2hDaGlsZD1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpO2lmKCF0aGlzLmNoaWxkcmVuKXJldHVybiB0aGlzO2g9dGhpcy5jaGlsZHJlbjtmb3IoZD0wLGY9aC5sZW5ndGg7ZDxmO2QrKyl7Yj1oW2RdO2lmKHRoaXNbYl0pe2k9JChbdGhpc1tiXV0pO2ZvcihlPTAsZz1pLmxlbmd0aDtlPGc7ZSsrKXtjPWlbZV07aWYoYShjKT09PSExKXJldHVybiB0aGlzfX19cmV0dXJuIHRoaXN9LGEucHJvdG90eXBlLnRyYXZlcnNlQ2hpbGRyZW49ZnVuY3Rpb24oYSxiKXtyZXR1cm4gdGhpcy5lYWNoQ2hpbGQoZnVuY3Rpb24oYyl7aWYoYihjKT09PSExKXJldHVybiExO3JldHVybiBjLnRyYXZlcnNlQ2hpbGRyZW4oYSxiKX0pfSxhLnByb3RvdHlwZS5pbnZlcnQ9ZnVuY3Rpb24oKXtyZXR1cm4gbmV3IEQoIiEiLHRoaXMpfSxhLnByb3RvdHlwZS51bndyYXBBbGw9ZnVuY3Rpb24oKXt2YXIgYTthPXRoaXM7d2hpbGUoYSE9PShhPWEudW53cmFwKCkpKWNvbnRpbnVlO3JldHVybiBhfSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bXSxhLnByb3RvdHlwZS5pc1N0YXRlbWVudD1CLGEucHJvdG90eXBlLmp1bXBzPUIsYS5wcm90b3R5cGUuaXNDb21wbGV4PVYsYS5wcm90b3R5cGUuaXNDaGFpbmFibGU9QixhLnByb3RvdHlwZS5pc0Fzc2lnbmFibGU9QixhLnByb3RvdHlwZS51bndyYXA9UCxhLnByb3RvdHlwZS51bmZvbGRTb2FrPUIsYS5wcm90b3R5cGUuYXNzaWducz1CO3JldHVybiBhfSgpLGEuQmxvY2s9Zj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7dGhpcy5leHByZXNzaW9ucz1XKCQoYXx8W10pKX1iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsiZXhwcmVzc2lvbnMiXSxhLnByb3RvdHlwZS5wdXNoPWZ1bmN0aW9uKGEpe3RoaXMuZXhwcmVzc2lvbnMucHVzaChhKTtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUucG9wPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuZXhwcmVzc2lvbnMucG9wKCl9LGEucHJvdG90eXBlLnVuc2hpZnQ9ZnVuY3Rpb24oYSl7dGhpcy5leHByZXNzaW9ucy51bnNoaWZ0KGEpO3JldHVybiB0aGlzfSxhLnByb3RvdHlwZS51bndyYXA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5leHByZXNzaW9ucy5sZW5ndGg9PT0xP3RoaXMuZXhwcmVzc2lvbnNbMF06dGhpc30sYS5wcm90b3R5cGUuaXNFbXB0eT1mdW5jdGlvbigpe3JldHVybiF0aGlzLmV4cHJlc3Npb25zLmxlbmd0aH0sYS5wcm90b3R5cGUuaXNTdGF0ZW1lbnQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7ZT10aGlzLmV4cHJlc3Npb25zO2ZvcihjPTAsZD1lLmxlbmd0aDtjPGQ7YysrKXtiPWVbY107aWYoYi5pc1N0YXRlbWVudChhKSlyZXR1cm4hMH1yZXR1cm4hMX0sYS5wcm90b3R5cGUuanVtcHM9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7ZT10aGlzLmV4cHJlc3Npb25zO2ZvcihjPTAsZD1lLmxlbmd0aDtjPGQ7YysrKXtiPWVbY107aWYoYi5qdW1wcyhhKSlyZXR1cm4gYn19LGEucHJvdG90eXBlLm1ha2VSZXR1cm49ZnVuY3Rpb24oKXt2YXIgYSxiO2I9dGhpcy5leHByZXNzaW9ucy5sZW5ndGg7d2hpbGUoYi0tKXthPXRoaXMuZXhwcmVzc2lvbnNbYl07aWYoIShhIGluc3RhbmNlb2Ygaykpe3RoaXMuZXhwcmVzc2lvbnNbYl09YS5tYWtlUmV0dXJuKCksYSBpbnN0YW5jZW9mIEkmJiFhLmV4cHJlc3Npb24mJnRoaXMuZXhwcmVzc2lvbnMuc3BsaWNlKGIsMSk7YnJlYWt9fXJldHVybiB0aGlzfSxhLnByb3RvdHlwZS5jb21waWxlPWZ1bmN0aW9uKGIsYyl7Yj09bnVsbCYmKGI9e30pO3JldHVybiBiLnNjb3BlP2EuX19zdXBlcl9fLmNvbXBpbGUuY2FsbCh0aGlzLGIsYyk6dGhpcy5jb21waWxlUm9vdChiKX0sYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGg7dGhpcy50YWI9YS5pbmRlbnQsZT1hLmxldmVsPT09eSxjPVtdLGg9dGhpcy5leHByZXNzaW9ucztmb3IoZj0wLGc9aC5sZW5ndGg7ZjxnO2YrKylkPWhbZl0sZD1kLnVud3JhcEFsbCgpLGQ9ZC51bmZvbGRTb2FrKGEpfHxkLGU/KGQuZnJvbnQ9ITAsYj1kLmNvbXBpbGUoYSksYy5wdXNoKGQuaXNTdGF0ZW1lbnQoYSk/Yjp0aGlzLnRhYitiKyI7IikpOmMucHVzaChkLmNvbXBpbGUoYSx2KSk7aWYoZSlyZXR1cm4gYy5qb2luKCJcbiIpO2I9Yy5qb2luKCIsICIpfHwidm9pZCAwIjtyZXR1cm4gYy5sZW5ndGg+MSYmYS5sZXZlbD49dj8iKCIrYisiKSI6Yn0sYS5wcm90b3R5cGUuY29tcGlsZVJvb3Q9ZnVuY3Rpb24oYSl7dmFyIGI7YS5pbmRlbnQ9dGhpcy50YWI9YS5iYXJlPyIiOk8sYS5zY29wZT1uZXcgSyhudWxsLHRoaXMsbnVsbCksYS5sZXZlbD15LGI9dGhpcy5jb21waWxlV2l0aERlY2xhcmF0aW9ucyhhKTtyZXR1cm4gYS5iYXJlP2I6IihmdW5jdGlvbigpIHtcbiIrYisiXG59KS5jYWxsKHRoaXMpO1xuIn0sYS5wcm90b3R5cGUuY29tcGlsZVdpdGhEZWNsYXJhdGlvbnM9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGgsaTtiPWU9IiIsaT10aGlzLmV4cHJlc3Npb25zO2ZvcihkPTAsaD1pLmxlbmd0aDtkPGg7ZCsrKXtjPWlbZF0sYz1jLnVud3JhcCgpO2lmKCEoYyBpbnN0YW5jZW9mIGt8fGMgaW5zdGFuY2VvZiB6KSlicmVha31hPWJhKGEse2xldmVsOnl9KSxkJiYoZj10aGlzLmV4cHJlc3Npb25zLnNwbGljZShkLHRoaXMuZXhwcmVzc2lvbnMubGVuZ3RoKSxiPXRoaXMuY29tcGlsZU5vZGUoYSksdGhpcy5leHByZXNzaW9ucz1mKSxlPXRoaXMuY29tcGlsZU5vZGUoYSksZz1hLnNjb3BlLGcuZXhwcmVzc2lvbnM9PT10aGlzJiYoYS5zY29wZS5oYXNEZWNsYXJhdGlvbnMoKSYmKGIrPSIiK3RoaXMudGFiKyJ2YXIgIitnLmRlY2xhcmVkVmFyaWFibGVzKCkuam9pbigiLCAiKSsiO1xuIiksZy5oYXNBc3NpZ25tZW50cyYmKGIrPSIiK3RoaXMudGFiKyJ2YXIgIitiYihnLmFzc2lnbmVkVmFyaWFibGVzKCkuam9pbigiLCAiKSx0aGlzLnRhYikrIjtcbiIpKTtyZXR1cm4gYitlfSxhLndyYXA9ZnVuY3Rpb24oYil7aWYoYi5sZW5ndGg9PT0xJiZiWzBdaW5zdGFuY2VvZiBhKXJldHVybiBiWzBdO3JldHVybiBuZXcgYShiKX07cmV0dXJuIGF9KCksYS5MaXRlcmFsPXo9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3RoaXMudmFsdWU9YX1iaChhLGUpLGEucHJvdG90eXBlLm1ha2VSZXR1cm49ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pc1N0YXRlbWVudCgpP3RoaXM6bmV3IEkodGhpcyl9LGEucHJvdG90eXBlLmlzQXNzaWduYWJsZT1mdW5jdGlvbigpe3JldHVybiBvLnRlc3QodGhpcy52YWx1ZSl9LGEucHJvdG90eXBlLmlzU3RhdGVtZW50PWZ1bmN0aW9uKCl7dmFyIGE7cmV0dXJuKGE9dGhpcy52YWx1ZSk9PT0iYnJlYWsifHxhPT09ImNvbnRpbnVlInx8YT09PSJkZWJ1Z2dlciJ9LGEucHJvdG90eXBlLmlzQ29tcGxleD1CLGEucHJvdG90eXBlLmFzc2lnbnM9ZnVuY3Rpb24oYSl7cmV0dXJuIGE9PT10aGlzLnZhbHVlfSxhLnByb3RvdHlwZS5qdW1wcz1mdW5jdGlvbihhKXtpZighdGhpcy5pc1N0YXRlbWVudCgpKXJldHVybiExO3JldHVybiFhfHwhKGEubG9vcHx8YS5ibG9jayYmdGhpcy52YWx1ZSE9PSJjb250aW51ZSIpP3RoaXM6ITF9LGEucHJvdG90eXBlLmNvbXBpbGVOb2RlPWZ1bmN0aW9uKGEpe3ZhciBiO2I9dGhpcy5pc1VuZGVmaW5lZD9hLmxldmVsPj10PyIodm9pZCAwKSI6InZvaWQgMCI6dGhpcy52YWx1ZS5yZXNlcnZlZD8nIicrdGhpcy52YWx1ZSsnIic6dGhpcy52YWx1ZTtyZXR1cm4gdGhpcy5pc1N0YXRlbWVudCgpPyIiK3RoaXMudGFiK2IrIjsiOmJ9LGEucHJvdG90eXBlLnRvU3RyaW5nPWZ1bmN0aW9uKCl7cmV0dXJuJyAiJyt0aGlzLnZhbHVlKyciJ307cmV0dXJuIGF9KCksYS5SZXR1cm49ST1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7YSYmIWEudW53cmFwKCkuaXNVbmRlZmluZWQmJih0aGlzLmV4cHJlc3Npb249YSl9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bImV4cHJlc3Npb24iXSxhLnByb3RvdHlwZS5pc1N0YXRlbWVudD1WLGEucHJvdG90eXBlLm1ha2VSZXR1cm49UCxhLnByb3RvdHlwZS5qdW1wcz1QLGEucHJvdG90eXBlLmNvbXBpbGU9ZnVuY3Rpb24oYixjKXt2YXIgZCxlO2Q9KGU9dGhpcy5leHByZXNzaW9uKSE9bnVsbD9lLm1ha2VSZXR1cm4oKTp2b2lkIDA7cmV0dXJuIWR8fGQgaW5zdGFuY2VvZiBhP2EuX19zdXBlcl9fLmNvbXBpbGUuY2FsbCh0aGlzLGIsYyk6ZC5jb21waWxlKGIsYyl9LGEucHJvdG90eXBlLmNvbXBpbGVOb2RlPWZ1bmN0aW9uKGEpe3JldHVybiB0aGlzLnRhYisoInJldHVybiIrKHRoaXMuZXhwcmVzc2lvbj8iICIrdGhpcy5leHByZXNzaW9uLmNvbXBpbGUoYSx4KToiIikrIjsiKX07cmV0dXJuIGF9KCksYS5WYWx1ZT1UPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShiLGMsZCl7aWYoIWMmJmIgaW5zdGFuY2VvZiBhKXJldHVybiBiO3RoaXMuYmFzZT1iLHRoaXMucHJvcGVydGllcz1jfHxbXSxkJiYodGhpc1tkXT0hMCk7cmV0dXJuIHRoaXN9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bImJhc2UiLCJwcm9wZXJ0aWVzIl0sYS5wcm90b3R5cGUucHVzaD1mdW5jdGlvbihhKXt0aGlzLnByb3BlcnRpZXMucHVzaChhKTtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUuaGFzUHJvcGVydGllcz1mdW5jdGlvbigpe3JldHVybiEhdGhpcy5wcm9wZXJ0aWVzLmxlbmd0aH0sYS5wcm90b3R5cGUuaXNBcnJheT1mdW5jdGlvbigpe3JldHVybiF0aGlzLnByb3BlcnRpZXMubGVuZ3RoJiZ0aGlzLmJhc2UgaW5zdGFuY2VvZiBjfSxhLnByb3RvdHlwZS5pc0NvbXBsZXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5oYXNQcm9wZXJ0aWVzKCl8fHRoaXMuYmFzZS5pc0NvbXBsZXgoKX0sYS5wcm90b3R5cGUuaXNBc3NpZ25hYmxlPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuaGFzUHJvcGVydGllcygpfHx0aGlzLmJhc2UuaXNBc3NpZ25hYmxlKCl9LGEucHJvdG90eXBlLmlzU2ltcGxlTnVtYmVyPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYmFzZSBpbnN0YW5jZW9mIHomJkoudGVzdCh0aGlzLmJhc2UudmFsdWUpfSxhLnByb3RvdHlwZS5pc0F0b21pYz1mdW5jdGlvbigpe3ZhciBhLGIsYyxkO2Q9dGhpcy5wcm9wZXJ0aWVzLmNvbmNhdCh0aGlzLmJhc2UpO2ZvcihiPTAsYz1kLmxlbmd0aDtiPGM7YisrKXthPWRbYl07aWYoYS5zb2FrfHxhIGluc3RhbmNlb2YgZylyZXR1cm4hMX1yZXR1cm4hMH0sYS5wcm90b3R5cGUuaXNTdGF0ZW1lbnQ9ZnVuY3Rpb24oYSl7cmV0dXJuIXRoaXMucHJvcGVydGllcy5sZW5ndGgmJnRoaXMuYmFzZS5pc1N0YXRlbWVudChhKX0sYS5wcm90b3R5cGUuYXNzaWducz1mdW5jdGlvbihhKXtyZXR1cm4hdGhpcy5wcm9wZXJ0aWVzLmxlbmd0aCYmdGhpcy5iYXNlLmFzc2lnbnMoYSl9LGEucHJvdG90eXBlLmp1bXBzPWZ1bmN0aW9uKGEpe3JldHVybiF0aGlzLnByb3BlcnRpZXMubGVuZ3RoJiZ0aGlzLmJhc2UuanVtcHMoYSl9LGEucHJvdG90eXBlLmlzT2JqZWN0PWZ1bmN0aW9uKGEpe2lmKHRoaXMucHJvcGVydGllcy5sZW5ndGgpcmV0dXJuITE7cmV0dXJuIHRoaXMuYmFzZSBpbnN0YW5jZW9mIEMmJighYXx8dGhpcy5iYXNlLmdlbmVyYXRlZCl9LGEucHJvdG90eXBlLmlzU3BsaWNlPWZ1bmN0aW9uKCl7cmV0dXJuIF8odGhpcy5wcm9wZXJ0aWVzKWluc3RhbmNlb2YgTH0sYS5wcm90b3R5cGUubWFrZVJldHVybj1mdW5jdGlvbigpe3JldHVybiB0aGlzLnByb3BlcnRpZXMubGVuZ3RoP2EuX19zdXBlcl9fLm1ha2VSZXR1cm4uY2FsbCh0aGlzKTp0aGlzLmJhc2UubWFrZVJldHVybigpfSxhLnByb3RvdHlwZS51bndyYXA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5wcm9wZXJ0aWVzLmxlbmd0aD90aGlzOnRoaXMuYmFzZX0sYS5wcm90b3R5cGUuY2FjaGVSZWZlcmVuY2U9ZnVuY3Rpb24oYil7dmFyIGMsZSxmLGc7Zj1fKHRoaXMucHJvcGVydGllcyk7aWYodGhpcy5wcm9wZXJ0aWVzLmxlbmd0aDwyJiYhdGhpcy5iYXNlLmlzQ29tcGxleCgpJiYoZiE9bnVsbD8hZi5pc0NvbXBsZXgoKTohdm9pZCAwKSlyZXR1cm5bdGhpcyx0aGlzXTtjPW5ldyBhKHRoaXMuYmFzZSx0aGlzLnByb3BlcnRpZXMuc2xpY2UoMCwtMSkpLGMuaXNDb21wbGV4KCkmJihlPW5ldyB6KGIuc2NvcGUuZnJlZVZhcmlhYmxlKCJiYXNlIikpLGM9bmV3IGEobmV3IEYobmV3IGQoZSxjKSkpKTtpZighZilyZXR1cm5bYyxlXTtmLmlzQ29tcGxleCgpJiYoZz1uZXcgeihiLnNjb3BlLmZyZWVWYXJpYWJsZSgibmFtZSIpKSxmPW5ldyBzKG5ldyBkKGcsZi5pbmRleCkpLGc9bmV3IHMoZykpO3JldHVybltjLnB1c2goZiksbmV3IGEoZXx8Yy5iYXNlLFtnfHxmXSldfSxhLnByb3RvdHlwZS5jb21waWxlTm9kZT1mdW5jdGlvbihhKXt2YXIgYyxkLGUsZixnO3RoaXMuYmFzZS5mcm9udD10aGlzLmZyb250LGU9dGhpcy5wcm9wZXJ0aWVzLGM9dGhpcy5iYXNlLmNvbXBpbGUoYSxlLmxlbmd0aD90Om51bGwpLGVbMF1pbnN0YW5jZW9mIGImJnRoaXMuaXNTaW1wbGVOdW1iZXIoKSYmKGM9IigiK2MrIikiKTtmb3IoZj0wLGc9ZS5sZW5ndGg7ZjxnO2YrKylkPWVbZl0sYys9ZC5jb21waWxlKGEpO3JldHVybiBjfSxhLnByb3RvdHlwZS51bmZvbGRTb2FrPWZ1bmN0aW9uKGIpe3ZhciBjO2lmKHRoaXMudW5mb2xkZWRTb2FrIT1udWxsKXJldHVybiB0aGlzLnVuZm9sZGVkU29haztjPWJpKGZ1bmN0aW9uKCl7dmFyIGMsZSxmLGcsaCxpLGosaztpZihmPXRoaXMuYmFzZS51bmZvbGRTb2FrKGIpKXtBcnJheS5wcm90b3R5cGUucHVzaC5hcHBseShmLmJvZHkucHJvcGVydGllcyx0aGlzLnByb3BlcnRpZXMpO3JldHVybiBmfWs9dGhpcy5wcm9wZXJ0aWVzO2ZvcihlPTAsaj1rLmxlbmd0aDtlPGo7ZSsrKXtnPWtbZV07aWYoZy5zb2FrKXtnLnNvYWs9ITEsYz1uZXcgYSh0aGlzLmJhc2UsdGhpcy5wcm9wZXJ0aWVzLnNsaWNlKDAsZSkpLGk9bmV3IGEodGhpcy5iYXNlLHRoaXMucHJvcGVydGllcy5zbGljZShlKSksYy5pc0NvbXBsZXgoKSYmKGg9bmV3IHooYi5zY29wZS5mcmVlVmFyaWFibGUoInJlZiIpKSxjPW5ldyBGKG5ldyBkKGgsYykpLGkuYmFzZT1oKTtyZXR1cm4gbmV3IHEobmV3IGwoYyksaSx7c29hazohMH0pfX1yZXR1cm4gbnVsbH0sdGhpcykoKTtyZXR1cm4gdGhpcy51bmZvbGRlZFNvYWs9Y3x8ITF9O3JldHVybiBhfSgpLGEuQ29tbWVudD1rPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhKXt0aGlzLmNvbW1lbnQ9YX1iaChhLGUpLGEucHJvdG90eXBlLmlzU3RhdGVtZW50PVYsYS5wcm90b3R5cGUubWFrZVJldHVybj1QLGEucHJvdG90eXBlLmNvbXBpbGVOb2RlPWZ1bmN0aW9uKGEsYil7dmFyIGM7Yz0iLyoiK2JiKHRoaXMuY29tbWVudCx0aGlzLnRhYikrIiovIiwoYnx8YS5sZXZlbCk9PT15JiYoYz1hLmluZGVudCtjKTtyZXR1cm4gY307cmV0dXJuIGF9KCksYS5DYWxsPWc9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjKXt0aGlzLmFyZ3M9YiE9bnVsbD9iOltdLHRoaXMuc29haz1jLHRoaXMuaXNOZXc9ITEsdGhpcy5pc1N1cGVyPWE9PT0ic3VwZXIiLHRoaXMudmFyaWFibGU9dGhpcy5pc1N1cGVyP251bGw6YX1iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsidmFyaWFibGUiLCJhcmdzIl0sYS5wcm90b3R5cGUubmV3SW5zdGFuY2U9ZnVuY3Rpb24oKXt2YXIgYjtiPXRoaXMudmFyaWFibGUuYmFzZXx8dGhpcy52YXJpYWJsZSxiIGluc3RhbmNlb2YgYT9iLm5ld0luc3RhbmNlKCk6dGhpcy5pc05ldz0hMDtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUuc3VwZXJSZWZlcmVuY2U9ZnVuY3Rpb24oYSl7dmFyIGIsYztiPWEuc2NvcGUubWV0aG9kO2lmKCFiKXRocm93IFN5bnRheEVycm9yKCJjYW5ub3QgY2FsbCBzdXBlciBvdXRzaWRlIG9mIGEgZnVuY3Rpb24uIik7Yz1iLm5hbWU7aWYoIWMpdGhyb3cgU3ludGF4RXJyb3IoImNhbm5vdCBjYWxsIHN1cGVyIG9uIGFuIGFub255bW91cyBmdW5jdGlvbi4iKTtyZXR1cm4gYi5rbGFzcz8iIitiLmtsYXNzKyIuX19zdXBlcl9fLiIrYzoiIitjKyIuX19zdXBlcl9fLmNvbnN0cnVjdG9yIn0sYS5wcm90b3R5cGUudW5mb2xkU29haz1mdW5jdGlvbihiKXt2YXIgYyxkLGUsZixnLGgsaSxqLGs7aWYodGhpcy5zb2FrKXtpZih0aGlzLnZhcmlhYmxlKXtpZihkPWJkKGIsdGhpcywidmFyaWFibGUiKSlyZXR1cm4gZDtqPShuZXcgVCh0aGlzLnZhcmlhYmxlKSkuY2FjaGVSZWZlcmVuY2UoYiksZT1qWzBdLGc9alsxXX1lbHNlIGU9bmV3IHoodGhpcy5zdXBlclJlZmVyZW5jZShiKSksZz1uZXcgVChlKTtnPW5ldyBhKGcsdGhpcy5hcmdzKSxnLmlzTmV3PXRoaXMuaXNOZXcsZT1uZXcgeigidHlwZW9mICIrZS5jb21waWxlKGIpKycgPT09ICJmdW5jdGlvbiInKTtyZXR1cm4gbmV3IHEoZSxuZXcgVChnKSx7c29hazohMH0pfWM9dGhpcyxmPVtdO2Zvcig7Oyl7aWYoYy52YXJpYWJsZSBpbnN0YW5jZW9mIGEpe2YucHVzaChjKSxjPWMudmFyaWFibGU7Y29udGludWV9aWYoIShjLnZhcmlhYmxlIGluc3RhbmNlb2YgVCkpYnJlYWs7Zi5wdXNoKGMpO2lmKCEoKGM9Yy52YXJpYWJsZS5iYXNlKWluc3RhbmNlb2YgYSkpYnJlYWt9az1mLnJldmVyc2UoKTtmb3IoaD0wLGk9ay5sZW5ndGg7aDxpO2grKyljPWtbaF0sZCYmKGMudmFyaWFibGUgaW5zdGFuY2VvZiBhP2MudmFyaWFibGU9ZDpjLnZhcmlhYmxlLmJhc2U9ZCksZD1iZChiLGMsInZhcmlhYmxlIik7cmV0dXJuIGR9LGEucHJvdG90eXBlLmZpbHRlckltcGxpY2l0T2JqZWN0cz1mdW5jdGlvbihhKXt2YXIgYixjLGUsZixnLGgsaSxqLGssbDtjPVtdO2ZvcihoPTAsaj1hLmxlbmd0aDtoPGo7aCsrKXtiPWFbaF07aWYoISgodHlwZW9mIGIuaXNPYmplY3Q9PSJmdW5jdGlvbiI/Yi5pc09iamVjdCgpOnZvaWQgMCkmJmIuYmFzZS5nZW5lcmF0ZWQpKXtjLnB1c2goYik7Y29udGludWV9ZT1udWxsLGw9Yi5iYXNlLnByb3BlcnRpZXM7Zm9yKGk9MCxrPWwubGVuZ3RoO2k8aztpKyspZj1sW2ldLGYgaW5zdGFuY2VvZiBkPyhlfHxjLnB1c2goZT1uZXcgQyhnPVtdLCEwKSksZy5wdXNoKGYpKTooYy5wdXNoKGYpLGU9bnVsbCl9cmV0dXJuIGN9LGEucHJvdG90eXBlLmNvbXBpbGVOb2RlPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlOyhlPXRoaXMudmFyaWFibGUpIT1udWxsJiYoZS5mcm9udD10aGlzLmZyb250KTtpZihkPU0uY29tcGlsZVNwbGF0dGVkQXJyYXkoYSx0aGlzLmFyZ3MsITApKXJldHVybiB0aGlzLmNvbXBpbGVTcGxhdChhLGQpO2M9dGhpcy5maWx0ZXJJbXBsaWNpdE9iamVjdHModGhpcy5hcmdzKSxjPWZ1bmN0aW9uKCl7dmFyIGQsZSxmO2Y9W107Zm9yKGQ9MCxlPWMubGVuZ3RoO2Q8ZTtkKyspYj1jW2RdLGYucHVzaChiLmNvbXBpbGUoYSx2KSk7cmV0dXJuIGZ9KCkuam9pbigiLCAiKTtyZXR1cm4gdGhpcy5pc1N1cGVyP3RoaXMuc3VwZXJSZWZlcmVuY2UoYSkrKCIuY2FsbCh0aGlzIisoYyYmIiwgIitjKSsiKSIpOih0aGlzLmlzTmV3PyJuZXcgIjoiIikrdGhpcy52YXJpYWJsZS5jb21waWxlKGEsdCkrKCIoIitjKyIpIil9LGEucHJvdG90eXBlLmNvbXBpbGVTdXBlcj1mdW5jdGlvbihhLGIpe3JldHVybiIiK3RoaXMuc3VwZXJSZWZlcmVuY2UoYikrIi5jYWxsKHRoaXMiKyhhLmxlbmd0aD8iLCAiOiIiKSthKyIpIn0sYS5wcm90b3R5cGUuY29tcGlsZVNwbGF0PWZ1bmN0aW9uKGEsYil7dmFyIGMsZCxlLGYsZztpZih0aGlzLmlzU3VwZXIpcmV0dXJuIiIrdGhpcy5zdXBlclJlZmVyZW5jZShhKSsiLmFwcGx5KHRoaXMsICIrYisiKSI7aWYodGhpcy5pc05ldyl7ZT10aGlzLnRhYitPO3JldHVybiIoZnVuY3Rpb24oZnVuYywgYXJncywgY3Rvcikge1xuIitlKyJjdG9yLnByb3RvdHlwZSA9IGZ1bmMucHJvdG90eXBlO1xuIitlKyJ2YXIgY2hpbGQgPSBuZXcgY3RvciwgcmVzdWx0ID0gZnVuYy5hcHBseShjaGlsZCwgYXJncyk7XG4iK2UrJ3JldHVybiB0eXBlb2YgcmVzdWx0ID09PSAib2JqZWN0IiA/IHJlc3VsdCA6IGNoaWxkO1xuJyt0aGlzLnRhYisifSkoIit0aGlzLnZhcmlhYmxlLmNvbXBpbGUoYSx2KSsiLCAiK2IrIiwgZnVuY3Rpb24oKSB7fSkifWM9bmV3IFQodGhpcy52YXJpYWJsZSksKGY9Yy5wcm9wZXJ0aWVzLnBvcCgpKSYmYy5pc0NvbXBsZXgoKT8oZz1hLnNjb3BlLmZyZWVWYXJpYWJsZSgicmVmIiksZD0iKCIrZysiID0gIitjLmNvbXBpbGUoYSx2KSsiKSIrZi5jb21waWxlKGEpKTooZD1jLmNvbXBpbGUoYSx0KSxKLnRlc3QoZCkmJihkPSIoIitkKyIpIiksZj8oZz1kLGQrPWYuY29tcGlsZShhKSk6Zz0ibnVsbCIpO3JldHVybiIiK2QrIi5hcHBseSgiK2crIiwgIitiKyIpIn07cmV0dXJuIGF9KCksYS5FeHRlbmRzPW09ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYil7dGhpcy5jaGlsZD1hLHRoaXMucGFyZW50PWJ9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bImNoaWxkIiwicGFyZW50Il0sYS5wcm90b3R5cGUuY29tcGlsZT1mdW5jdGlvbihhKXtiZSgiaGFzUHJvcCIpO3JldHVybihuZXcgZyhuZXcgVChuZXcgeihiZSgiZXh0ZW5kcyIpKSksW3RoaXMuY2hpbGQsdGhpcy5wYXJlbnRdKSkuY29tcGlsZShhKX07cmV0dXJuIGF9KCksYS5BY2Nlc3M9Yj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXt0aGlzLm5hbWU9YSx0aGlzLm5hbWUuYXNLZXk9ITAsdGhpcy5wcm90bz1iPT09InByb3RvIj8iLnByb3RvdHlwZSI6IiIsdGhpcy5zb2FrPWI9PT0ic29hayJ9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bIm5hbWUiXSxhLnByb3RvdHlwZS5jb21waWxlPWZ1bmN0aW9uKGEpe3ZhciBiO2I9dGhpcy5uYW1lLmNvbXBpbGUoYSk7cmV0dXJuIHRoaXMucHJvdG8rKHAudGVzdChiKT8iWyIrYisiXSI6Ii4iK2IpfSxhLnByb3RvdHlwZS5pc0NvbXBsZXg9QjtyZXR1cm4gYX0oKSxhLkluZGV4PXM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3RoaXMuaW5kZXg9YX1iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsiaW5kZXgiXSxhLnByb3RvdHlwZS5jb21waWxlPWZ1bmN0aW9uKGEpe3JldHVybih0aGlzLnByb3RvPyIucHJvdG90eXBlIjoiIikrKCJbIit0aGlzLmluZGV4LmNvbXBpbGUoYSx4KSsiXSIpfSxhLnByb3RvdHlwZS5pc0NvbXBsZXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5pbmRleC5pc0NvbXBsZXgoKX07cmV0dXJuIGF9KCksYS5SYW5nZT1IPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIsYyl7dGhpcy5mcm9tPWEsdGhpcy50bz1iLHRoaXMuZXhjbHVzaXZlPWM9PT0iZXhjbHVzaXZlIix0aGlzLmVxdWFscz10aGlzLmV4Y2x1c2l2ZT8iIjoiPSJ9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bImZyb20iLCJ0byJdLGEucHJvdG90eXBlLmNvbXBpbGVWYXJpYWJsZXM9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7YT1iYShhLHt0b3A6ITB9KSxjPXRoaXMuZnJvbS5jYWNoZShhLHYpLHRoaXMuZnJvbT1jWzBdLHRoaXMuZnJvbVZhcj1jWzFdLGQ9dGhpcy50by5jYWNoZShhLHYpLHRoaXMudG89ZFswXSx0aGlzLnRvVmFyPWRbMV0sZT1bdGhpcy5mcm9tVmFyLm1hdGNoKEopLHRoaXMudG9WYXIubWF0Y2goSildLHRoaXMuZnJvbU51bT1lWzBdLHRoaXMudG9OdW09ZVsxXSxiPVtdLHRoaXMuZnJvbSE9PXRoaXMuZnJvbVZhciYmYi5wdXNoKHRoaXMuZnJvbSk7aWYodGhpcy50byE9PXRoaXMudG9WYXIpcmV0dXJuIGIucHVzaCh0aGlzLnRvKX0sYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGg7dGhpcy5jb21waWxlVmFyaWFibGVzKGEpO2lmKCFhLmluZGV4KXJldHVybiB0aGlzLmNvbXBpbGVBcnJheShhKTtpZih0aGlzLmZyb21OdW0mJnRoaXMudG9OdW0pcmV0dXJuIHRoaXMuY29tcGlsZVNpbXBsZShhKTtkPVgoYSwiaW5kZXgiKSxlPVgoYSwic3RlcCIpLGUmJihnPWEuc2NvcGUuZnJlZVZhcmlhYmxlKCJzdGVwIikpLGg9IiIrZCsiID0gIit0aGlzLmZyb20rKHRoaXMudG8hPT10aGlzLnRvVmFyPyIsICIrdGhpcy50bzoiIikrKGU/IiwgIitnKyIgPSAiK2UuY29tcGlsZShhKToiIiksYj0iIit0aGlzLmZyb21WYXIrIiA8PSAiK3RoaXMudG9WYXIsYz0iIitiKyIgPyAiK2QrIiA8Iit0aGlzLmVxdWFscysiICIrdGhpcy50b1ZhcisiIDogIitkKyIgPiIrdGhpcy5lcXVhbHMrIiAiK3RoaXMudG9WYXIsZj1lPyIiK2QrIiArPSAiK2c6IiIrYisiID8gIitkKyIrKyA6ICIrZCsiLS0iO3JldHVybiIiK2grIjsgIitjKyI7ICIrZn0sYS5wcm90b3R5cGUuY29tcGlsZVNpbXBsZT1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpLGo7aj1bK3RoaXMuZnJvbU51bSwrdGhpcy50b051bV0sYz1qWzBdLGg9alsxXSxkPVgoYSwiaW5kZXgiKSxlPVgoYSwic3RlcCIpLGUmJihnPWEuc2NvcGUuZnJlZVZhcmlhYmxlKCJzdGVwIikpLGk9IiIrZCsiID0gIitjLGUmJihpKz0iLCAiK2crIiA9ICIrZS5jb21waWxlKGEpKSxiPWM8PWg/IiIrZCsiIDwiK3RoaXMuZXF1YWxzKyIgIitoOiIiK2QrIiA+Iit0aGlzLmVxdWFscysiICIraCxlJiYoZj0iIitkKyIgKz0gIitnKSxlfHwoZj1jPD1oPyIiK2QrIisrIjoiIitkKyItLSIpO3JldHVybiIiK2krIjsgIitiKyI7ICIrZn0sYS5wcm90b3R5cGUuY29tcGlsZUFycmF5PWZ1bmN0aW9uKGEpe3ZhciBiLGMsZCxlLGYsZyxoLGksaixrLGwsbSxuO2lmKHRoaXMuZnJvbU51bSYmdGhpcy50b051bSYmTWF0aC5hYnModGhpcy5mcm9tTnVtLXRoaXMudG9OdW0pPD0yMCl7aD1mdW5jdGlvbigpe249W107Zm9yKHZhciBhPWw9K3RoaXMuZnJvbU51bSxiPSt0aGlzLnRvTnVtO2w8PWI/YTw9YjphPj1iO2w8PWI/YSsrOmEtLSluLnB1c2goYSk7cmV0dXJuIG59LmFwcGx5KHRoaXMsYXJndW1lbnRzKSx0aGlzLmV4Y2x1c2l2ZSYmaC5wb3AoKTtyZXR1cm4iWyIraC5qb2luKCIsICIpKyJdIn1lPXRoaXMudGFiK08sZD1hLnNjb3BlLmZyZWVWYXJpYWJsZSgiaSIpLGk9YS5zY29wZS5mcmVlVmFyaWFibGUoInJlc3VsdHMiKSxnPSJcbiIrZStpKyIgPSBbXTsiLHRoaXMuZnJvbU51bSYmdGhpcy50b051bT8oYS5pbmRleD1kLGI9dGhpcy5jb21waWxlU2ltcGxlKGEpKTooaj0iIitkKyIgPSAiK3RoaXMuZnJvbSsodGhpcy50byE9PXRoaXMudG9WYXI/IiwgIit0aGlzLnRvOiIiKSxjPSIiK3RoaXMuZnJvbVZhcisiIDw9ICIrdGhpcy50b1ZhcixiPSJ2YXIgIitqKyI7ICIrYysiID8gIitkKyIgPCIrdGhpcy5lcXVhbHMrIiAiK3RoaXMudG9WYXIrIiA6ICIrZCsiID4iK3RoaXMuZXF1YWxzKyIgIit0aGlzLnRvVmFyKyI7ICIrYysiID8gIitkKyIrKyA6ICIrZCsiLS0iKSxmPSJ7ICIraSsiLnB1c2goIitkKyIpOyB9XG4iK2UrInJldHVybiAiK2krIjtcbiIrYS5pbmRlbnQ7cmV0dXJuIihmdW5jdGlvbigpIHsiK2crIlxuIitlKyJmb3IgKCIrYisiKSIrZisifSkuYXBwbHkodGhpcywgYXJndW1lbnRzKSJ9O3JldHVybiBhfSgpLGEuU2xpY2U9TD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYil7dGhpcy5yYW5nZT1iLGEuX19zdXBlcl9fLmNvbnN0cnVjdG9yLmNhbGwodGhpcyl9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bInJhbmdlIl0sYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnO2c9dGhpcy5yYW5nZSxlPWcudG8sYz1nLmZyb20sZD1jJiZjLmNvbXBpbGUoYSx4KXx8IjAiLGI9ZSYmZS5jb21waWxlKGEseCksZSYmKCEhdGhpcy5yYW5nZS5leGNsdXNpdmV8fCtiIT09LTEpJiYoZj0iLCAiKyh0aGlzLnJhbmdlLmV4Y2x1c2l2ZT9iOkoudGVzdChiKT8oK2IrMSkudG9TdHJpbmcoKToiKCIrYisiICsgMSkgfHwgOWU5IikpO3JldHVybiIuc2xpY2UoIitkKyhmfHwiIikrIikifTtyZXR1cm4gYX0oKSxhLk9iaj1DPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIpe3RoaXMuZ2VuZXJhdGVkPWIhPW51bGw/YjohMSx0aGlzLm9iamVjdHM9dGhpcy5wcm9wZXJ0aWVzPWF8fFtdfWJoKGEsZSksYS5wcm90b3R5cGUuY2hpbGRyZW49WyJwcm9wZXJ0aWVzIl0sYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxlLGYsZyxoLGksaixsLG0sbjtsPXRoaXMucHJvcGVydGllcztpZighbC5sZW5ndGgpcmV0dXJuIHRoaXMuZnJvbnQ/Iih7fSkiOiJ7fSI7aWYodGhpcy5nZW5lcmF0ZWQpZm9yKG09MCxuPWwubGVuZ3RoO208bjttKyspe2g9bFttXTtpZihoIGluc3RhbmNlb2YgVCl0aHJvdyBuZXcgRXJyb3IoImNhbm5vdCBoYXZlIGFuIGltcGxpY2l0IHZhbHVlIGluIGFuIGltcGxpY2l0IG9iamVjdCIpfWM9YS5pbmRlbnQrPU8sZz10aGlzLmxhc3ROb25Db21tZW50KHRoaXMucHJvcGVydGllcyksbD1mdW5jdGlvbigpe3ZhciBoLGk7aT1bXTtmb3IoYj0wLGg9bC5sZW5ndGg7YjxoO2IrKylqPWxbYl0sZj1iPT09bC5sZW5ndGgtMT8iIjpqPT09Z3x8aiBpbnN0YW5jZW9mIGs/IlxuIjoiLFxuIixlPWogaW5zdGFuY2VvZiBrPyIiOmMsaiBpbnN0YW5jZW9mIFQmJmpbInRoaXMiXSYmKGo9bmV3IGQoai5wcm9wZXJ0aWVzWzBdLm5hbWUsaiwib2JqZWN0IikpLGogaW5zdGFuY2VvZiBrfHwoaiBpbnN0YW5jZW9mIGR8fChqPW5ldyBkKGosaiwib2JqZWN0IikpLChqLnZhcmlhYmxlLmJhc2V8fGoudmFyaWFibGUpLmFzS2V5PSEwKSxpLnB1c2goZStqLmNvbXBpbGUoYSx5KStmKTtyZXR1cm4gaX0oKSxsPWwuam9pbigiIiksaT0ieyIrKGwmJiJcbiIrbCsiXG4iK3RoaXMudGFiKSsifSI7cmV0dXJuIHRoaXMuZnJvbnQ/IigiK2krIikiOml9LGEucHJvdG90eXBlLmFzc2lnbnM9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7ZT10aGlzLnByb3BlcnRpZXM7Zm9yKGM9MCxkPWUubGVuZ3RoO2M8ZDtjKyspe2I9ZVtjXTtpZihiLmFzc2lnbnMoYSkpcmV0dXJuITB9cmV0dXJuITF9O3JldHVybiBhfSgpLGEuQXJyPWM9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3RoaXMub2JqZWN0cz1hfHxbXX1iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsib2JqZWN0cyJdLGEucHJvdG90eXBlLmZpbHRlckltcGxpY2l0T2JqZWN0cz1nLnByb3RvdHlwZS5maWx0ZXJJbXBsaWNpdE9iamVjdHMsYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkO2lmKCF0aGlzLm9iamVjdHMubGVuZ3RoKXJldHVybiJbXSI7YS5pbmRlbnQrPU8sZD10aGlzLmZpbHRlckltcGxpY2l0T2JqZWN0cyh0aGlzLm9iamVjdHMpO2lmKGI9TS5jb21waWxlU3BsYXR0ZWRBcnJheShhLGQpKXJldHVybiBiO2I9ZnVuY3Rpb24oKXt2YXIgYixlLGY7Zj1bXTtmb3IoYj0wLGU9ZC5sZW5ndGg7YjxlO2IrKyljPWRbYl0sZi5wdXNoKGMuY29tcGlsZShhLHYpKTtyZXR1cm4gZn0oKS5qb2luKCIsICIpO3JldHVybiBiLmluZGV4T2YoIlxuIik+PTA/IltcbiIrYS5pbmRlbnQrYisiXG4iK3RoaXMudGFiKyJdIjoiWyIrYisiXSJ9LGEucHJvdG90eXBlLmFzc2lnbnM9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7ZT10aGlzLm9iamVjdHM7Zm9yKGM9MCxkPWUubGVuZ3RoO2M8ZDtjKyspe2I9ZVtjXTtpZihiLmFzc2lnbnMoYSkpcmV0dXJuITB9cmV0dXJuITF9O3JldHVybiBhfSgpLGEuQ2xhc3M9aD1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiLGMpe3RoaXMudmFyaWFibGU9YSx0aGlzLnBhcmVudD1iLHRoaXMuYm9keT1jIT1udWxsP2M6bmV3IGYsdGhpcy5ib3VuZEZ1bmNzPVtdLHRoaXMuYm9keS5jbGFzc0JvZHk9ITB9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bInZhcmlhYmxlIiwicGFyZW50IiwiYm9keSJdLGEucHJvdG90eXBlLmRldGVybWluZU5hbWU9ZnVuY3Rpb24oKXt2YXIgYSxjO2lmKCF0aGlzLnZhcmlhYmxlKXJldHVybiBudWxsO2E9KGM9Xyh0aGlzLnZhcmlhYmxlLnByb3BlcnRpZXMpKT9jIGluc3RhbmNlb2YgYiYmYy5uYW1lLnZhbHVlOnRoaXMudmFyaWFibGUuYmFzZS52YWx1ZTtyZXR1cm4gYSYmKGE9by50ZXN0KGEpJiZhKX0sYS5wcm90b3R5cGUuc2V0Q29udGV4dD1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5ib2R5LnRyYXZlcnNlQ2hpbGRyZW4oITEsZnVuY3Rpb24oYil7aWYoYi5jbGFzc0JvZHkpcmV0dXJuITE7aWYoYiBpbnN0YW5jZW9mIHomJmIudmFsdWU9PT0idGhpcyIpcmV0dXJuIGIudmFsdWU9YTtpZihiIGluc3RhbmNlb2Ygail7Yi5rbGFzcz1hO2lmKGIuYm91bmQpcmV0dXJuIGIuY29udGV4dD1hfX0pfSxhLnByb3RvdHlwZS5hZGRCb3VuZEZ1bmN0aW9ucz1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGc7aWYodGhpcy5ib3VuZEZ1bmNzLmxlbmd0aCl7Zj10aGlzLmJvdW5kRnVuY3MsZz1bXTtmb3IoZD0wLGU9Zi5sZW5ndGg7ZDxlO2QrKyljPWZbZF0sYj1jLmNvbXBpbGUoYSksZy5wdXNoKHRoaXMuY3Rvci5ib2R5LnVuc2hpZnQobmV3IHooInRoaXMuIitiKyIgPSAiK2JlKCJiaW5kIikrIih0aGlzLiIrYisiLCB0aGlzKSIpKSk7cmV0dXJuIGd9fSxhLnByb3RvdHlwZS5hZGRQcm9wZXJ0aWVzPWZ1bmN0aW9uKGEsYyxlKXt2YXIgZixnLGgsaSxrO2s9YS5iYXNlLnByb3BlcnRpZXMuc2xpY2UoMCksaD1mdW5jdGlvbigpe3ZhciBhO2E9W107d2hpbGUoZj1rLnNoaWZ0KCkpe2lmKGYgaW5zdGFuY2VvZiBkKXtnPWYudmFyaWFibGUuYmFzZSxkZWxldGUgZi5jb250ZXh0LGk9Zi52YWx1ZTtpZihnLnZhbHVlPT09ImNvbnN0cnVjdG9yIil7aWYodGhpcy5jdG9yKXRocm93IG5ldyBFcnJvcigiY2Fubm90IGRlZmluZSBtb3JlIHRoYW4gb25lIGNvbnN0cnVjdG9yIGluIGEgY2xhc3MiKTtpZihpLmJvdW5kKXRocm93IG5ldyBFcnJvcigiY2Fubm90IGRlZmluZSBhIGNvbnN0cnVjdG9yIGFzIGEgYm91bmQgZnVuY3Rpb24iKTtpIGluc3RhbmNlb2Ygaj9mPXRoaXMuY3Rvcj1pOih0aGlzLmV4dGVybmFsQ3Rvcj1lLnNjb3BlLmZyZWVWYXJpYWJsZSgiY2xhc3MiKSxmPW5ldyBkKG5ldyB6KHRoaXMuZXh0ZXJuYWxDdG9yKSxpKSl9ZWxzZSBmLnZhcmlhYmxlWyJ0aGlzIl18fChmLnZhcmlhYmxlPW5ldyBUKG5ldyB6KGMpLFtuZXcgYihnLCJwcm90byIpXSkpLGkgaW5zdGFuY2VvZiBqJiZpLmJvdW5kJiYodGhpcy5ib3VuZEZ1bmNzLnB1c2goZyksaS5ib3VuZD0hMSl9YS5wdXNoKGYpfXJldHVybiBhfS5jYWxsKHRoaXMpO3JldHVybiBXKGgpfSxhLnByb3RvdHlwZS53YWxrQm9keT1mdW5jdGlvbihiLGMpe3JldHVybiB0aGlzLnRyYXZlcnNlQ2hpbGRyZW4oITEsYmkoZnVuY3Rpb24oZCl7dmFyIGUsZyxoLGksajtpZihkIGluc3RhbmNlb2YgYSlyZXR1cm4hMTtpZihkIGluc3RhbmNlb2YgZil7aj1lPWQuZXhwcmVzc2lvbnM7Zm9yKGc9MCxpPWoubGVuZ3RoO2c8aTtnKyspaD1qW2ddLGggaW5zdGFuY2VvZiBUJiZoLmlzT2JqZWN0KCEwKSYmKGVbZ109dGhpcy5hZGRQcm9wZXJ0aWVzKGgsYixjKSk7cmV0dXJuIGQuZXhwcmVzc2lvbnM9ZT0kKGUpfX0sdGhpcykpfSxhLnByb3RvdHlwZS5lbnN1cmVDb25zdHJ1Y3Rvcj1mdW5jdGlvbihhKXt0aGlzLmN0b3J8fCh0aGlzLmN0b3I9bmV3IGosdGhpcy5wYXJlbnQmJnRoaXMuY3Rvci5ib2R5LnB1c2gobmV3IHooIiIrYSsiLl9fc3VwZXJfXy5jb25zdHJ1Y3Rvci5hcHBseSh0aGlzLCBhcmd1bWVudHMpIikpLHRoaXMuZXh0ZXJuYWxDdG9yJiZ0aGlzLmN0b3IuYm9keS5wdXNoKG5ldyB6KCIiK3RoaXMuZXh0ZXJuYWxDdG9yKyIuYXBwbHkodGhpcywgYXJndW1lbnRzKSIpKSx0aGlzLmJvZHkuZXhwcmVzc2lvbnMudW5zaGlmdCh0aGlzLmN0b3IpKSx0aGlzLmN0b3IuY3Rvcj10aGlzLmN0b3IubmFtZT1hLHRoaXMuY3Rvci5rbGFzcz1udWxsO3JldHVybiB0aGlzLmN0b3Iubm9SZXR1cm49ITB9LGEucHJvdG90eXBlLmNvbXBpbGVOb2RlPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZSxmO2I9dGhpcy5kZXRlcm1pbmVOYW1lKCksZj1ifHx0aGlzLm5hbWV8fCJfQ2xhc3MiLGU9bmV3IHooZiksdGhpcy5zZXRDb250ZXh0KGYpLHRoaXMud2Fsa0JvZHkoZixhKSx0aGlzLmVuc3VyZUNvbnN0cnVjdG9yKGYpLHRoaXMucGFyZW50JiZ0aGlzLmJvZHkuZXhwcmVzc2lvbnMudW5zaGlmdChuZXcgbShlLHRoaXMucGFyZW50KSksdGhpcy5jdG9yIGluc3RhbmNlb2Yganx8dGhpcy5ib2R5LmV4cHJlc3Npb25zLnVuc2hpZnQodGhpcy5jdG9yKSx0aGlzLmJvZHkuZXhwcmVzc2lvbnMucHVzaChlKSx0aGlzLmFkZEJvdW5kRnVuY3Rpb25zKGEpLGM9bmV3IEYoaS53cmFwKHRoaXMuYm9keSksITApLHRoaXMudmFyaWFibGUmJihjPW5ldyBkKHRoaXMudmFyaWFibGUsYykpO3JldHVybiBjLmNvbXBpbGUoYSl9O3JldHVybiBhfSgpLGEuQXNzaWduPWQ9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjLGQpe3RoaXMudmFyaWFibGU9YSx0aGlzLnZhbHVlPWIsdGhpcy5jb250ZXh0PWMsdGhpcy5wYXJhbT1kJiZkLnBhcmFtfWJoKGEsZSksYS5wcm90b3R5cGUuTUVUSE9EX0RFRj0vXig/OihcUyspXC5wcm90b3R5cGVcLnxcUys/KT9cYihbJEEtWmEtel9dWyRcd1x4N2YtXHVmZmZmXSopJC8sYS5wcm90b3R5cGUuY2hpbGRyZW49WyJ2YXJpYWJsZSIsInZhbHVlIl0sYS5wcm90b3R5cGUuYXNzaWducz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpc1t0aGlzLmNvbnRleHQ9PT0ib2JqZWN0Ij8idmFsdWUiOiJ2YXJpYWJsZSJdLmFzc2lnbnMoYSl9LGEucHJvdG90eXBlLnVuZm9sZFNvYWs9ZnVuY3Rpb24oYSl7cmV0dXJuIGJkKGEsdGhpcywidmFyaWFibGUiKX0sYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZjtpZihiPXRoaXMudmFyaWFibGUgaW5zdGFuY2VvZiBUKXtpZih0aGlzLnZhcmlhYmxlLmlzQXJyYXkoKXx8dGhpcy52YXJpYWJsZS5pc09iamVjdCgpKXJldHVybiB0aGlzLmNvbXBpbGVQYXR0ZXJuTWF0Y2goYSk7aWYodGhpcy52YXJpYWJsZS5pc1NwbGljZSgpKXJldHVybiB0aGlzLmNvbXBpbGVTcGxpY2UoYSk7aWYoKGY9dGhpcy5jb250ZXh0KT09PSJ8fD0ifHxmPT09IiYmPSJ8fGY9PT0iPz0iKXJldHVybiB0aGlzLmNvbXBpbGVDb25kaXRpb25hbChhKX1kPXRoaXMudmFyaWFibGUuY29tcGlsZShhLHYpO2lmKCF0aGlzLmNvbnRleHQmJiF0aGlzLnZhcmlhYmxlLmlzQXNzaWduYWJsZSgpKXRocm93IFN5bnRheEVycm9yKCciJyt0aGlzLnZhcmlhYmxlLmNvbXBpbGUoYSkrJyIgY2Fubm90IGJlIGFzc2lnbmVkLicpO3RoaXMuY29udGV4dHx8YiYmKHRoaXMudmFyaWFibGUubmFtZXNwYWNlZHx8dGhpcy52YXJpYWJsZS5oYXNQcm9wZXJ0aWVzKCkpfHwodGhpcy5wYXJhbT9hLnNjb3BlLmFkZChkLCJ2YXIiKTphLnNjb3BlLmZpbmQoZCkpLHRoaXMudmFsdWUgaW5zdGFuY2VvZiBqJiYoYz10aGlzLk1FVEhPRF9ERUYuZXhlYyhkKSkmJih0aGlzLnZhbHVlLm5hbWU9Y1syXSxjWzFdJiYodGhpcy52YWx1ZS5rbGFzcz1jWzFdKSksZT10aGlzLnZhbHVlLmNvbXBpbGUoYSx2KTtpZih0aGlzLmNvbnRleHQ9PT0ib2JqZWN0IilyZXR1cm4iIitkKyI6ICIrZTtlPWQrKCIgIisodGhpcy5jb250ZXh0fHwiPSIpKyIgIikrZTtyZXR1cm4gYS5sZXZlbDw9dj9lOiIoIitlKyIpIn0sYS5wcm90b3R5cGUuY29tcGlsZVBhdHRlcm5NYXRjaD1mdW5jdGlvbihjKXt2YXIgZCxlLGYsZyxoLGksaixrLGwsbSxuLHAscSxyLHQsdSx4LEEsQixDLEQsRTtyPWMubGV2ZWw9PT15LHU9dGhpcy52YWx1ZSxsPXRoaXMudmFyaWFibGUuYmFzZS5vYmplY3RzO2lmKCEobT1sLmxlbmd0aCkpe2Y9dS5jb21waWxlKGMpO3JldHVybiBjLmxldmVsPj13PyIoIitmKyIpIjpmfWk9dGhpcy52YXJpYWJsZS5pc09iamVjdCgpO2lmKHImJm09PT0xJiYhKChrPWxbMF0paW5zdGFuY2VvZiBNKSl7ayBpbnN0YW5jZW9mIGE/KEI9ayxoPUIudmFyaWFibGUuYmFzZSxrPUIudmFsdWUpOmsuYmFzZSBpbnN0YW5jZW9mIEY/KEM9KG5ldyBUKGsudW53cmFwQWxsKCkpKS5jYWNoZVJlZmVyZW5jZShjKSxrPUNbMF0saD1DWzFdKTpoPWk/a1sidGhpcyJdP2sucHJvcGVydGllc1swXS5uYW1lOms6bmV3IHooMCksZD1vLnRlc3QoaC51bndyYXAoKS52YWx1ZXx8MCksdT1uZXcgVCh1KSx1LnByb3BlcnRpZXMucHVzaChuZXcoZD9iOnMpKGgpKTtyZXR1cm4obmV3IGEoayx1KSkuY29tcGlsZShjKX14PXUuY29tcGlsZShjLHYpLGU9W10scT0hMTtpZighby50ZXN0KHgpfHx0aGlzLnZhcmlhYmxlLmFzc2lnbnMoeCkpZS5wdXNoKCIiKyhuPWMuc2NvcGUuZnJlZVZhcmlhYmxlKCJyZWYiKSkrIiA9ICIreCkseD1uO2ZvcihnPTAsQT1sLmxlbmd0aDtnPEE7ZysrKXtrPWxbZ10saD1nLGkmJihrIGluc3RhbmNlb2YgYT8oRD1rLGg9RC52YXJpYWJsZS5iYXNlLGs9RC52YWx1ZSk6ay5iYXNlIGluc3RhbmNlb2YgRj8oRT0obmV3IFQoay51bndyYXBBbGwoKSkpLmNhY2hlUmVmZXJlbmNlKGMpLGs9RVswXSxoPUVbMV0pOmg9a1sidGhpcyJdP2sucHJvcGVydGllc1swXS5uYW1lOmspO2lmKCFxJiZrIGluc3RhbmNlb2YgTSl0PSIiK20rIiA8PSAiK3grIi5sZW5ndGggPyAiK2JlKCJzbGljZSIpKyIuY2FsbCgiK3grIiwgIitnLChwPW0tZy0xKT8oaj1jLnNjb3BlLmZyZWVWYXJpYWJsZSgiaSIpLHQrPSIsICIraisiID0gIit4KyIubGVuZ3RoIC0gIitwKyIpIDogKCIraisiID0gIitnKyIsIFtdKSIpOnQrPSIpIDogW10iLHQ9bmV3IHoodCkscT0iIitqKyIrKyI7ZWxzZXtpZihrIGluc3RhbmNlb2YgTSl7az1rLm5hbWUuY29tcGlsZShjKTt0aHJvdyBTeW50YXhFcnJvcigibXVsdGlwbGUgc3BsYXRzIGFyZSBkaXNhbGxvd2VkIGluIGFuIGFzc2lnbm1lbnQ6ICIraysiIC4uLiIpfXR5cGVvZiBoPT0ibnVtYmVyIj8oaD1uZXcgeihxfHxoKSxkPSExKTpkPWkmJm8udGVzdChoLnVud3JhcCgpLnZhbHVlfHwwKSx0PW5ldyBUKG5ldyB6KHgpLFtuZXcoZD9iOnMpKGgpXSl9ZS5wdXNoKChuZXcgYShrLHQsbnVsbCx7cGFyYW06dGhpcy5wYXJhbX0pKS5jb21waWxlKGMseSkpfXJ8fGUucHVzaCh4KSxmPWUuam9pbigiLCAiKTtyZXR1cm4gYy5sZXZlbDx2P2Y6IigiK2YrIikifSxhLnByb3RvdHlwZS5jb21waWxlQ29uZGl0aW9uYWw9ZnVuY3Rpb24oYil7dmFyIGMsZCxlO2U9dGhpcy52YXJpYWJsZS5jYWNoZVJlZmVyZW5jZShiKSxjPWVbMF0sZD1lWzFdO3JldHVybihuZXcgRCh0aGlzLmNvbnRleHQuc2xpY2UoMCwtMSksYyxuZXcgYShkLHRoaXMudmFsdWUsIj0iKSkpLmNvbXBpbGUoYil9LGEucHJvdG90eXBlLmNvbXBpbGVTcGxpY2U9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGgsaSxqLGssbCxtO2s9dGhpcy52YXJpYWJsZS5wcm9wZXJ0aWVzLnBvcCgpLnJhbmdlLGQ9ay5mcm9tLGg9ay50byxjPWsuZXhjbHVzaXZlLGc9dGhpcy52YXJpYWJsZS5jb21waWxlKGEpLGw9KGQhPW51bGw/ZC5jYWNoZShhLHcpOnZvaWQgMCl8fFsiMCIsIjAiXSxlPWxbMF0sZj1sWzFdLGg/KGQhPW51bGw/ZC5pc1NpbXBsZU51bWJlcigpOnZvaWQgMCkmJmguaXNTaW1wbGVOdW1iZXIoKT8oaD0raC5jb21waWxlKGEpLSArZixjfHwoaCs9MSkpOihoPWguY29tcGlsZShhKSsiIC0gIitmLGN8fChoKz0iICsgMSIpKTpoPSI5ZTkiLG09dGhpcy52YWx1ZS5jYWNoZShhLHYpLGk9bVswXSxqPW1bMV0sYj0iW10uc3BsaWNlLmFwcGx5KCIrZysiLCBbIitlKyIsICIraCsiXS5jb25jYXQoIitpKyIpKSwgIitqO3JldHVybiBhLmxldmVsPnk/IigiK2IrIikiOmJ9O3JldHVybiBhfSgpLGEuQ29kZT1qPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIsYyl7dGhpcy5wYXJhbXM9YXx8W10sdGhpcy5ib2R5PWJ8fG5ldyBmLHRoaXMuYm91bmQ9Yz09PSJib3VuZGZ1bmMiLHRoaXMuYm91bmQmJih0aGlzLmNvbnRleHQ9InRoaXMiKX1iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsicGFyYW1zIiwiYm9keSJdLGEucHJvdG90eXBlLmlzU3RhdGVtZW50PWZ1bmN0aW9uKCl7cmV0dXJuISF0aGlzLmN0b3J9LGEucHJvdG90eXBlLmp1bXBzPUIsYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsZSxmLGcsaCxpLGosayxsLG0sbixvLHAscixzLHUsdix3LHgseSxBO2Euc2NvcGU9bmV3IEsoYS5zY29wZSx0aGlzLmJvZHksdGhpcyksYS5zY29wZS5zaGFyZWQ9WChhLCJzaGFyZWRTY29wZSIpLGEuaW5kZW50Kz1PLGRlbGV0ZSBhLmJhcmUsbz1bXSxlPVtdLHg9dGhpcy5wYXJhbXM7Zm9yKHI9MCx1PXgubGVuZ3RoO3I8dTtyKyspe2o9eFtyXTtpZihqLnNwbGF0KXtqLm5hbWUudmFsdWUmJmEuc2NvcGUuYWRkKGoubmFtZS52YWx1ZSwidmFyIiksbD1uZXcgZChuZXcgVChuZXcgYyhmdW5jdGlvbigpe3ZhciBiLGMsZCxlO2Q9dGhpcy5wYXJhbXMsZT1bXTtmb3IoYj0wLGM9ZC5sZW5ndGg7YjxjO2IrKylpPWRbYl0sZS5wdXNoKGkuYXNSZWZlcmVuY2UoYSkpO3JldHVybiBlfS5jYWxsKHRoaXMpKSksbmV3IFQobmV3IHooImFyZ3VtZW50cyIpKSk7YnJlYWt9fXk9dGhpcy5wYXJhbXM7Zm9yKHM9MCx2PXkubGVuZ3RoO3M8djtzKyspaj15W3NdLGouaXNDb21wbGV4KCk/KG49az1qLmFzUmVmZXJlbmNlKGEpLGoudmFsdWUmJihuPW5ldyBEKCI/IixrLGoudmFsdWUpKSxlLnB1c2gobmV3IGQobmV3IFQoai5uYW1lKSxuLCI9Iix7cGFyYW06ITB9KSkpOihrPWosai52YWx1ZSYmKGg9bmV3IHooay5uYW1lLnZhbHVlKyIgPT0gbnVsbCIpLG49bmV3IGQobmV3IFQoai5uYW1lKSxqLnZhbHVlLCI9IiksZS5wdXNoKG5ldyBxKGgsbikpKSksbHx8by5wdXNoKGspO3A9dGhpcy5ib2R5LmlzRW1wdHkoKSxsJiZlLnVuc2hpZnQobCksZS5sZW5ndGgmJihBPXRoaXMuYm9keS5leHByZXNzaW9ucykudW5zaGlmdC5hcHBseShBLGUpO2lmKCFsKWZvcihmPTAsdz1vLmxlbmd0aDtmPHc7ZisrKW09b1tmXSxhLnNjb3BlLnBhcmFtZXRlcihvW2ZdPW0uY29tcGlsZShhKSk7IXAmJiF0aGlzLm5vUmV0dXJuJiZ0aGlzLmJvZHkubWFrZVJldHVybigpLGc9YS5pbmRlbnQsYj0iZnVuY3Rpb24iLHRoaXMuY3RvciYmKGIrPSIgIit0aGlzLm5hbWUpLGIrPSIoIitvLmpvaW4oIiwgIikrIikgeyIsdGhpcy5ib2R5LmlzRW1wdHkoKXx8KGIrPSJcbiIrdGhpcy5ib2R5LmNvbXBpbGVXaXRoRGVjbGFyYXRpb25zKGEpKyJcbiIrdGhpcy50YWIpLGIrPSJ9IjtpZih0aGlzLmN0b3IpcmV0dXJuIHRoaXMudGFiK2I7aWYodGhpcy5ib3VuZClyZXR1cm4gYmUoImJpbmQiKSsoIigiK2IrIiwgIit0aGlzLmNvbnRleHQrIikiKTtyZXR1cm4gdGhpcy5mcm9udHx8YS5sZXZlbD49dD8iKCIrYisiKSI6Yn0sYS5wcm90b3R5cGUudHJhdmVyc2VDaGlsZHJlbj1mdW5jdGlvbihiLGMpe2lmKGIpcmV0dXJuIGEuX19zdXBlcl9fLnRyYXZlcnNlQ2hpbGRyZW4uY2FsbCh0aGlzLGIsYyl9O3JldHVybiBhfSgpLGEuUGFyYW09RT1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiLGMpe3RoaXMubmFtZT1hLHRoaXMudmFsdWU9Yix0aGlzLnNwbGF0PWN9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bIm5hbWUiLCJ2YWx1ZSJdLGEucHJvdG90eXBlLmNvbXBpbGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMubmFtZS5jb21waWxlKGEsdil9LGEucHJvdG90eXBlLmFzUmVmZXJlbmNlPWZ1bmN0aW9uKGEpe3ZhciBiO2lmKHRoaXMucmVmZXJlbmNlKXJldHVybiB0aGlzLnJlZmVyZW5jZTtiPXRoaXMubmFtZSxiWyJ0aGlzIl0/KGI9Yi5wcm9wZXJ0aWVzWzBdLm5hbWUsYi52YWx1ZS5yZXNlcnZlZCYmKGI9bmV3IHooIl8iK2IudmFsdWUpKSk6Yi5pc0NvbXBsZXgoKSYmKGI9bmV3IHooYS5zY29wZS5mcmVlVmFyaWFibGUoImFyZyIpKSksYj1uZXcgVChiKSx0aGlzLnNwbGF0JiYoYj1uZXcgTShiKSk7cmV0dXJuIHRoaXMucmVmZXJlbmNlPWJ9LGEucHJvdG90eXBlLmlzQ29tcGxleD1mdW5jdGlvbigpe3JldHVybiB0aGlzLm5hbWUuaXNDb21wbGV4KCl9O3JldHVybiBhfSgpLGEuU3BsYXQ9TT1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7dGhpcy5uYW1lPWEuY29tcGlsZT9hOm5ldyB6KGEpfWJoKGEsZSksYS5wcm90b3R5cGUuY2hpbGRyZW49WyJuYW1lIl0sYS5wcm90b3R5cGUuaXNBc3NpZ25hYmxlPVYsYS5wcm90b3R5cGUuYXNzaWducz1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5uYW1lLmFzc2lnbnMoYSl9LGEucHJvdG90eXBlLmNvbXBpbGU9ZnVuY3Rpb24oYSl7cmV0dXJuIHRoaXMuaW5kZXghPW51bGw/dGhpcy5jb21waWxlUGFyYW0oYSk6dGhpcy5uYW1lLmNvbXBpbGUoYSl9LGEuY29tcGlsZVNwbGF0dGVkQXJyYXk9ZnVuY3Rpb24oYixjLGQpe3ZhciBlLGYsZyxoLGksaixrO2k9LTE7d2hpbGUoKGo9Y1srK2ldKSYmIShqIGluc3RhbmNlb2YgYSkpY29udGludWU7aWYoaT49Yy5sZW5ndGgpcmV0dXJuIiI7aWYoYy5sZW5ndGg9PT0xKXtnPWNbMF0uY29tcGlsZShiLHYpO2lmKGQpcmV0dXJuIGc7cmV0dXJuIiIrYmUoInNsaWNlIikrIi5jYWxsKCIrZysiKSJ9ZT1jLnNsaWNlKGkpO2ZvcihoPTAsaz1lLmxlbmd0aDtoPGs7aCsrKWo9ZVtoXSxnPWouY29tcGlsZShiLHYpLGVbaF09aiBpbnN0YW5jZW9mIGE/IiIrYmUoInNsaWNlIikrIi5jYWxsKCIrZysiKSI6IlsiK2crIl0iO2lmKGk9PT0wKXJldHVybiBlWzBdKygiLmNvbmNhdCgiK2Uuc2xpY2UoMSkuam9pbigiLCAiKSsiKSIpO2Y9ZnVuY3Rpb24oKXt2YXIgYSxkLGUsZjtlPWMuc2xpY2UoMCxpKSxmPVtdO2ZvcihhPTAsZD1lLmxlbmd0aDthPGQ7YSsrKWo9ZVthXSxmLnB1c2goai5jb21waWxlKGIsdikpO3JldHVybiBmfSgpO3JldHVybiJbIitmLmpvaW4oIiwgIikrIl0uY29uY2F0KCIrZS5qb2luKCIsICIpKyIpIn07cmV0dXJuIGF9KCksYS5XaGlsZT1VPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIpe3RoaXMuY29uZGl0aW9uPShiIT1udWxsP2IuaW52ZXJ0OnZvaWQgMCk/YS5pbnZlcnQoKTphLHRoaXMuZ3VhcmQ9YiE9bnVsbD9iLmd1YXJkOnZvaWQgMH1iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsiY29uZGl0aW9uIiwiZ3VhcmQiLCJib2R5Il0sYS5wcm90b3R5cGUuaXNTdGF0ZW1lbnQ9VixhLnByb3RvdHlwZS5tYWtlUmV0dXJuPWZ1bmN0aW9uKCl7dGhpcy5yZXR1cm5zPSEwO3JldHVybiB0aGlzfSxhLnByb3RvdHlwZS5hZGRCb2R5PWZ1bmN0aW9uKGEpe3RoaXMuYm9keT1hO3JldHVybiB0aGlzfSxhLnByb3RvdHlwZS5qdW1wcz1mdW5jdGlvbigpe3ZhciBhLGIsYyxkO2E9dGhpcy5ib2R5LmV4cHJlc3Npb25zO2lmKCFhLmxlbmd0aClyZXR1cm4hMTtmb3IoYz0wLGQ9YS5sZW5ndGg7YzxkO2MrKyl7Yj1hW2NdO2lmKGIuanVtcHMoe2xvb3A6ITB9KSlyZXR1cm4gYn1yZXR1cm4hMX0sYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7YS5pbmRlbnQrPU8sZT0iIixiPXRoaXMuYm9keTtpZihiLmlzRW1wdHkoKSliPSIiO2Vsc2V7aWYoYS5sZXZlbD55fHx0aGlzLnJldHVybnMpZD1hLnNjb3BlLmZyZWVWYXJpYWJsZSgicmVzdWx0cyIpLGU9IiIrdGhpcy50YWIrZCsiID0gW107XG4iLGImJihiPUcud3JhcChkLGIpKTt0aGlzLmd1YXJkJiYoYj1mLndyYXAoW25ldyBxKHRoaXMuZ3VhcmQsYildKSksYj0iXG4iK2IuY29tcGlsZShhLHkpKyJcbiIrdGhpcy50YWJ9Yz1lK3RoaXMudGFiKygid2hpbGUgKCIrdGhpcy5jb25kaXRpb24uY29tcGlsZShhLHgpKyIpIHsiK2IrIn0iKSx0aGlzLnJldHVybnMmJihjKz0iXG4iK3RoaXMudGFiKyJyZXR1cm4gIitkKyI7Iik7cmV0dXJuIGN9O3JldHVybiBhfSgpLGEuT3A9RD1mdW5jdGlvbigpe2Z1bmN0aW9uIGMoYixjLGQsZSl7dmFyIGY7aWYoYj09PSJpbiIpcmV0dXJuIG5ldyByKGMsZCk7aWYoYj09PSJkbyIpe2Y9bmV3IGcoYyxjLnBhcmFtc3x8W10pLGZbImRvIl09ITA7cmV0dXJuIGZ9aWYoYj09PSJuZXciKXtpZihjIGluc3RhbmNlb2YgZyYmIWNbImRvIl0pcmV0dXJuIGMubmV3SW5zdGFuY2UoKTtpZihjIGluc3RhbmNlb2YgaiYmYy5ib3VuZHx8Y1siZG8iXSljPW5ldyBGKGMpfXRoaXMub3BlcmF0b3I9YVtiXXx8Yix0aGlzLmZpcnN0PWMsdGhpcy5zZWNvbmQ9ZCx0aGlzLmZsaXA9ISFlO3JldHVybiB0aGlzfXZhciBhLGI7YmgoYyxlKSxhPXsiPT0iOiI9PT0iLCIhPSI6IiE9PSIsb2Y6ImluIn0sYj17IiE9PSI6Ij09PSIsIj09PSI6IiE9PSJ9LGMucHJvdG90eXBlLmNoaWxkcmVuPVsiZmlyc3QiLCJzZWNvbmQiXSxjLnByb3RvdHlwZS5pc1NpbXBsZU51bWJlcj1CLGMucHJvdG90eXBlLmlzVW5hcnk9ZnVuY3Rpb24oKXtyZXR1cm4hdGhpcy5zZWNvbmR9LGMucHJvdG90eXBlLmlzQ2hhaW5hYmxlPWZ1bmN0aW9uKCl7dmFyIGE7cmV0dXJuKGE9dGhpcy5vcGVyYXRvcik9PT0iPCJ8fGE9PT0iPiJ8fGE9PT0iPj0ifHxhPT09Ijw9Inx8YT09PSI9PT0ifHxhPT09IiE9PSJ9LGMucHJvdG90eXBlLmludmVydD1mdW5jdGlvbigpe3ZhciBhLGQsZSxmLGc7aWYodGhpcy5pc0NoYWluYWJsZSgpJiZ0aGlzLmZpcnN0LmlzQ2hhaW5hYmxlKCkpe2E9ITAsZD10aGlzO3doaWxlKGQmJmQub3BlcmF0b3IpYSYmKGE9ZC5vcGVyYXRvciBpbiBiKSxkPWQuZmlyc3Q7aWYoIWEpcmV0dXJuKG5ldyBGKHRoaXMpKS5pbnZlcnQoKTtkPXRoaXM7d2hpbGUoZCYmZC5vcGVyYXRvcilkLmludmVydD0hZC5pbnZlcnQsZC5vcGVyYXRvcj1iW2Qub3BlcmF0b3JdLGQ9ZC5maXJzdDtyZXR1cm4gdGhpc31pZihmPWJbdGhpcy5vcGVyYXRvcl0pe3RoaXMub3BlcmF0b3I9Zix0aGlzLmZpcnN0LnVud3JhcCgpaW5zdGFuY2VvZiBjJiZ0aGlzLmZpcnN0LmludmVydCgpO3JldHVybiB0aGlzfXJldHVybiB0aGlzLnNlY29uZD8obmV3IEYodGhpcykpLmludmVydCgpOnRoaXMub3BlcmF0b3I9PT0iISImJihlPXRoaXMuZmlyc3QudW53cmFwKCkpaW5zdGFuY2VvZiBjJiYoKGc9ZS5vcGVyYXRvcik9PT0iISJ8fGc9PT0iaW4ifHxnPT09Imluc3RhbmNlb2YiKT9lOm5ldyBjKCIhIix0aGlzKX0sYy5wcm90b3R5cGUudW5mb2xkU29haz1mdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4oKGI9dGhpcy5vcGVyYXRvcik9PT0iKysifHxiPT09Ii0tInx8Yj09PSJkZWxldGUiKSYmYmQoYSx0aGlzLCJmaXJzdCIpfSxjLnByb3RvdHlwZS5jb21waWxlTm9kZT1mdW5jdGlvbihhKXt2YXIgYjtpZih0aGlzLmlzVW5hcnkoKSlyZXR1cm4gdGhpcy5jb21waWxlVW5hcnkoYSk7aWYodGhpcy5pc0NoYWluYWJsZSgpJiZ0aGlzLmZpcnN0LmlzQ2hhaW5hYmxlKCkpcmV0dXJuIHRoaXMuY29tcGlsZUNoYWluKGEpO2lmKHRoaXMub3BlcmF0b3I9PT0iPyIpcmV0dXJuIHRoaXMuY29tcGlsZUV4aXN0ZW5jZShhKTt0aGlzLmZpcnN0LmZyb250PXRoaXMuZnJvbnQsYj10aGlzLmZpcnN0LmNvbXBpbGUoYSx3KSsiICIrdGhpcy5vcGVyYXRvcisiICIrdGhpcy5zZWNvbmQuY29tcGlsZShhLHcpO3JldHVybiBhLmxldmVsPD13P2I6IigiK2IrIikifSxjLnByb3RvdHlwZS5jb21waWxlQ2hhaW49ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7ZT10aGlzLmZpcnN0LnNlY29uZC5jYWNoZShhKSx0aGlzLmZpcnN0LnNlY29uZD1lWzBdLGQ9ZVsxXSxjPXRoaXMuZmlyc3QuY29tcGlsZShhLHcpLGI9IiIrYysiICIrKHRoaXMuaW52ZXJ0PyImJiI6Inx8IikrIiAiK2QuY29tcGlsZShhKSsiICIrdGhpcy5vcGVyYXRvcisiICIrdGhpcy5zZWNvbmQuY29tcGlsZShhLHcpO3JldHVybiIoIitiKyIpIn0sYy5wcm90b3R5cGUuY29tcGlsZUV4aXN0ZW5jZT1mdW5jdGlvbihhKXt2YXIgYixjO3RoaXMuZmlyc3QuaXNDb21wbGV4KCk/KGM9bmV3IHooYS5zY29wZS5mcmVlVmFyaWFibGUoInJlZiIpKSxiPW5ldyBGKG5ldyBkKGMsdGhpcy5maXJzdCkpKTooYj10aGlzLmZpcnN0LGM9Yik7cmV0dXJuKG5ldyBxKG5ldyBsKGIpLGMse3R5cGU6ImlmIn0pKS5hZGRFbHNlKHRoaXMuc2Vjb25kKS5jb21waWxlKGEpfSxjLnByb3RvdHlwZS5jb21waWxlVW5hcnk9ZnVuY3Rpb24oYSl7dmFyIGIsZDtkPVtiPXRoaXMub3BlcmF0b3JdLChiPT09Im5ldyJ8fGI9PT0idHlwZW9mInx8Yj09PSJkZWxldGUifHwoYj09PSIrInx8Yj09PSItIikmJnRoaXMuZmlyc3QgaW5zdGFuY2VvZiBjJiZ0aGlzLmZpcnN0Lm9wZXJhdG9yPT09YikmJmQucHVzaCgiICIpLGI9PT0ibmV3IiYmdGhpcy5maXJzdC5pc1N0YXRlbWVudChhKSYmKHRoaXMuZmlyc3Q9bmV3IEYodGhpcy5maXJzdCkpLGQucHVzaCh0aGlzLmZpcnN0LmNvbXBpbGUoYSx3KSksdGhpcy5mbGlwJiZkLnJldmVyc2UoKTtyZXR1cm4gZC5qb2luKCIiKX0sYy5wcm90b3R5cGUudG9TdHJpbmc9ZnVuY3Rpb24oYSl7cmV0dXJuIGMuX19zdXBlcl9fLnRvU3RyaW5nLmNhbGwodGhpcyxhLHRoaXMuY29uc3RydWN0b3IubmFtZSsiICIrdGhpcy5vcGVyYXRvcil9O3JldHVybiBjfSgpLGEuSW49cj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXt0aGlzLm9iamVjdD1hLHRoaXMuYXJyYXk9Yn1iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsib2JqZWN0IiwiYXJyYXkiXSxhLnByb3RvdHlwZS5pbnZlcnQ9QSxhLnByb3RvdHlwZS5jb21waWxlTm9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5hcnJheSBpbnN0YW5jZW9mIFQmJnRoaXMuYXJyYXkuaXNBcnJheSgpP3RoaXMuY29tcGlsZU9yVGVzdChhKTp0aGlzLmNvbXBpbGVMb29wVGVzdChhKX0sYS5wcm90b3R5cGUuY29tcGlsZU9yVGVzdD1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpLGo7aT10aGlzLm9iamVjdC5jYWNoZShhLHcpLGc9aVswXSxmPWlbMV0saj10aGlzLm5lZ2F0ZWQ/WyIgIT09ICIsIiAmJiAiXTpbIiA9PT0gIiwiIHx8ICJdLGI9alswXSxjPWpbMV0saD1mdW5jdGlvbigpe3ZhciBjLGgsaTtoPXRoaXMuYXJyYXkuYmFzZS5vYmplY3RzLGk9W107Zm9yKGQ9MCxjPWgubGVuZ3RoO2Q8YztkKyspZT1oW2RdLGkucHVzaCgoZD9mOmcpK2IrZS5jb21waWxlKGEsdykpO3JldHVybiBpfS5jYWxsKHRoaXMpO2lmKGgubGVuZ3RoPT09MClyZXR1cm4iZmFsc2UiO2g9aC5qb2luKGMpO3JldHVybiBhLmxldmVsPHc/aDoiKCIraCsiKSJ9LGEucHJvdG90eXBlLmNvbXBpbGVMb29wVGVzdD1mdW5jdGlvbihhKXt2YXIgYixjLGQsZTtlPXRoaXMub2JqZWN0LmNhY2hlKGEsdiksZD1lWzBdLGM9ZVsxXSxiPWJlKCJpbmRleE9mIikrKCIuY2FsbCgiK3RoaXMuYXJyYXkuY29tcGlsZShhLHYpKyIsICIrYysiKSAiKSsodGhpcy5uZWdhdGVkPyI8IDAiOiI+PSAwIik7aWYoZD09PWMpcmV0dXJuIGI7Yj1kKyIsICIrYjtyZXR1cm4gYS5sZXZlbDx2P2I6IigiK2IrIikifSxhLnByb3RvdHlwZS50b1N0cmluZz1mdW5jdGlvbihiKXtyZXR1cm4gYS5fX3N1cGVyX18udG9TdHJpbmcuY2FsbCh0aGlzLGIsdGhpcy5jb25zdHJ1Y3Rvci5uYW1lKyh0aGlzLm5lZ2F0ZWQ/IiEiOiIiKSl9O3JldHVybiBhfSgpLGEuVHJ5PVI9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjLGQpe3RoaXMuYXR0ZW1wdD1hLHRoaXMuZXJyb3I9Yix0aGlzLnJlY292ZXJ5PWMsdGhpcy5lbnN1cmU9ZH1iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsiYXR0ZW1wdCIsInJlY292ZXJ5IiwiZW5zdXJlIl0sYS5wcm90b3R5cGUuaXNTdGF0ZW1lbnQ9VixhLnByb3RvdHlwZS5qdW1wcz1mdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4gdGhpcy5hdHRlbXB0Lmp1bXBzKGEpfHwoKGI9dGhpcy5yZWNvdmVyeSkhPW51bGw/Yi5qdW1wcyhhKTp2b2lkIDApfSxhLnByb3RvdHlwZS5tYWtlUmV0dXJuPWZ1bmN0aW9uKCl7dGhpcy5hdHRlbXB0JiYodGhpcy5hdHRlbXB0PXRoaXMuYXR0ZW1wdC5tYWtlUmV0dXJuKCkpLHRoaXMucmVjb3ZlcnkmJih0aGlzLnJlY292ZXJ5PXRoaXMucmVjb3ZlcnkubWFrZVJldHVybigpKTtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYzthLmluZGVudCs9TyxjPXRoaXMuZXJyb3I/IiAoIit0aGlzLmVycm9yLmNvbXBpbGUoYSkrIikgIjoiICIsYj10aGlzLnJlY292ZXJ5PyIgY2F0Y2giK2MrIntcbiIrdGhpcy5yZWNvdmVyeS5jb21waWxlKGEseSkrIlxuIit0aGlzLnRhYisifSI6IXRoaXMuZW5zdXJlJiYhdGhpcy5yZWNvdmVyeT8iIGNhdGNoIChfZSkge30iOnZvaWQgMDtyZXR1cm4iIit0aGlzLnRhYisidHJ5IHtcbiIrdGhpcy5hdHRlbXB0LmNvbXBpbGUoYSx5KSsiXG4iK3RoaXMudGFiKyJ9IisoYnx8IiIpKyh0aGlzLmVuc3VyZT8iIGZpbmFsbHkge1xuIit0aGlzLmVuc3VyZS5jb21waWxlKGEseSkrIlxuIit0aGlzLnRhYisifSI6IiIpfTtyZXR1cm4gYX0oKSxhLlRocm93PVE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3RoaXMuZXhwcmVzc2lvbj1hfWJoKGEsZSksYS5wcm90b3R5cGUuY2hpbGRyZW49WyJleHByZXNzaW9uIl0sYS5wcm90b3R5cGUuaXNTdGF0ZW1lbnQ9VixhLnByb3RvdHlwZS5qdW1wcz1CLGEucHJvdG90eXBlLm1ha2VSZXR1cm49UCxhLnByb3RvdHlwZS5jb21waWxlTm9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy50YWIrKCJ0aHJvdyAiK3RoaXMuZXhwcmVzc2lvbi5jb21waWxlKGEpKyI7Iil9O3JldHVybiBhfSgpLGEuRXhpc3RlbmNlPWw9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEpe3RoaXMuZXhwcmVzc2lvbj1hfWJoKGEsZSksYS5wcm90b3R5cGUuY2hpbGRyZW49WyJleHByZXNzaW9uIl0sYS5wcm90b3R5cGUuaW52ZXJ0PUEsYS5wcm90b3R5cGUuY29tcGlsZU5vZGU9ZnVuY3Rpb24oYSl7dmFyIGIsYztiPXRoaXMuZXhwcmVzc2lvbi5jb21waWxlKGEsdyksYj1vLnRlc3QoYikmJiFhLnNjb3BlLmNoZWNrKGIpP3RoaXMubmVnYXRlZD8idHlwZW9mICIrYisnID09PSAidW5kZWZpbmVkIiB8fCAnK2IrIiA9PT0gbnVsbCI6InR5cGVvZiAiK2IrJyAhPT0gInVuZGVmaW5lZCIgJiYgJytiKyIgIT09IG51bGwiOihjPXRoaXMubmVnYXRlZD8iPT0iOiIhPSIsIiIrYisiICIrYysiIG51bGwiKTtyZXR1cm4gYS5sZXZlbDw9dT9iOiIoIitiKyIpIn07cmV0dXJuIGF9KCksYS5QYXJlbnM9Rj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSl7dGhpcy5ib2R5PWF9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bImJvZHkiXSxhLnByb3RvdHlwZS51bndyYXA9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ib2R5fSxhLnByb3RvdHlwZS5pc0NvbXBsZXg9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5ib2R5LmlzQ29tcGxleCgpfSxhLnByb3RvdHlwZS5tYWtlUmV0dXJuPWZ1bmN0aW9uKCl7cmV0dXJuIHRoaXMuYm9keS5tYWtlUmV0dXJuKCl9LGEucHJvdG90eXBlLmNvbXBpbGVOb2RlPWZ1bmN0aW9uKGEpe3ZhciBiLGMsZDtkPXRoaXMuYm9keS51bndyYXAoKTtpZihkIGluc3RhbmNlb2YgVCYmZC5pc0F0b21pYygpKXtkLmZyb250PXRoaXMuZnJvbnQ7cmV0dXJuIGQuY29tcGlsZShhKX1jPWQuY29tcGlsZShhLHgpLGI9YS5sZXZlbDx3JiYoZCBpbnN0YW5jZW9mIER8fGQgaW5zdGFuY2VvZiBnfHxkIGluc3RhbmNlb2YgbiYmZC5yZXR1cm5zKTtyZXR1cm4gYj9jOiIoIitjKyIpIn07cmV0dXJuIGF9KCksYS5Gb3I9bj1mdW5jdGlvbigpe2Z1bmN0aW9uIGEoYSxiKXt2YXIgYzt0aGlzLnNvdXJjZT1iLnNvdXJjZSx0aGlzLmd1YXJkPWIuZ3VhcmQsdGhpcy5zdGVwPWIuc3RlcCx0aGlzLm5hbWU9Yi5uYW1lLHRoaXMuaW5kZXg9Yi5pbmRleCx0aGlzLmJvZHk9Zi53cmFwKFthXSksdGhpcy5vd249ISFiLm93bix0aGlzLm9iamVjdD0hIWIub2JqZWN0LHRoaXMub2JqZWN0JiYoYz1bdGhpcy5pbmRleCx0aGlzLm5hbWVdLHRoaXMubmFtZT1jWzBdLHRoaXMuaW5kZXg9Y1sxXSk7aWYodGhpcy5pbmRleCBpbnN0YW5jZW9mIFQpdGhyb3cgU3ludGF4RXJyb3IoImluZGV4IGNhbm5vdCBiZSBhIHBhdHRlcm4gbWF0Y2hpbmcgZXhwcmVzc2lvbiIpO3RoaXMucmFuZ2U9dGhpcy5zb3VyY2UgaW5zdGFuY2VvZiBUJiZ0aGlzLnNvdXJjZS5iYXNlIGluc3RhbmNlb2YgSCYmIXRoaXMuc291cmNlLnByb3BlcnRpZXMubGVuZ3RoLHRoaXMucGF0dGVybj10aGlzLm5hbWUgaW5zdGFuY2VvZiBUO2lmKHRoaXMucmFuZ2UmJnRoaXMuaW5kZXgpdGhyb3cgU3ludGF4RXJyb3IoImluZGV4ZXMgZG8gbm90IGFwcGx5IHRvIHJhbmdlIGxvb3BzIik7aWYodGhpcy5yYW5nZSYmdGhpcy5wYXR0ZXJuKXRocm93IFN5bnRheEVycm9yKCJjYW5ub3QgcGF0dGVybiBtYXRjaCBvdmVyIHJhbmdlIGxvb3BzIik7dGhpcy5yZXR1cm5zPSExfWJoKGEsZSksYS5wcm90b3R5cGUuY2hpbGRyZW49WyJib2R5Iiwic291cmNlIiwiZ3VhcmQiLCJzdGVwIl0sYS5wcm90b3R5cGUuaXNTdGF0ZW1lbnQ9VixhLnByb3RvdHlwZS5qdW1wcz1VLnByb3RvdHlwZS5qdW1wcyxhLnByb3RvdHlwZS5tYWtlUmV0dXJuPWZ1bmN0aW9uKCl7dGhpcy5yZXR1cm5zPSEwO3JldHVybiB0aGlzfSxhLnByb3RvdHlwZS5jb21waWxlTm9kZT1mdW5jdGlvbihhKXt2YXIgYixjLGUsZyxoLGksaixrLGwsbSxuLHAscixzLHQsdSx4LEEsQixDLEQsRSxGO2I9Zi53cmFwKFt0aGlzLmJvZHldKSxsPShGPV8oYi5leHByZXNzaW9ucykpIT1udWxsP0YuanVtcHMoKTp2b2lkIDAsbCYmbCBpbnN0YW5jZW9mIEkmJih0aGlzLnJldHVybnM9ITEpLEE9dGhpcy5yYW5nZT90aGlzLnNvdXJjZS5iYXNlOnRoaXMuc291cmNlLHg9YS5zY29wZSxuPXRoaXMubmFtZSYmdGhpcy5uYW1lLmNvbXBpbGUoYSx2KSxqPXRoaXMuaW5kZXgmJnRoaXMuaW5kZXguY29tcGlsZShhLHYpLG4mJiF0aGlzLnBhdHRlcm4mJnguZmluZChuLHtpbW1lZGlhdGU6ITB9KSxqJiZ4LmZpbmQoaix7aW1tZWRpYXRlOiEwfSksdGhpcy5yZXR1cm5zJiYodT14LmZyZWVWYXJpYWJsZSgicmVzdWx0cyIpKSxrPSh0aGlzLnJhbmdlP246ail8fHguZnJlZVZhcmlhYmxlKCJpIiksdGhpcy5zdGVwJiYhdGhpcy5yYW5nZSYmKEM9eC5mcmVlVmFyaWFibGUoInN0ZXAiKSksdGhpcy5wYXR0ZXJuJiYobj1rKSxFPSIiLGg9IiIsYz0iIixpPXRoaXMudGFiK08sdGhpcy5yYW5nZT9lPUEuY29tcGlsZShiYShhLHtpbmRleDprLHN0ZXA6dGhpcy5zdGVwfSkpOihEPXRoaXMuc291cmNlLmNvbXBpbGUoYSx2KSwobnx8dGhpcy5vd24pJiYhby50ZXN0KEQpJiYoYz0iIit0aGlzLnRhYisocj14LmZyZWVWYXJpYWJsZSgicmVmIikpKyIgPSAiK0QrIjtcbiIsRD1yKSxuJiYhdGhpcy5wYXR0ZXJuJiYocD0iIituKyIgPSAiK0QrIlsiK2srIl0iKSx0aGlzLm9iamVjdHx8KG09eC5mcmVlVmFyaWFibGUoImxlbiIpLGc9IiIraysiID0gMCwgIittKyIgPSAiK0QrIi5sZW5ndGgiKyh0aGlzLnN0ZXA/IiwgIitDKyIgPSAiK3RoaXMuc3RlcC5jb21waWxlKGEsdyk6IiIpLEI9dGhpcy5zdGVwPyIiK2srIiArPSAiK0M6IiIraysiKysiLGU9IiIrZysiOyAiK2srIiA8ICIrbSsiOyAiK0IpKSx0aGlzLnJldHVybnMmJihzPSIiK3RoaXMudGFiK3UrIiA9IFtdO1xuIix0PSJcbiIrdGhpcy50YWIrInJldHVybiAiK3UrIjsiLGI9Ry53cmFwKHUsYikpLHRoaXMuZ3VhcmQmJihiPWYud3JhcChbbmV3IHEodGhpcy5ndWFyZCxiKV0pKSx0aGlzLnBhdHRlcm4mJmIuZXhwcmVzc2lvbnMudW5zaGlmdChuZXcgZCh0aGlzLm5hbWUsbmV3IHooIiIrRCsiWyIraysiXSIpKSksYys9dGhpcy5wbHVja0RpcmVjdENhbGwoYSxiKSxwJiYoRT0iXG4iK2krcCsiOyIpLHRoaXMub2JqZWN0JiYoZT0iIitrKyIgaW4gIitELHRoaXMub3duJiYoaD0iXG4iK2krImlmICghIitiZSgiaGFzUHJvcCIpKyIuY2FsbCgiK0QrIiwgIitrKyIpKSBjb250aW51ZTsiKSksYj1iLmNvbXBpbGUoYmEoYSx7aW5kZW50Oml9KSx5KSxiJiYoYj0iXG4iK2IrIlxuIik7cmV0dXJuIiIrYysoc3x8IiIpK3RoaXMudGFiKyJmb3IgKCIrZSsiKSB7IitoK0UrYit0aGlzLnRhYisifSIrKHR8fCIiKX0sYS5wcm90b3R5cGUucGx1Y2tEaXJlY3RDYWxsPWZ1bmN0aW9uKGEsYil7dmFyIGMsZSxmLGgsaSxrLGwsbSxuLG8scCxxLHIscztlPSIiLG49Yi5leHByZXNzaW9ucztmb3IoaT0wLG09bi5sZW5ndGg7aTxtO2krKyl7Zj1uW2ldLGY9Zi51bndyYXBBbGwoKTtpZighKGYgaW5zdGFuY2VvZiBnKSljb250aW51ZTtsPWYudmFyaWFibGUudW53cmFwQWxsKCk7aWYoIShsIGluc3RhbmNlb2Yganx8bCBpbnN0YW5jZW9mIFQmJigobz1sLmJhc2UpIT1udWxsP28udW53cmFwQWxsKCk6dm9pZCAwKWluc3RhbmNlb2YgaiYmbC5wcm9wZXJ0aWVzLmxlbmd0aD09PTEmJigocD0ocT1sLnByb3BlcnRpZXNbMF0ubmFtZSkhPW51bGw/cS52YWx1ZTp2b2lkIDApPT09ImNhbGwifHxwPT09ImFwcGx5IikpKWNvbnRpbnVlO2g9KChyPWwuYmFzZSkhPW51bGw/ci51bndyYXBBbGwoKTp2b2lkIDApfHxsLGs9bmV3IHooYS5zY29wZS5mcmVlVmFyaWFibGUoImZuIikpLGM9bmV3IFQoayksbC5iYXNlJiYocz1bYyxsXSxsLmJhc2U9c1swXSxjPXNbMV0sYXJncy51bnNoaWZ0KG5ldyB6KCJ0aGlzIikpKSxiLmV4cHJlc3Npb25zW2ldPW5ldyBnKGMsZi5hcmdzKSxlKz10aGlzLnRhYisobmV3IGQoayxoKSkuY29tcGlsZShhLHkpKyI7XG4ifXJldHVybiBlfTtyZXR1cm4gYX0oKSxhLlN3aXRjaD1OPWZ1bmN0aW9uKCl7ZnVuY3Rpb24gYShhLGIsYyl7dGhpcy5zdWJqZWN0PWEsdGhpcy5jYXNlcz1iLHRoaXMub3RoZXJ3aXNlPWN9YmgoYSxlKSxhLnByb3RvdHlwZS5jaGlsZHJlbj1bInN1YmplY3QiLCJjYXNlcyIsIm90aGVyd2lzZSJdLGEucHJvdG90eXBlLmlzU3RhdGVtZW50PVYsYS5wcm90b3R5cGUuanVtcHM9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGUsZixnLGg7YT09bnVsbCYmKGE9e2Jsb2NrOiEwfSksZj10aGlzLmNhc2VzO2ZvcihkPTAsZT1mLmxlbmd0aDtkPGU7ZCsrKXtnPWZbZF0sYz1nWzBdLGI9Z1sxXTtpZihiLmp1bXBzKGEpKXJldHVybiBifXJldHVybihoPXRoaXMub3RoZXJ3aXNlKSE9bnVsbD9oLmp1bXBzKGEpOnZvaWQgMH0sYS5wcm90b3R5cGUubWFrZVJldHVybj1mdW5jdGlvbigpe3ZhciBhLGIsYyxkLGU7ZD10aGlzLmNhc2VzO2ZvcihiPTAsYz1kLmxlbmd0aDtiPGM7YisrKWE9ZFtiXSxhWzFdLm1ha2VSZXR1cm4oKTsoZT10aGlzLm90aGVyd2lzZSkhPW51bGwmJmUubWFrZVJldHVybigpO3JldHVybiB0aGlzfSxhLnByb3RvdHlwZS5jb21waWxlTm9kZT1mdW5jdGlvbihhKXt2YXIgYixjLGQsZSxmLGcsaCxpLGosayxsLG0sbixvLHAscTtpPWEuaW5kZW50K08saj1hLmluZGVudD1pK08sZD10aGlzLnRhYisoInN3aXRjaCAoIisoKChuPXRoaXMuc3ViamVjdCkhPW51bGw/bi5jb21waWxlKGEseCk6dm9pZCAwKXx8ITEpKyIpIHtcbiIpLG89dGhpcy5jYXNlcztmb3IoaD0wLGw9by5sZW5ndGg7aDxsO2grKyl7cD1vW2hdLGY9cFswXSxiPXBbMV0scT0kKFtmXSk7Zm9yKGs9MCxtPXEubGVuZ3RoO2s8bTtrKyspZT1xW2tdLHRoaXMuc3ViamVjdHx8KGU9ZS5pbnZlcnQoKSksZCs9aSsoImNhc2UgIitlLmNvbXBpbGUoYSx4KSsiOlxuIik7aWYoYz1iLmNvbXBpbGUoYSx5KSlkKz1jKyJcbiI7aWYoaD09PXRoaXMuY2FzZXMubGVuZ3RoLTEmJiF0aGlzLm90aGVyd2lzZSlicmVhaztnPXRoaXMubGFzdE5vbkNvbW1lbnQoYi5leHByZXNzaW9ucyk7aWYoZyBpbnN0YW5jZW9mIEl8fGcgaW5zdGFuY2VvZiB6JiZnLmp1bXBzKCkmJmcudmFsdWUhPT0iZGVidWdnZXIiKWNvbnRpbnVlO2QrPWorImJyZWFrO1xuIn10aGlzLm90aGVyd2lzZSYmdGhpcy5vdGhlcndpc2UuZXhwcmVzc2lvbnMubGVuZ3RoJiYoZCs9aSsoImRlZmF1bHQ6XG4iK3RoaXMub3RoZXJ3aXNlLmNvbXBpbGUoYSx5KSsiXG4iKSk7cmV0dXJuIGQrdGhpcy50YWIrIn0ifTtyZXR1cm4gYX0oKSxhLklmPXE9ZnVuY3Rpb24oKXtmdW5jdGlvbiBhKGEsYixjKXt0aGlzLmJvZHk9YixjPT1udWxsJiYoYz17fSksdGhpcy5jb25kaXRpb249Yy50eXBlPT09InVubGVzcyI/YS5pbnZlcnQoKTphLHRoaXMuZWxzZUJvZHk9bnVsbCx0aGlzLmlzQ2hhaW49ITEsdGhpcy5zb2FrPWMuc29ha31iaChhLGUpLGEucHJvdG90eXBlLmNoaWxkcmVuPVsiY29uZGl0aW9uIiwiYm9keSIsImVsc2VCb2R5Il0sYS5wcm90b3R5cGUuYm9keU5vZGU9ZnVuY3Rpb24oKXt2YXIgYTtyZXR1cm4oYT10aGlzLmJvZHkpIT1udWxsP2EudW53cmFwKCk6dm9pZCAwfSxhLnByb3RvdHlwZS5lbHNlQm9keU5vZGU9ZnVuY3Rpb24oKXt2YXIgYTtyZXR1cm4oYT10aGlzLmVsc2VCb2R5KSE9bnVsbD9hLnVud3JhcCgpOnZvaWQgMH0sYS5wcm90b3R5cGUuYWRkRWxzZT1mdW5jdGlvbihiKXt0aGlzLmlzQ2hhaW4/dGhpcy5lbHNlQm9keU5vZGUoKS5hZGRFbHNlKGIpOih0aGlzLmlzQ2hhaW49YiBpbnN0YW5jZW9mIGEsdGhpcy5lbHNlQm9keT10aGlzLmVuc3VyZUJsb2NrKGIpKTtyZXR1cm4gdGhpc30sYS5wcm90b3R5cGUuaXNTdGF0ZW1lbnQ9ZnVuY3Rpb24oYSl7dmFyIGI7cmV0dXJuKGEhPW51bGw/YS5sZXZlbDp2b2lkIDApPT09eXx8dGhpcy5ib2R5Tm9kZSgpLmlzU3RhdGVtZW50KGEpfHwoKGI9dGhpcy5lbHNlQm9keU5vZGUoKSkhPW51bGw/Yi5pc1N0YXRlbWVudChhKTp2b2lkIDApfSxhLnByb3RvdHlwZS5qdW1wcz1mdW5jdGlvbihhKXt2YXIgYjtyZXR1cm4gdGhpcy5ib2R5Lmp1bXBzKGEpfHwoKGI9dGhpcy5lbHNlQm9keSkhPW51bGw/Yi5qdW1wcyhhKTp2b2lkIDApfSxhLnByb3RvdHlwZS5jb21waWxlTm9kZT1mdW5jdGlvbihhKXtyZXR1cm4gdGhpcy5pc1N0YXRlbWVudChhKT90aGlzLmNvbXBpbGVTdGF0ZW1lbnQoYSk6dGhpcy5jb21waWxlRXhwcmVzc2lvbihhKX0sYS5wcm90b3R5cGUubWFrZVJldHVybj1mdW5jdGlvbigpe3RoaXMuYm9keSYmKHRoaXMuYm9keT1uZXcgZihbdGhpcy5ib2R5Lm1ha2VSZXR1cm4oKV0pKSx0aGlzLmVsc2VCb2R5JiYodGhpcy5lbHNlQm9keT1uZXcgZihbdGhpcy5lbHNlQm9keS5tYWtlUmV0dXJuKCldKSk7cmV0dXJuIHRoaXN9LGEucHJvdG90eXBlLmVuc3VyZUJsb2NrPWZ1bmN0aW9uKGEpe3JldHVybiBhIGluc3RhbmNlb2YgZj9hOm5ldyBmKFthXSl9LGEucHJvdG90eXBlLmNvbXBpbGVTdGF0ZW1lbnQ9ZnVuY3Rpb24oYSl7dmFyIGIsYyxkLGU7Yz1YKGEsImNoYWluQ2hpbGQiKSxkPXRoaXMuY29uZGl0aW9uLmNvbXBpbGUoYSx4KSxhLmluZGVudCs9TyxiPXRoaXMuZW5zdXJlQmxvY2sodGhpcy5ib2R5KS5jb21waWxlKGEpLGImJihiPSJcbiIrYisiXG4iK3RoaXMudGFiKSxlPSJpZiAoIitkKyIpIHsiK2IrIn0iLGN8fChlPXRoaXMudGFiK2UpO2lmKCF0aGlzLmVsc2VCb2R5KXJldHVybiBlO3JldHVybiBlKyIgZWxzZSAiKyh0aGlzLmlzQ2hhaW4/KGEuaW5kZW50PXRoaXMudGFiLGEuY2hhaW5DaGlsZD0hMCx0aGlzLmVsc2VCb2R5LnVud3JhcCgpLmNvbXBpbGUoYSx5KSk6IntcbiIrdGhpcy5lbHNlQm9keS5jb21waWxlKGEseSkrIlxuIit0aGlzLnRhYisifSIpfSxhLnByb3RvdHlwZS5jb21waWxlRXhwcmVzc2lvbj1mdW5jdGlvbihhKXt2YXIgYixjLGQsZTtlPXRoaXMuY29uZGl0aW9uLmNvbXBpbGUoYSx1KSxjPXRoaXMuYm9keU5vZGUoKS5jb21waWxlKGEsdiksYj10aGlzLmVsc2VCb2R5Tm9kZSgpP3RoaXMuZWxzZUJvZHlOb2RlKCkuY29tcGlsZShhLHYpOiJ2b2lkIDAiLGQ9IiIrZSsiID8gIitjKyIgOiAiK2I7cmV0dXJuIGEubGV2ZWw+PXU/IigiK2QrIikiOmR9LGEucHJvdG90eXBlLnVuZm9sZFNvYWs9ZnVuY3Rpb24oKXtyZXR1cm4gdGhpcy5zb2FrJiZ0aGlzfTtyZXR1cm4gYX0oKSxHPXt3cmFwOmZ1bmN0aW9uKGEsYyl7aWYoYy5pc0VtcHR5KCl8fF8oYy5leHByZXNzaW9ucykuanVtcHMoKSlyZXR1cm4gYztyZXR1cm4gYy5wdXNoKG5ldyBnKG5ldyBUKG5ldyB6KGEpLFtuZXcgYihuZXcgeigicHVzaCIpKV0pLFtjLnBvcCgpXSkpfX0saT17d3JhcDpmdW5jdGlvbihhLGMsZCl7dmFyIGUsaCxpLGssbDtpZihhLmp1bXBzKCkpcmV0dXJuIGE7aT1uZXcgaihbXSxmLndyYXAoW2FdKSksZT1bXTtpZigoaz1hLmNvbnRhaW5zKHRoaXMubGl0ZXJhbEFyZ3MpKXx8YS5jb250YWlucyh0aGlzLmxpdGVyYWxUaGlzKSlsPW5ldyB6KGs/ImFwcGx5IjoiY2FsbCIpLGU9W25ldyB6KCJ0aGlzIildLGsmJmUucHVzaChuZXcgeigiYXJndW1lbnRzIikpLGk9bmV3IFQoaSxbbmV3IGIobCldKTtpLm5vUmV0dXJuPWQsaD1uZXcgZyhpLGUpO3JldHVybiBjP2Yud3JhcChbaF0pOmh9LGxpdGVyYWxBcmdzOmZ1bmN0aW9uKGEpe3JldHVybiBhIGluc3RhbmNlb2YgeiYmYS52YWx1ZT09PSJhcmd1bWVudHMiJiYhYS5hc0tleX0sbGl0ZXJhbFRoaXM6ZnVuY3Rpb24oYSl7cmV0dXJuIGEgaW5zdGFuY2VvZiB6JiZhLnZhbHVlPT09InRoaXMiJiYhYS5hc0tleXx8YSBpbnN0YW5jZW9mIGomJmEuYm91bmR9fSxiZD1mdW5jdGlvbihhLGIsYyl7dmFyIGQ7aWYoISEoZD1iW2NdLnVuZm9sZFNvYWsoYSkpKXtiW2NdPWQuYm9keSxkLmJvZHk9bmV3IFQoYik7cmV0dXJuIGR9fSxTPXsiZXh0ZW5kcyI6ImZ1bmN0aW9uKGNoaWxkLCBwYXJlbnQpIHtcbiAgZm9yICh2YXIga2V5IGluIHBhcmVudCkgeyBpZiAoX19oYXNQcm9wLmNhbGwocGFyZW50LCBrZXkpKSBjaGlsZFtrZXldID0gcGFyZW50W2tleV07IH1cbiAgZnVuY3Rpb24gY3RvcigpIHsgdGhpcy5jb25zdHJ1Y3RvciA9IGNoaWxkOyB9XG4gIGN0b3IucHJvdG90eXBlID0gcGFyZW50LnByb3RvdHlwZTtcbiAgY2hpbGQucHJvdG90eXBlID0gbmV3IGN0b3I7XG4gIGNoaWxkLl9fc3VwZXJfXyA9IHBhcmVudC5wcm90b3R5cGU7XG4gIHJldHVybiBjaGlsZDtcbn0iLGJpbmQ6ImZ1bmN0aW9uKGZuLCBtZSl7IHJldHVybiBmdW5jdGlvbigpeyByZXR1cm4gZm4uYXBwbHkobWUsIGFyZ3VtZW50cyk7IH07IH0iLGluZGV4T2Y6IkFycmF5LnByb3RvdHlwZS5pbmRleE9mIHx8IGZ1bmN0aW9uKGl0ZW0pIHtcbiAgZm9yICh2YXIgaSA9IDAsIGwgPSB0aGlzLmxlbmd0aDsgaSA8IGw7IGkrKykge1xuICAgIGlmICh0aGlzW2ldID09PSBpdGVtKSByZXR1cm4gaTtcbiAgfVxuICByZXR1cm4gLTE7XG59IixoYXNQcm9wOiJPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5IixzbGljZToiQXJyYXkucHJvdG90eXBlLnNsaWNlIn0seT0xLHg9Mix2PTMsdT00LHc9NSx0PTYsTz0iICAiLG89L15bJEEtWmEtel9ceDdmLVx1ZmZmZl1bJFx3XHg3Zi1cdWZmZmZdKiQvLEo9L15bKy1dP1xkKyQvLHA9L15bJyJdLyxiZT1mdW5jdGlvbihhKXt2YXIgYjtiPSJfXyIrYSxLLnJvb3QuYXNzaWduKGIsU1thXSk7cmV0dXJuIGJ9LGJiPWZ1bmN0aW9uKGEsYil7cmV0dXJuIGEucmVwbGFjZSgvXG4vZywiJCYiK2IpfX0pLmNhbGwodGhpcyl9LHJlcXVpcmVbIi4vY29mZmVlLXNjcmlwdCJdPW5ldyBmdW5jdGlvbigpe3ZhciBhPXRoaXM7KGZ1bmN0aW9uKCl7dmFyIGIsYyxkLGUsZixnLGgsaSxqO2U9cmVxdWlyZSgiZnMiKSxoPXJlcXVpcmUoInBhdGgiKSxpPXJlcXVpcmUoInZtIiksaj1yZXF1aXJlKCIuL2xleGVyIiksYj1qLkxleGVyLGM9ai5SRVNFUlZFRCxnPXJlcXVpcmUoIi4vcGFyc2VyIikucGFyc2VyLHJlcXVpcmUuZXh0ZW5zaW9ucz9yZXF1aXJlLmV4dGVuc2lvbnNbIi5jb2ZmZWUiXT1mdW5jdGlvbihhLGIpe3ZhciBjO2M9ZChlLnJlYWRGaWxlU3luYyhiLCJ1dGY4Iikse2ZpbGVuYW1lOmJ9KTtyZXR1cm4gYS5fY29tcGlsZShjLGIpfTpyZXF1aXJlLnJlZ2lzdGVyRXh0ZW5zaW9uJiZyZXF1aXJlLnJlZ2lzdGVyRXh0ZW5zaW9uKCIuY29mZmVlIixmdW5jdGlvbihhKXtyZXR1cm4gZChhKX0pLGEuVkVSU0lPTj0iMS4xLjEiLGEuUkVTRVJWRUQ9YyxhLmhlbHBlcnM9cmVxdWlyZSgiLi9oZWxwZXJzIiksYS5jb21waWxlPWQ9ZnVuY3Rpb24oYSxiKXtiPT1udWxsJiYoYj17fSk7dHJ5e3JldHVybiBnLnBhcnNlKGYudG9rZW5pemUoYSkpLmNvbXBpbGUoYil9Y2F0Y2goYyl7Yi5maWxlbmFtZSYmKGMubWVzc2FnZT0iSW4gIitiLmZpbGVuYW1lKyIsICIrYy5tZXNzYWdlKTt0aHJvdyBjfX0sYS50b2tlbnM9ZnVuY3Rpb24oYSxiKXtyZXR1cm4gZi50b2tlbml6ZShhLGIpfSxhLm5vZGVzPWZ1bmN0aW9uKGEsYil7cmV0dXJuIHR5cGVvZiBhPT0ic3RyaW5nIj9nLnBhcnNlKGYudG9rZW5pemUoYSxiKSk6Zy5wYXJzZShhKX0sYS5ydW49ZnVuY3Rpb24oYSxiKXt2YXIgYyxmO2Y9bW9kdWxlO3doaWxlKGYucGFyZW50KWY9Zi5wYXJlbnQ7Zi5maWxlbmFtZT1wcm9jZXNzLmFyZ3ZbMV09Yi5maWxlbmFtZT9lLnJlYWxwYXRoU3luYyhiLmZpbGVuYW1lKToiLiIsZi5tb2R1bGVDYWNoZSYmKGYubW9kdWxlQ2FjaGU9e30pLHByb2Nlc3MuYmluZGluZygibmF0aXZlcyIpLm1vZHVsZSYmKGM9cmVxdWlyZSgibW9kdWxlIikuTW9kdWxlLGYucGF0aHM9Yy5fbm9kZU1vZHVsZVBhdGhzKGguZGlybmFtZShiLmZpbGVuYW1lKSkpO3JldHVybiBoLmV4dG5hbWUoZi5maWxlbmFtZSkhPT0iLmNvZmZlZSJ8fHJlcXVpcmUuZXh0ZW5zaW9ucz9mLl9jb21waWxlKGQoYSxiKSxmLmZpbGVuYW1lKTpmLl9jb21waWxlKGEsZi5maWxlbmFtZSl9LGEuZXZhbD1mdW5jdGlvbihhLGIpe3ZhciBjLGUsZjtiPT1udWxsJiYoYj17fSksZj1iLnNhbmRib3g7aWYoIWYpe2Y9e3JlcXVpcmU6cmVxdWlyZSxtb2R1bGU6e2V4cG9ydHM6e319fTtmb3IoYyBpbiBnbG9iYWwpZltjXT1nbG9iYWxbY107Zi5nbG9iYWw9ZixmLmdsb2JhbC5nbG9iYWw9Zi5nbG9iYWwucm9vdD1mLmdsb2JhbC5HTE9CQUw9Zn1mLl9fZmlsZW5hbWU9Yi5maWxlbmFtZXx8ImV2YWwiLGYuX19kaXJuYW1lPWguZGlybmFtZShmLl9fZmlsZW5hbWUpLGU9ZCgiXz0oIithLnRyaW0oKSsiKSIsYik7cmV0dXJuIGkucnVuSW5OZXdDb250ZXh0KGUsZixmLl9fZmlsZW5hbWUpfSxmPW5ldyBiLGcubGV4ZXI9e2xleDpmdW5jdGlvbigpe3ZhciBhLGI7Yj10aGlzLnRva2Vuc1t0aGlzLnBvcysrXXx8WyIiXSxhPWJbMF0sdGhpcy55eXRleHQ9YlsxXSx0aGlzLnl5bGluZW5vPWJbMl07cmV0dXJuIGF9LHNldElucHV0OmZ1bmN0aW9uKGEpe3RoaXMudG9rZW5zPWE7cmV0dXJuIHRoaXMucG9zPTB9LHVwY29taW5nSW5wdXQ6ZnVuY3Rpb24oKXtyZXR1cm4iIn19LGcueXk9cmVxdWlyZSgiLi9ub2RlcyIpfSkuY2FsbCh0aGlzKX0scmVxdWlyZVsiLi9icm93c2VyIl09bmV3IGZ1bmN0aW9uKCl7dmFyIGV4cG9ydHM9dGhpczsoZnVuY3Rpb24oKXt2YXIgQ29mZmVlU2NyaXB0LHJ1blNjcmlwdHM7Q29mZmVlU2NyaXB0PXJlcXVpcmUoIi4vY29mZmVlLXNjcmlwdCIpLENvZmZlZVNjcmlwdC5yZXF1aXJlPXJlcXVpcmUsQ29mZmVlU2NyaXB0LmV2YWw9ZnVuY3Rpb24oY29kZSxvcHRpb25zKXtyZXR1cm4gZXZhbChDb2ZmZWVTY3JpcHQuY29tcGlsZShjb2RlLG9wdGlvbnMpKX0sQ29mZmVlU2NyaXB0LnJ1bj1mdW5jdGlvbihhLGIpe2I9PW51bGwmJihiPXt9KSxiLmJhcmU9ITA7cmV0dXJuIEZ1bmN0aW9uKENvZmZlZVNjcmlwdC5jb21waWxlKGEsYikpKCl9O3R5cGVvZiB3aW5kb3chPSJ1bmRlZmluZWQiJiZ3aW5kb3chPT1udWxsJiYoQ29mZmVlU2NyaXB0LmxvYWQ9ZnVuY3Rpb24oYSxiKXt2YXIgYztjPW5ldyh3aW5kb3cuQWN0aXZlWE9iamVjdHx8WE1MSHR0cFJlcXVlc3QpKCJNaWNyb3NvZnQuWE1MSFRUUCIpLGMub3BlbigiR0VUIixhLCEwKSwib3ZlcnJpZGVNaW1lVHlwZSJpbiBjJiZjLm92ZXJyaWRlTWltZVR5cGUoInRleHQvcGxhaW4iKSxjLm9ucmVhZHlzdGF0ZWNoYW5nZT1mdW5jdGlvbigpe3ZhciBkO2lmKGMucmVhZHlTdGF0ZT09PTQpe2lmKChkPWMuc3RhdHVzKT09PTB8fGQ9PT0yMDApQ29mZmVlU2NyaXB0LnJ1bihjLnJlc3BvbnNlVGV4dCk7ZWxzZSB0aHJvdyBuZXcgRXJyb3IoIkNvdWxkIG5vdCBsb2FkICIrYSk7aWYoYilyZXR1cm4gYigpfX07cmV0dXJuIGMuc2VuZChudWxsKX0scnVuU2NyaXB0cz1mdW5jdGlvbigpe3ZhciBhLGIsYyxkLGUsZjtmPWRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKCJzY3JpcHQiKSxhPWZ1bmN0aW9uKCl7dmFyIGEsYixjO2M9W107Zm9yKGE9MCxiPWYubGVuZ3RoO2E8YjthKyspZT1mW2FdLGUudHlwZT09PSJ0ZXh0L2NvZmZlZXNjcmlwdCImJmMucHVzaChlKTtyZXR1cm4gY30oKSxjPTAsZD1hLmxlbmd0aCwoYj1mdW5jdGlvbigpe3ZhciBkO2Q9YVtjKytdO2lmKChkIT1udWxsP2QudHlwZTp2b2lkIDApPT09InRleHQvY29mZmVlc2NyaXB0Iil7aWYoZC5zcmMpcmV0dXJuIENvZmZlZVNjcmlwdC5sb2FkKGQuc3JjLGIpO0NvZmZlZVNjcmlwdC5ydW4oZC5pbm5lckhUTUwpO3JldHVybiBiKCl9fSkoKTtyZXR1cm4gbnVsbH0sd2luZG93LmFkZEV2ZW50TGlzdGVuZXI/YWRkRXZlbnRMaXN0ZW5lcigiRE9NQ29udGVudExvYWRlZCIscnVuU2NyaXB0cywhMSk6YXR0YWNoRXZlbnQoIm9ubG9hZCIscnVuU2NyaXB0cykpfSkuY2FsbCh0aGlzKX07cmV0dXJuIHJlcXVpcmVbIi4vY29mZmVlLXNjcmlwdCJdfSgp", "content_type": "application/javascript"}, "js-libraries/jquery-mobile/jquery.mobile-1.0b3.min.css": {"data": "", "content_type": "text/css"}, "images/icons-18-white.png": {"data": "iVBORw0KGgoAAAANSUhEUgAAAi4AAAASBAMAAACOQ0gTAAAAA3NCSVQICAjb4U/gAAAAMFBMVEX///////////////////////////////////////////////////////////////9Or7hAAAAAEHRSTlMAESIzRFVmd4iZqrvM3e7/dpUBFQAAAAlwSFlzAAAK6wAACusBgosNWgAAABZ0RVh0Q3JlYXRpb24gVGltZQAxMC8xNi8xMNNnoNMAAAAcdEVYdFNvZnR3YXJlAEFkb2JlIEZpcmV3b3JrcyBDUzVxteM2AAACjUlEQVRYhe1XMW/TQBQ+Y9c4GJQwwRChDAxMLRJsRU6FMjDR/gJqZgYj/gBhQUgdzNCFBdqJbkUUsXhIAQkJMVgwIMQASJVYKuGo0IhS168OBOj33qlJIwQC+VuS+/Lu3vN337tzlCpQoMB/iRs+Z8wlEXSLjcdPDpXr6C6/RX1nGzVlVpCyfRGloQbBPlzZnKeleb5yxp/aiOdwVjJI8hOCWWzyVOnPcqjvetUV5T1CaqwjooK1AUqTOLYCQy+ltylKNU7JOs5xkmwLiOmMHmBIuU3lNkt1x2eERbxmlyZ+fO2vi5edSrB6ZRPPIRl1u4bjqq+Mpzxo8QXmIiLUxUyeJxs4p7UaM10ooilgNLqY9JLlPnifN4t5t/fleIMaZ3mtPDj5KJwccMMIIlcKH1lNd1Q1Bcao7P+1Qd+Ic/Q6WQfqUId3ib15WPbR+fe60ndgJld89TJQV5vhFIuq9T7DPPoL/FLOGeYhj5hdug99E8YlaZdgizWETRdj7MfSk1FMbhFVAoKNrs+ZH3Bhd814xnJ5vvMZCOmXM8KJRtIM2dY5WS/iUkTRQ1zxN+kiVZBKjWYxFqbRZbKpjOsQ5LYVuwZyOHgGSV2MmAjrcYQn9na+DNdHQbdruGHY9pgJtpGuj8aWlY3VH0BrfEfpk4YE5K2Byer06h3VgPoD566Xn7Lc7vwkVvWvPJdwu7tRuYDXhpVOyCLDZRhqzt1cFyyxRY9jugfUnnTR3NOTmntas4vS7gwjzECae7rrfx+Dwk2xUJk5WqNLaxZfV4zugYE9u1OXxi5l9xaQ73UlX0TZTUENAc173ZFolgVZC2Kee63v0leU5QNxupED5Rx5M0iRfwXyf0CBAgX+QWwDZAghcTgXRAkAAAAASUVORK5CYII=", "content_type": "image/png"}}, "README": "A tablet/phone application for testing students in reading skills.\n\nCurrent version uses localStorage and google spreadsheets for loading and configuration of the app.\n\n___\n\nThe rest of this README is about couchapps:\n\n___\n\nCouchApps are web applications which can be served directly from [CouchDB](http://couchdb.apache.org). This gives them the nice property of replicating just like any other data stored in CouchDB. They are also simple to write as they can use the built-in jQuery libraries and plugins that ship with CouchDB.\n\n[More info about CouchApps here.](http://couchapp.org)\n\n## Deploying this app\n\nAssuming you just cloned this app from git, and you have changed into the app directory in your terminal, you want to push it to your CouchDB with the CouchApp command line tool, like this:\n\n    couchapp push . http://name:password@hostname:5984/mydatabase\n\nIf you don't have a password on your CouchDB (admin party) you can do it like this (but it's a bad, idea, set a password):\n\n    couchapp push . http://hostname:5984/mydatabase\n\nIf you get sick of typing the URL, you should setup a `.couchapprc` file in the root of your directory. Remember not to check this into version control as it will have passwords in it.\n\nThe `.couchapprc` file should have contents like this:\n\n    {\n      \"env\" : {\n        \"public\" : {\n          \"db\" : \"http://name:pass@mycouch.couchone.com/mydatabase\"\n        },\n        \"default\" : {\n          \"db\" : \"http://name:pass@localhost:5984/mydatabase\"\n        }\n      }\n    }\n\nNow that you have the `.couchapprc` file set up, you can push your app to the CouchDB as simply as:\n\n    couchapp push\n\nThis pushes to the `default` as specified. To push to the `public` you'd run:\n\n    couchapp push public\n\nOf course you can continue to add more deployment targets as you see fit, and give them whatever names you like.", "_id": "_design/app", "Makefile": "VER = $(shell cat version.txt)\nSED_VER = sed \"s/@VERSION/${VER}/\"\n\nDIR = _attachments/combined-javascript/\nNAME = egra\nMAX = ${DIR}/${NAME}.js\nMIN = ${DIR}/${NAME}.min.js\n#CSS = ${NAME}.css\n#CSSMIN = ${NAME}.min.css\n\nFILES = _attachments/js-libraries/jquery-1.6.2.min.js \\\n  _attachments/js-libraries/mustache.js \\\n  _attachments/js-libraries/handlebars.js \\\n  _attachments/js-libraries/inflection.js \\\n  _attachments/js-libraries/underscore.js \\\n  _attachments/models/template.js \\\n  _attachments/models/assessment.js \\\n  _attachments/models/jqueryMobilePage.js \\\n  _attachments/models/scorer.js \\\n  _attachments/models/timer.js \\\n  _attachments/egra.js \\\n  _attachments/js-libraries/jquery-mobile/jquery.mobile-1.0b2.min.js \\\n  _attachments/css.js \\\n\n#CSSFILES =  themes/default/jquery.mobile.theme.css \\\n  themes/default/jquery.mobile.core.css \\\n  themes/default/jquery.mobile.transitions.css \\\n  themes/default/jquery.mobile.grids.css \\\n  themes/default/jquery.mobile.headerfooter.css \\\n  themes/default/jquery.mobile.navbar.css \\\n  themes/default/jquery.mobile.button.css \\\n  themes/default/jquery.mobile.collapsible.css \\\n  themes/default/jquery.mobile.controlgroup.css \\\n  themes/default/jquery.mobile.dialog.css \\\n  themes/default/jquery.mobile.forms.checkboxradio.css \\\n  themes/default/jquery.mobile.forms.fieldcontain.css \\\n  themes/default/jquery.mobile.forms.select.css \\\n  themes/default/jquery.mobile.forms.textinput.css \\\n  themes/default/jquery.mobile.listview.css \\\n  themes/default/jquery.mobile.forms.slider.css\n\nall: combined min css cssmin\n\nclean:\n\t@@rm -rf ${DIR}*\n\n#css:\n#\t@@head -8 js/jquery.mobile.core.js | ${SED_VER} > ${CSS}\n#\t@@cat ${CSSFILES} >> ${CSS}\n\n#cssmin: css\n#\t@@head -8 js/jquery.mobile.core.js | ${SED_VER} > ${CSSMIN}\n#\t@@java -jar build/yuicompressor-2.4.4.jar --type css ${CSS} >> ${CSSMIN}\n\ncombined:\n\t@@cat ${FILES} > ${MAX}\n\nmin: combined\n\t@@java -jar scripts/google-compiler-20100917.jar --js ${MAX} --warning_level QUIET --js_output_file ${MIN}.tmp\n\t@@cat ${MIN}.tmp > ${MIN}\n\t@@rm -f ${MIN}.tmp\n\n#zip: clean min cssmin\n#\t@@mkdir -p ${DIR}\n#\t@@cp ${DIR}*.js ${DIR}/\n#\t@@cp ${DIR}*.css ${DIR}/\n#\t@@cp -R themes/default/images ${DIR}/\n#\t@@zip -r ${DIR}.zip ${DIR}\n#\n## Used by the jQuery team to deploy a build to the CDN\n#deploy: zip\n#\t# Deploy to CDN\n#\t@@mv ${DIR} ${VER}\n#\t@@cp ${DIR}.zip ${VER}/\n#\t@@scp -r ${VER} jqadmin@code.origin.jquery.com:/var/www/html/code.jquery.com/mobile/\n#\t@@mv ${VER} ${DIR}\n#\n#\t# Deploy Demos\n#\t@@mkdir -p ${VER}\n#\t@@cp -r index.html themes experiments docs ${VER}/\n#\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|src=\"../../../js|src=\"js|g' {} \\;\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|src=\"../../js|src=\"js|g' {} \\;\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|src=\"../js|src=\"js|g' {} \\;\n#\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|media=\"only all\"||g' {} \\;\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|rel=\"stylesheet\"  href=\"../../../|rel=\"stylesheet\"  href=\"|g' {} \\;\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|rel=\"stylesheet\"  href=\"../../|rel=\"stylesheet\"  href=\"|g' {} \\;\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|rel=\"stylesheet\"  href=\"../|rel=\"stylesheet\"  href=\"|g' {} \\;\n#\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|href=\"themes/default/\"|href=\"http://code.jquery.com/mobile/${VER}/${DIR}.min.css\"|g' {} \\;\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|src=\"js/jquery.js\"|src=\"http://code.jquery.com/jquery-1.5.min.js\"|' {} \\;\n#\t@@find ${VER} -type f -name '*.html' -exec sed -i \"\" -e 's|src=\"js/\"|src=\"http://code.jquery.com/mobile/${VER}/${DIR}.min.js\"|g' {} \\;\n#\n#\t@@scp -r ${VER} jqadmin@jquerymobile.com:/srv/jquerymobile.com/htdocs/demos/", "couchapp": {"manifest": ["couchapp.json", "file.watchr", "Makefile", "README.md", "version"], "signatures": {"models/timer.js": "79e44fbe71c551d216c47b90eb949574", "tests/testData/Assessment.TEST EGRA Prototype.School": "f7222e1a57e3367564e4648cabd5c545", "images/icon-search-black.png": "9b2d886c3feb5d92911e9d4a2ff2bca2", "js-libraries/handlebars.js": "51e4987ce3625a60bbec822b1c5ef872", "images/form-radio-on.png": "b995f8a72a033e14740632c8da4b0acf", "google-spreadsheet-javascript/tests/tests.js": "b1f9e061de8361615b1b1ebc3fab54ab", "images/TangerineIcon.png": "33c55ac4322f0dbde1ce6d8c1f6aff39", "tests/tests.coffee": "f9b67ae0e13218ee32d87c99dab5c115", "models/Copy of jqueryMobilePage.coffee": "2e62797237879414ab54dbf3ee37020f", "models/scorer.coffee": "12eff3e4b8135b1d72c79835fd6b3109", "tests/testData/Assessment.TEST EGRA Prototype.DateTime": "d0f7edd9f8100e327421be252a090e57", "tests/testData/Assessment.TEST EGRA Prototype.Results": "149f79ea0a7ab38dee2135f5eaae3dfd", "js-libraries/jquery-1.6.2.min.js": "a1a8cb16a060f6280a767187fd22e037", "images/ajax-loader.png": "5673b0e9f616ed3fe12a1a388f6aa019", "google-spreadsheet-javascript/tests/testsCallbackData.json": "b439bb02e81d9fb713dac497f868cc12", "images/icons-36-black.png": "c9b81e171c0dc394a40eaa319fd09f4e", "google-spreadsheet-javascript/google-spreadsheet.js": "509c7710a3e9ad143ee7aff02d70fbd0", "js-libraries/jquery-mobile/images/icons-36-black.png": "8dd770dee069a005007b32fc5bb0cfef", "js-libraries/jquery.couch.js": "9bd4b35aa8bb81dd3551381538305e1a", "models/jqueryMobilePage.js": "7750cc4d8d12256ee796a48ea91e135a", "js-libraries/inflection.js": "ed0c8ae9b540193a80951bfa3f546c9b", "google-spreadsheet-javascript/sample.html": "efee89471900dfee5422838c39dc054b", "models/assessment.js": "8061e751da8faf245a4440a58889014c", "js-libraries/jquery-mobile/jquery.mobile-1.0b2.css": "6a35036931ab72a7a4bb8a385a04758a", "models/template.coffee": "d41d8cd98f00b204e9800998ecf8427e", "js-libraries/jquery-mobile/jquery.mobile-1.0b3.css": "703a66887e06100377298cf9d978bc62", "js-libraries/jquery-mobile/jquery.mobile-1.0b2.js": "45c9f2e1aa0362ab5a3f7b0278d56395", "combined-javascript/egra.js": "c71e78cb7e6ff3ea4cead1367314a560", "images/form-check-off.png": "80754b2c48dcf0bf1986c9bf3d842621", "images/icons-36-white.png": "b7cd3f25d8a1a915f532676531f4877e", "models/scorer.js": "bafc23869551cf78375225494ac8e999", "tests/testData/Assessment.TEST EGRA Prototype": "2219c8361b0a4ae9ec35d9abb82326f3", "tests/tests.js": "a176b3a7a67ba5787ae322d168abe62a", "js-libraries/jquery-mobile/images/icon-search-black.png": "9b2d886c3feb5d92911e9d4a2ff2bca2", "google-spreadsheet-javascript/tests/tests.coffee": "1c963c5dc19efab087dd8f9f1297cbbf", "google-spreadsheet-javascript/tests/tests.html": "a636e2757289645e2473219441e8e8d5", "tests/qunit.js": "663f37f534c3d1e161c828caea9c85ce", "models/assessment.coffee": "7a6687d094bedff8e491bbe2fed2bd7c", "models/jqueryMobilePage.coffee": "ae0bb12074994cbb2962a356cc54b0cc", "tests/testData/Assessment.TEST EGRA Prototype.Instructions": "04b68faa1a1395f1202803c265de751c", "js-libraries/jquery-mobile/jquery.mobile-1.0b3.min.js": "fcfc50f83cddeb41498330e93937da73", "js-libraries/jquery-mobile/jquery.mobile-1.0b3.js": "5f9a3f5f5c96243527505af9832e37b4", "images/icons-18-black.png": "0462f8f23e9239e7f1d78c0cc723d27b", "models/timer.coffee": "49f4426f0e4f5aa2b8afa5edb97c7387", "js-libraries/jquery-mobile/jquery.mobile-1.0b2.min.js": "7ef963c4dec9f4f2f6b17a901d9de14f", "css.coffee": "9b077712456a975747b0220e465ea2dd", "tests/testData/Assessment.TEST EGRA Prototype.StudentInformation": "45100db2108e9a6c1f45c1991087126e", "google-spreadsheet-javascript/tests/testsCallbackCellsData.json": "eef48cdfeb50befe13e2189d2a40939c", "js-libraries/jquery-mobile/images/icons-18-black.png": "0b27bb0de469c0023fe3442b36ed11e5", "tests/qunit.css": "ddc2724ee7cba64f23e623fbc8526942", "css.js": "f64b5969776592adf86ffc96ef97af62", "images/form-check-on.png": "344eff1f2dda56e6b083ece4f49bd950", "models/template.js": "7215ee9c7d9dc229d2921a40e899ec5f", "images/form-radio-off.png": "cf8f7f41adaf2b6c926b3130b994076a", "js-libraries/jquery-mobile/jquery.mobile-1.0b2.min.css": "d2c409c02d0726e0851b1f00a9376d39", "js-libraries/jquery-mobile/images/icons-18-white.png": "30ee929b6c0e075d046347bcdd8ff807", "index.html": "6260967fdaa8a19b7b5e57a4c96a8545", "js-libraries/jquery-mobile/images/icons-36-white.png": "b731dd7d99265141897ec2fbd49a67d8", "js-libraries/jquery-mobile/images/ajax-loader.png": "5673b0e9f616ed3fe12a1a388f6aa019", "tests/testData/Assessment.TEST EGRA Prototype.Login": "a7bddee744e29a98a09bb45ffd38f3d7", "google-spreadsheet-javascript/google-spreadsheet.coffee": "f92d1f4e6874cabf989f9db8e228dbf3", "google-spreadsheet-javascript/jquery-1.4.4.min.js": "73a9c334c5ca71d70d092b42064f6476", "google-spreadsheet-javascript/tests/qunit.css": "ddc2724ee7cba64f23e623fbc8526942", "tests/index.html": "e57f989f3467a00cea1598a969efbda9", "egra.js": "eafbae428fdeac7c6ef4171fd20199e5", "js-libraries/mustache.js": "ee9ecc57cd9dad955be8eead1a0e0023", "js-libraries/underscore.js": "a94d038961dd4d580d8aaa52f3f1a0ca", "google-spreadsheet-javascript/README.markdown": "0a94e62650cc19d4c6b0288abc06f7de", "tests/testData/Assessment.TEST EGRA Prototype.Letters": "92e648f768af58799a1114b42044b90e", "egra.coffee": "56c93f0d1420779175b7d956e6315de3", "google-spreadsheet-javascript/tests/qunit.js": "663f37f534c3d1e161c828caea9c85ce", "js-libraries/coffee-script.js": "d4fcd4ee5cfd6a9fd271bef5a15f1192", "js-libraries/jquery-mobile/jquery.mobile-1.0b3.min.css": "4b3c3b3d95f490e21c6c3c5e6e97a514", "images/icons-18-white.png": "614499ccad60661fe14293350ce8f1cc"}, "name": "EGRA", "objects": {}, "description": "Early Grade Reading Assessment"}}
